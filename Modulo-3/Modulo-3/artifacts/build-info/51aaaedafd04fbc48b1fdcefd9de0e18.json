{
	"id": "51aaaedafd04fbc48b1fdcefd9de0e18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity  ^0.8.0;\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\ncontract Simpleswap is ERC20 {\r\n    constructor() ERC20(\"li\",\"l\"){}\r\n     /// @notice Adds liquidity to the pool\r\n    /// @dev Mints LP tokens proportionally based on token reserves\r\n    /// @param tokenA Address of token A\r\n    /// @param tokenB Address of token B\r\n    /// @param amountADesired Desired amount of token A to add\r\n    /// @param amountBDesired Desired amount of token B to add\r\n    /// @param amountAMin Minimum acceptable amount of token A\r\n    /// @param amountBMin Minimum acceptable amount of token B\r\n    /// @param to Address to receive LP tokens\r\n    /// @param deadline Timestamp after which the transaction is invalid\r\n    /// @return amountA Final amount of token A added\r\n    /// @return amountB Final amount of token B added\r\n    /// @return liquidity Amount of LP tokens minted\r\n\r\n    function addLiquidity(\r\n        address tokenA, \r\n        address tokenB, \r\n        uint amountADesired,\r\n        uint amountBDesired, \r\n        uint amountAMin, \r\n        uint amountBMin, \r\n        address to, \r\n        uint deadline\r\n        ) external returns (uint amountA, uint amountB, uint liquidity){\r\n            require(deadline >=block.timestamp,\"deadlineReached\" );\r\n            liquidity = totalSupply();\r\n            if(liquidity > 0){\r\n                uint256 l1= (amountADesired * liquidity)/ ERC20(tokenA).balanceOf(address(this));\r\n                uint256 l2= (amountBDesired * liquidity)/ ERC20(tokenB).balanceOf(address(this));\r\n                if(l1 < l2) {\r\n                    amountA = amountADesired;\r\n                    amountB = getPrice(tokenA, tokenB)*amountA;\r\n                }else {\r\n                    amountB = amountBDesired;\r\n                    amountA = getPrice(tokenB, tokenA)*amountB;\r\n                }\r\n            }else{\r\n                liquidity = amountADesired;\r\n                amountA = amountADesired;\r\n                amountB = amountBDesired;\r\n            }\r\n            require(amountAMin<=amountA);\r\n            require(amountBMin <=amountB);\r\n            ERC20(tokenA).transferFrom(msg.sender, address(this),amountA);\r\n            ERC20(tokenB).transferFrom(msg.sender, address(this), amountB);\r\n            _mint(to, liquidity);\r\n        }\r\n            /** @notice Removes liquidity and returns tokens to the user\r\n              * @dev Burns LP tokens in exchange for tokenA and tokenB from the pool\r\n              * @param tokenA Address of token A\r\n              * @param tokenB Address of token B\r\n              *  @param liquidity Amount of LP tokens to burn\r\n              * @param amountAMin Minimum acceptable amount of token A\r\n              * @param amountBMin Minimum acceptable amount of token B\r\n              * @param to Address to receive tokens\r\n              * @param deadline Timestamp after which the transaction is invalid\r\n              *@return amountA Amount of token A returned\r\n              *@return amountB Amount of token B returned\r\n           **/ \r\n           \r\n\r\n         function removeLiquidity(\r\n            address tokenA, \r\n            address tokenB, \r\n            uint liquidity, \r\n            uint amountAMin, \r\n            uint amountBMin, \r\n            address to, \r\n            uint deadline\r\n            ) external returns (uint amountA, uint amountB){\r\n                //implementacion goes here\r\n                require(deadline>= block.timestamp, \"deadlineReached\");\r\n                uint256 totalLiquidity = totalSupply();\r\n\r\n                amountA = liquidity * ERC20(tokenA).balanceOf(address(this))/totalLiquidity;\r\n                amountB = liquidity * ERC20(tokenB).balanceOf(address(this))/totalLiquidity;\r\n\r\n                require(amountAMin<=amountA);\r\n                require(amountBMin <=amountB);\r\n\r\n                _burn(msg.sender, liquidity);\r\n                ERC20(tokenA).transfer(to, amountA);\r\n                ERC20(tokenB).transfer(to,amountB);\r\n\r\n            }\r\n          /**\r\n             @notice Swaps exact amount of input token for as much as possible of output token\r\n             @dev Uses a simplified pricing formula, not constant product\r\n             @param amountIn Exact amount of input token to send\r\n             @param amountOutMin Minimum acceptable amount of output token to receive\r\n             @param path Array with [tokenIn, tokenOut]\r\n             @param to Recipient address for output token\r\n             @param deadline Timestamp after which the transaction is invalid\r\n             @return amounts Array of [amountIn, amountOut]\r\n          **/\r\n\r\n            function swapExactTokensForTokens(\r\n                uint amountIn, \r\n                uint amountOutMin, \r\n                address[] calldata path, \r\n                address to, \r\n                uint deadline\r\n                ) external returns (uint[] memory amounts){\r\n                    require(deadline>= block.timestamp, \"deadlineReached\");\r\n                    //implementacion goes here\r\n                    ERC20 tokenA = ERC20(path[0]);\r\n                    ERC20 tokenB = ERC20(path[1]);\r\n                    \r\n                    uint256 amountOut = amountIn * tokenB.balanceOf(address(this))/(amountIn+tokenA.balanceOf(address(this)));\r\n                    require(amountOut>=amountOutMin);\r\n                    tokenA.transferFrom(msg.sender, address(this),0);\r\n                    tokenB.transfer(to, amountOut);\r\n                    amounts = new uint[](2);\r\n                    amounts[0] = amountIn;\r\n                    amounts[1]= amountOut;\r\n                }\r\n                /**\r\n                 * @notice Returns the current price of tokenA in terms of tokenB.\r\n                 * @param tokenA Address of tokenA.\r\n                 * @param tokenB Address of tokenB.\r\n                 * @return price The ratio tokenB/tokenA with 18 decimals.\r\n                 **/\r\n\r\n                function getPrice(address tokenA, address tokenB) public view returns (uint price){\r\n                    //implementacion goes here\r\n                    uint256 amount1 = ERC20(tokenA).balanceOf(address(this));\r\n                    uint256 amount2 = ERC20(tokenB).balanceOf(address(this));\r\n                    return (amount2*1e18)/amount1;\r\n                }\r\n\r\n                /**\r\n                  * @dev Calculates how many tokens will be received in a swap.\r\n                  * @param amountIn Input token amount.\r\n                  * @param reserveIn Reserve of input token.\r\n                  * @param reserveOut Reserve of output token.\r\n                  * @return amountOut Expected output amount.\r\n                 **/\r\n\r\n                function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut){\r\n                    //implementacion goes here\r\n                    amountOut = amountIn * reserveOut/(amountIn+reserveIn);\r\n                }\r\n        \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "prague"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SimpleSwap.sol": {
				"Simpleswap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"details": "Mints LP tokens proportionally based on token reserves",
								"params": {
									"amountADesired": "Desired amount of token A to add",
									"amountAMin": "Minimum acceptable amount of token A",
									"amountBDesired": "Desired amount of token B to add",
									"amountBMin": "Minimum acceptable amount of token B",
									"deadline": "Timestamp after which the transaction is invalid",
									"to": "Address to receive LP tokens",
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"amountA": "Final amount of token A added",
									"amountB": "Final amount of token B added",
									"liquidity": "Amount of LP tokens minted"
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"details": "Calculates how many tokens will be received in a swap.",
								"params": {
									"amountIn": "Input token amount.",
									"reserveIn": "Reserve of input token.",
									"reserveOut": "Reserve of output token."
								},
								"returns": {
									"amountOut": "Expected output amount.*"
								}
							},
							"getPrice(address,address)": {
								"params": {
									"tokenA": "Address of tokenA.",
									"tokenB": "Address of tokenB."
								},
								"returns": {
									"price": "The ratio tokenB/tokenA with 18 decimals.*"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"details": "Burns LP tokens in exchange for tokenA and tokenB from the pool",
								"params": {
									"amountAMin": "Minimum acceptable amount of token A",
									"amountBMin": "Minimum acceptable amount of token B",
									"deadline": "Timestamp after which the transaction is invalid",
									"liquidity": "Amount of LP tokens to burn",
									"to": "Address to receive tokens",
									"tokenA": "Address of token A",
									"tokenB": "Address of token B"
								},
								"returns": {
									"amountA": "Amount of token A returned",
									"amountB": "Amount of token B returned*"
								}
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"details": "Uses a simplified pricing formula, not constant product",
								"params": {
									"amountIn": "Exact amount of input token to send",
									"amountOutMin": "Minimum acceptable amount of output token to receive",
									"deadline": "Timestamp after which the transaction is invalid",
									"path": "Array with [tokenIn, tokenOut]",
									"to": "Recipient address for output token"
								},
								"returns": {
									"amounts": "Array of [amountIn, amountOut]*"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SimpleSwap.sol\":129:6994  contract Simpleswap is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"SimpleSwap.sol\":165:196  constructor() ERC20(\"li\",\"l\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x6c69000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x6c00000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"SimpleSwap.sol\":129:6994  contract Simpleswap is ERC20 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"SimpleSwap.sol\":129:6994  contract Simpleswap is ERC20 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SimpleSwap.sol\":129:6994  contract Simpleswap is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xac41865a\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xac41865a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe8e33700\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x18160ddd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x38ed1739\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"SimpleSwap.sol\":6718:6971  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut){... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":4657:5637  function swapExactTokensForTokens(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":5966:6326  function getPrice(address tokenA, address tokenB) public view returns (uint price){... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":3105:4031  function removeLiquidity(... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":944:2342  function addLiquidity(... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleSwap.sol\":6718:6971  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut){... */\n    tag_23:\n        /* \"SimpleSwap.sol\":6811:6825  uint amountOut */\n      0x00\n        /* \"SimpleSwap.sol\":6941:6950  reserveIn */\n      dup3\n        /* \"SimpleSwap.sol\":6932:6940  amountIn */\n      dup5\n        /* \"SimpleSwap.sol\":6932:6950  amountIn+reserveIn */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"SimpleSwap.sol\":6920:6930  reserveOut */\n      dup3\n        /* \"SimpleSwap.sol\":6909:6917  amountIn */\n      dup6\n        /* \"SimpleSwap.sol\":6909:6930  amountIn * reserveOut */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"SimpleSwap.sol\":6909:6951  amountIn * reserveOut/(amountIn+reserveIn) */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"SimpleSwap.sol\":6897:6951  amountOut = amountIn * reserveOut/(amountIn+reserveIn) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":6718:6971  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"SimpleSwap.sol\":4657:5637  function swapExactTokensForTokens(... */\n    tag_51:\n        /* \"SimpleSwap.sol\":4903:4924  uint[] memory amounts */\n      0x60\n        /* \"SimpleSwap.sol\":4967:4982  block.timestamp */\n      timestamp\n        /* \"SimpleSwap.sol\":4956:4964  deadline */\n      dup3\n        /* \"SimpleSwap.sol\":4956:4982  deadline>= block.timestamp */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":4948:5002  require(deadline>= block.timestamp, \"deadlineReached\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"SimpleSwap.sol\":5073:5085  ERC20 tokenA */\n      0x00\n        /* \"SimpleSwap.sol\":5094:5098  path */\n      dup6\n      dup6\n        /* \"SimpleSwap.sol\":5099:5100  0 */\n      0x00\n        /* \"SimpleSwap.sol\":5094:5101  path[0] */\n      dup2\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n    tag_118:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_121:\n        /* \"SimpleSwap.sol\":5073:5102  ERC20 tokenA = ERC20(path[0]) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":5125:5137  ERC20 tokenB */\n      0x00\n        /* \"SimpleSwap.sol\":5146:5150  path */\n      dup7\n      dup7\n        /* \"SimpleSwap.sol\":5151:5152  1 */\n      0x01\n        /* \"SimpleSwap.sol\":5146:5153  path[1] */\n      dup2\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_123\n      tag_120\n      jump\t// in\n    tag_123:\n    tag_122:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_124:\n        /* \"SimpleSwap.sol\":5125:5154  ERC20 tokenB = ERC20(path[1]) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":5199:5216  uint256 amountOut */\n      0x00\n        /* \"SimpleSwap.sol\":5272:5278  tokenA */\n      dup3\n        /* \"SimpleSwap.sol\":5272:5288  tokenA.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":5297:5301  this */\n      address\n        /* \"SimpleSwap.sol\":5272:5303  tokenA.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"SimpleSwap.sol\":5263:5271  amountIn */\n      dup11\n        /* \"SimpleSwap.sol\":5263:5303  amountIn+tokenA.balanceOf(address(this)) */\n      tag_131\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_131:\n        /* \"SimpleSwap.sol\":5230:5236  tokenB */\n      dup3\n        /* \"SimpleSwap.sol\":5230:5246  tokenB.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":5255:5259  this */\n      address\n        /* \"SimpleSwap.sol\":5230:5261  tokenB.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_135:\n        /* \"SimpleSwap.sol\":5219:5227  amountIn */\n      dup12\n        /* \"SimpleSwap.sol\":5219:5261  amountIn * tokenB.balanceOf(address(this)) */\n      tag_136\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_136:\n        /* \"SimpleSwap.sol\":5219:5304  amountIn * tokenB.balanceOf(address(this))/(amountIn+tokenA.balanceOf(address(this))) */\n      tag_137\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_137:\n        /* \"SimpleSwap.sol\":5199:5304  uint256 amountOut = amountIn * tokenB.balanceOf(address(this))/(amountIn+tokenA.balanceOf(address(this))) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":5346:5358  amountOutMin */\n      dup9\n        /* \"SimpleSwap.sol\":5335:5344  amountOut */\n      dup2\n        /* \"SimpleSwap.sol\":5335:5358  amountOut>=amountOutMin */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":5327:5359  require(amountOut>=amountOutMin) */\n      tag_138\n      jumpi\n      revert(0x00, 0x00)\n    tag_138:\n        /* \"SimpleSwap.sol\":5382:5388  tokenA */\n      dup3\n        /* \"SimpleSwap.sol\":5382:5401  tokenA.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SimpleSwap.sol\":5402:5412  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":5422:5426  this */\n      address\n        /* \"SimpleSwap.sol\":5428:5429  0 */\n      0x00\n        /* \"SimpleSwap.sol\":5382:5430  tokenA.transferFrom(msg.sender, address(this),0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      pop\n        /* \"SimpleSwap.sol\":5453:5459  tokenB */\n      dup2\n        /* \"SimpleSwap.sol\":5453:5468  tokenB.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleSwap.sol\":5469:5471  to */\n      dup8\n        /* \"SimpleSwap.sol\":5473:5482  amountOut */\n      dup4\n        /* \"SimpleSwap.sol\":5453:5483  tokenB.transfer(to, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_149:\n      pop\n        /* \"SimpleSwap.sol\":5527:5528  2 */\n      0x02\n        /* \"SimpleSwap.sol\":5516:5529  new uint[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n    tag_150:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_153:\n      pop\n        /* \"SimpleSwap.sol\":5506:5529  amounts = new uint[](2) */\n      swap4\n      pop\n        /* \"SimpleSwap.sol\":5565:5573  amountIn */\n      dup10\n        /* \"SimpleSwap.sol\":5552:5559  amounts */\n      dup5\n        /* \"SimpleSwap.sol\":5560:5561  0 */\n      0x00\n        /* \"SimpleSwap.sol\":5552:5562  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_120\n      jump\t// in\n    tag_155:\n    tag_154:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"SimpleSwap.sol\":5552:5573  amounts[0] = amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SimpleSwap.sol\":5608:5617  amountOut */\n      dup1\n        /* \"SimpleSwap.sol\":5596:5603  amounts */\n      dup5\n        /* \"SimpleSwap.sol\":5604:5605  1 */\n      0x01\n        /* \"SimpleSwap.sol\":5596:5606  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_157\n      tag_120\n      jump\t// in\n    tag_157:\n    tag_156:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"SimpleSwap.sol\":5596:5617  amounts[1]= amountOut */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SimpleSwap.sol\":4925:5637  {... */\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":4657:5637  function swapExactTokensForTokens(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_96\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_96\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":5966:6326  function getPrice(address tokenA, address tokenB) public view returns (uint price){... */\n    tag_69:\n        /* \"SimpleSwap.sol\":6037:6047  uint price */\n      0x00\n        /* \"SimpleSwap.sol\":6119:6134  uint256 amount1 */\n      0x00\n        /* \"SimpleSwap.sol\":6143:6149  tokenA */\n      dup4\n        /* \"SimpleSwap.sol\":6137:6160  ERC20(tokenA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":6169:6173  this */\n      address\n        /* \"SimpleSwap.sol\":6137:6175  ERC20(tokenA).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_172:\n        /* \"SimpleSwap.sol\":6119:6175  uint256 amount1 = ERC20(tokenA).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":6198:6213  uint256 amount2 */\n      0x00\n        /* \"SimpleSwap.sol\":6222:6228  tokenB */\n      dup4\n        /* \"SimpleSwap.sol\":6216:6239  ERC20(tokenB).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":6248:6252  this */\n      address\n        /* \"SimpleSwap.sol\":6216:6254  ERC20(tokenB).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_176:\n        /* \"SimpleSwap.sol\":6198:6254  uint256 amount2 = ERC20(tokenB).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":6299:6306  amount1 */\n      dup2\n        /* \"SimpleSwap.sol\":6293:6297  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SimpleSwap.sol\":6285:6292  amount2 */\n      dup3\n        /* \"SimpleSwap.sol\":6285:6297  amount2*1e18 */\n      tag_177\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_177:\n        /* \"SimpleSwap.sol\":6284:6306  (amount2*1e18)/amount1 */\n      tag_178\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_178:\n        /* \"SimpleSwap.sol\":6277:6306  return (amount2*1e18)/amount1 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"SimpleSwap.sol\":5966:6326  function getPrice(address tokenA, address tokenB) public view returns (uint price){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":3105:4031  function removeLiquidity(... */\n    tag_74:\n        /* \"SimpleSwap.sol\":3369:3381  uint amountA */\n      0x00\n        /* \"SimpleSwap.sol\":3383:3395  uint amountB */\n      0x00\n        /* \"SimpleSwap.sol\":3478:3493  block.timestamp */\n      timestamp\n        /* \"SimpleSwap.sol\":3467:3475  deadline */\n      dup4\n        /* \"SimpleSwap.sol\":3467:3493  deadline>= block.timestamp */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":3459:3513  require(deadline>= block.timestamp, \"deadlineReached\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_117\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"SimpleSwap.sol\":3532:3554  uint256 totalLiquidity */\n      0x00\n        /* \"SimpleSwap.sol\":3557:3570  totalSupply() */\n      tag_182\n        /* \"SimpleSwap.sol\":3557:3568  totalSupply */\n      tag_37\n        /* \"SimpleSwap.sol\":3557:3570  totalSupply() */\n      jump\t// in\n    tag_182:\n        /* \"SimpleSwap.sol\":3532:3570  uint256 totalLiquidity = totalSupply() */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":3652:3666  totalLiquidity */\n      dup1\n        /* \"SimpleSwap.sol\":3619:3625  tokenA */\n      dup11\n        /* \"SimpleSwap.sol\":3613:3636  ERC20(tokenA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":3645:3649  this */\n      address\n        /* \"SimpleSwap.sol\":3613:3651  ERC20(tokenA).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_186:\n        /* \"SimpleSwap.sol\":3601:3610  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":3601:3651  liquidity * ERC20(tokenA).balanceOf(address(this)) */\n      tag_187\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_187:\n        /* \"SimpleSwap.sol\":3601:3666  liquidity * ERC20(tokenA).balanceOf(address(this))/totalLiquidity */\n      tag_188\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_188:\n        /* \"SimpleSwap.sol\":3591:3666  amountA = liquidity * ERC20(tokenA).balanceOf(address(this))/totalLiquidity */\n      swap3\n      pop\n        /* \"SimpleSwap.sol\":3746:3760  totalLiquidity */\n      dup1\n        /* \"SimpleSwap.sol\":3713:3719  tokenB */\n      dup10\n        /* \"SimpleSwap.sol\":3707:3730  ERC20(tokenB).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":3739:3743  this */\n      address\n        /* \"SimpleSwap.sol\":3707:3745  ERC20(tokenB).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_189:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_192:\n        /* \"SimpleSwap.sol\":3695:3704  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":3695:3745  liquidity * ERC20(tokenB).balanceOf(address(this)) */\n      tag_193\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_193:\n        /* \"SimpleSwap.sol\":3695:3760  liquidity * ERC20(tokenB).balanceOf(address(this))/totalLiquidity */\n      tag_194\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_194:\n        /* \"SimpleSwap.sol\":3685:3760  amountB = liquidity * ERC20(tokenB).balanceOf(address(this))/totalLiquidity */\n      swap2\n      pop\n        /* \"SimpleSwap.sol\":3801:3808  amountA */\n      dup3\n        /* \"SimpleSwap.sol\":3789:3799  amountAMin */\n      dup8\n        /* \"SimpleSwap.sol\":3789:3808  amountAMin<=amountA */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":3781:3809  require(amountAMin<=amountA) */\n      tag_195\n      jumpi\n      revert(0x00, 0x00)\n    tag_195:\n        /* \"SimpleSwap.sol\":3849:3856  amountB */\n      dup2\n        /* \"SimpleSwap.sol\":3836:3846  amountBMin */\n      dup7\n        /* \"SimpleSwap.sol\":3836:3856  amountBMin <=amountB */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":3828:3857  require(amountBMin <=amountB) */\n      tag_196\n      jumpi\n      revert(0x00, 0x00)\n    tag_196:\n        /* \"SimpleSwap.sol\":3878:3906  _burn(msg.sender, liquidity) */\n      tag_197\n        /* \"SimpleSwap.sol\":3884:3894  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":3896:3905  liquidity */\n      dup10\n        /* \"SimpleSwap.sol\":3878:3883  _burn */\n      tag_198\n        /* \"SimpleSwap.sol\":3878:3906  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"SimpleSwap.sol\":3931:3937  tokenA */\n      dup10\n        /* \"SimpleSwap.sol\":3925:3947  ERC20(tokenA).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleSwap.sol\":3948:3950  to */\n      dup7\n        /* \"SimpleSwap.sol\":3952:3959  amountA */\n      dup6\n        /* \"SimpleSwap.sol\":3925:3960  ERC20(tokenA).transfer(to, amountA) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_202:\n      pop\n        /* \"SimpleSwap.sol\":3985:3991  tokenB */\n      dup9\n        /* \"SimpleSwap.sol\":3979:4001  ERC20(tokenB).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleSwap.sol\":4002:4004  to */\n      dup7\n        /* \"SimpleSwap.sol\":4005:4012  amountB */\n      dup5\n        /* \"SimpleSwap.sol\":3979:4013  ERC20(tokenB).transfer(to,amountB) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_206:\n      pop\n        /* \"SimpleSwap.sol\":3396:4031  {... */\n      pop\n        /* \"SimpleSwap.sol\":3105:4031  function removeLiquidity(... */\n      swap8\n      pop\n      swap8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleSwap.sol\":944:2342  function addLiquidity(... */\n    tag_84:\n        /* \"SimpleSwap.sol\":1208:1220  uint amountA */\n      0x00\n        /* \"SimpleSwap.sol\":1222:1234  uint amountB */\n      0x00\n        /* \"SimpleSwap.sol\":1236:1250  uint liquidity */\n      0x00\n        /* \"SimpleSwap.sol\":1285:1300  block.timestamp */\n      timestamp\n        /* \"SimpleSwap.sol\":1274:1282  deadline */\n      dup5\n        /* \"SimpleSwap.sol\":1274:1300  deadline >=block.timestamp */\n      lt\n      iszero\n        /* \"SimpleSwap.sol\":1266:1320  require(deadline >=block.timestamp,\"deadlineReached\" ) */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_117\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"SimpleSwap.sol\":1347:1360  totalSupply() */\n      tag_211\n        /* \"SimpleSwap.sol\":1347:1358  totalSupply */\n      tag_37\n        /* \"SimpleSwap.sol\":1347:1360  totalSupply() */\n      jump\t// in\n    tag_211:\n        /* \"SimpleSwap.sol\":1335:1360  liquidity = totalSupply() */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":1390:1391  0 */\n      0x00\n        /* \"SimpleSwap.sol\":1378:1387  liquidity */\n      dup2\n        /* \"SimpleSwap.sol\":1378:1391  liquidity > 0 */\n      gt\n        /* \"SimpleSwap.sol\":1375:2056  if(liquidity > 0){... */\n      iszero\n      tag_212\n      jumpi\n        /* \"SimpleSwap.sol\":1411:1421  uint256 l1 */\n      0x00\n        /* \"SimpleSwap.sol\":1459:1465  tokenA */\n      dup12\n        /* \"SimpleSwap.sol\":1453:1476  ERC20(tokenA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":1485:1489  this */\n      address\n        /* \"SimpleSwap.sol\":1453:1491  ERC20(tokenA).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_213:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_216:\n        /* \"SimpleSwap.sol\":1441:1450  liquidity */\n      dup3\n        /* \"SimpleSwap.sol\":1424:1438  amountADesired */\n      dup12\n        /* \"SimpleSwap.sol\":1424:1450  amountADesired * liquidity */\n      tag_217\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_217:\n        /* \"SimpleSwap.sol\":1423:1491  (amountADesired * liquidity)/ ERC20(tokenA).balanceOf(address(this)) */\n      tag_218\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_218:\n        /* \"SimpleSwap.sol\":1411:1491  uint256 l1= (amountADesired * liquidity)/ ERC20(tokenA).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":1510:1520  uint256 l2 */\n      0x00\n        /* \"SimpleSwap.sol\":1558:1564  tokenB */\n      dup12\n        /* \"SimpleSwap.sol\":1552:1575  ERC20(tokenB).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleSwap.sol\":1584:1588  this */\n      address\n        /* \"SimpleSwap.sol\":1552:1590  ERC20(tokenB).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_219:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_222:\n        /* \"SimpleSwap.sol\":1540:1549  liquidity */\n      dup4\n        /* \"SimpleSwap.sol\":1523:1537  amountBDesired */\n      dup12\n        /* \"SimpleSwap.sol\":1523:1549  amountBDesired * liquidity */\n      tag_223\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_223:\n        /* \"SimpleSwap.sol\":1522:1590  (amountBDesired * liquidity)/ ERC20(tokenB).balanceOf(address(this)) */\n      tag_224\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_224:\n        /* \"SimpleSwap.sol\":1510:1590  uint256 l2= (amountBDesired * liquidity)/ ERC20(tokenB).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":1617:1619  l2 */\n      dup1\n        /* \"SimpleSwap.sol\":1612:1614  l1 */\n      dup3\n        /* \"SimpleSwap.sol\":1612:1619  l1 < l2 */\n      lt\n        /* \"SimpleSwap.sol\":1609:1890  if(l1 < l2) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"SimpleSwap.sol\":1654:1668  amountADesired */\n      dup11\n        /* \"SimpleSwap.sol\":1644:1668  amountA = amountADesired */\n      swap5\n      pop\n        /* \"SimpleSwap.sol\":1726:1733  amountA */\n      dup5\n        /* \"SimpleSwap.sol\":1701:1725  getPrice(tokenA, tokenB) */\n      tag_226\n        /* \"SimpleSwap.sol\":1710:1716  tokenA */\n      dup15\n        /* \"SimpleSwap.sol\":1718:1724  tokenB */\n      dup15\n        /* \"SimpleSwap.sol\":1701:1709  getPrice */\n      tag_69\n        /* \"SimpleSwap.sol\":1701:1725  getPrice(tokenA, tokenB) */\n      jump\t// in\n    tag_226:\n        /* \"SimpleSwap.sol\":1701:1733  getPrice(tokenA, tokenB)*amountA */\n      tag_227\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_227:\n        /* \"SimpleSwap.sol\":1691:1733  amountB = getPrice(tokenA, tokenB)*amountA */\n      swap4\n      pop\n        /* \"SimpleSwap.sol\":1609:1890  if(l1 < l2) {... */\n      jump(tag_228)\n    tag_225:\n        /* \"SimpleSwap.sol\":1791:1805  amountBDesired */\n      dup10\n        /* \"SimpleSwap.sol\":1781:1805  amountB = amountBDesired */\n      swap4\n      pop\n        /* \"SimpleSwap.sol\":1863:1870  amountB */\n      dup4\n        /* \"SimpleSwap.sol\":1838:1862  getPrice(tokenB, tokenA) */\n      tag_229\n        /* \"SimpleSwap.sol\":1847:1853  tokenB */\n      dup14\n        /* \"SimpleSwap.sol\":1855:1861  tokenA */\n      dup16\n        /* \"SimpleSwap.sol\":1838:1846  getPrice */\n      tag_69\n        /* \"SimpleSwap.sol\":1838:1862  getPrice(tokenB, tokenA) */\n      jump\t// in\n    tag_229:\n        /* \"SimpleSwap.sol\":1838:1870  getPrice(tokenB, tokenA)*amountB */\n      tag_230\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_230:\n        /* \"SimpleSwap.sol\":1828:1870  amountA = getPrice(tokenB, tokenA)*amountB */\n      swap5\n      pop\n        /* \"SimpleSwap.sol\":1609:1890  if(l1 < l2) {... */\n    tag_228:\n        /* \"SimpleSwap.sol\":1392:1905  {... */\n      pop\n      pop\n        /* \"SimpleSwap.sol\":1375:2056  if(liquidity > 0){... */\n      jump(tag_231)\n    tag_212:\n        /* \"SimpleSwap.sol\":1940:1954  amountADesired */\n      dup9\n        /* \"SimpleSwap.sol\":1928:1954  liquidity = amountADesired */\n      swap1\n      pop\n        /* \"SimpleSwap.sol\":1983:1997  amountADesired */\n      dup9\n        /* \"SimpleSwap.sol\":1973:1997  amountA = amountADesired */\n      swap3\n      pop\n        /* \"SimpleSwap.sol\":2026:2040  amountBDesired */\n      dup8\n        /* \"SimpleSwap.sol\":2016:2040  amountB = amountBDesired */\n      swap2\n      pop\n        /* \"SimpleSwap.sol\":1375:2056  if(liquidity > 0){... */\n    tag_231:\n        /* \"SimpleSwap.sol\":2090:2097  amountA */\n      dup3\n        /* \"SimpleSwap.sol\":2078:2088  amountAMin */\n      dup8\n        /* \"SimpleSwap.sol\":2078:2097  amountAMin<=amountA */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":2070:2098  require(amountAMin<=amountA) */\n      tag_232\n      jumpi\n      revert(0x00, 0x00)\n    tag_232:\n        /* \"SimpleSwap.sol\":2134:2141  amountB */\n      dup2\n        /* \"SimpleSwap.sol\":2121:2131  amountBMin */\n      dup7\n        /* \"SimpleSwap.sol\":2121:2141  amountBMin <=amountB */\n      gt\n      iszero\n        /* \"SimpleSwap.sol\":2113:2142  require(amountBMin <=amountB) */\n      tag_233\n      jumpi\n      revert(0x00, 0x00)\n    tag_233:\n        /* \"SimpleSwap.sol\":2163:2169  tokenA */\n      dup11\n        /* \"SimpleSwap.sol\":2157:2183  ERC20(tokenA).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SimpleSwap.sol\":2184:2194  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":2204:2208  this */\n      address\n        /* \"SimpleSwap.sol\":2210:2217  amountA */\n      dup7\n        /* \"SimpleSwap.sol\":2157:2218  ERC20(tokenA).transferFrom(msg.sender, address(this),amountA) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_238:\n      pop\n        /* \"SimpleSwap.sol\":2239:2245  tokenB */\n      dup10\n        /* \"SimpleSwap.sol\":2233:2259  ERC20(tokenB).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SimpleSwap.sol\":2260:2270  msg.sender */\n      caller\n        /* \"SimpleSwap.sol\":2280:2284  this */\n      address\n        /* \"SimpleSwap.sol\":2287:2294  amountB */\n      dup6\n        /* \"SimpleSwap.sol\":2233:2295  ERC20(tokenB).transferFrom(msg.sender, address(this), amountB) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_239:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_242:\n      pop\n        /* \"SimpleSwap.sol\":2310:2330  _mint(to, liquidity) */\n      tag_243\n        /* \"SimpleSwap.sol\":2316:2318  to */\n      dup6\n        /* \"SimpleSwap.sol\":2320:2329  liquidity */\n      dup3\n        /* \"SimpleSwap.sol\":2310:2315  _mint */\n      tag_244\n        /* \"SimpleSwap.sol\":2310:2330  _mint(to, liquidity) */\n      jump\t// in\n    tag_243:\n        /* \"SimpleSwap.sol\":944:2342  function addLiquidity(... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_277\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_280\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_280:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_281)\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_285)\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_288:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_289:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_290:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_291:\n        /* \"#utility.yul\":490:514   */\n      tag_337\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_290\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_338:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_292:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_340\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_291\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_22:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_343\n      tag_288\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":800:919   */\n    tag_342:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_344\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_292\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_345\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_292\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_346\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_292\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_293:\n        /* \"#utility.yul\":1402:1426   */\n      tag_348\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_290\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_25:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_350\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_293\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1766   */\n    tag_294:\n        /* \"#utility.yul\":1719:1725   */\n      0x00\n        /* \"#utility.yul\":1753:1758   */\n      dup2\n        /* \"#utility.yul\":1747:1759   */\n      mload\n        /* \"#utility.yul\":1737:1759   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1941   */\n    tag_295:\n        /* \"#utility.yul\":1856:1867   */\n      0x00\n        /* \"#utility.yul\":1890:1896   */\n      dup3\n        /* \"#utility.yul\":1885:1888   */\n      dup3\n        /* \"#utility.yul\":1878:1897   */\n      mstore\n        /* \"#utility.yul\":1930:1934   */\n      0x20\n        /* \"#utility.yul\":1925:1928   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      add\n        /* \"#utility.yul\":1906:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1772:1941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1947:2086   */\n    tag_296:\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2031:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2029   */\n      dup4\n        /* \"#utility.yul\":2020:2043   */\n      mcopy\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2063:2066   */\n      dup4\n        /* \"#utility.yul\":2059:2075   */\n      add\n        /* \"#utility.yul\":2052:2079   */\n      mstore\n        /* \"#utility.yul\":1947:2086   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2194   */\n    tag_297:\n        /* \"#utility.yul\":2133:2139   */\n      0x00\n        /* \"#utility.yul\":2184:2186   */\n      0x1f\n        /* \"#utility.yul\":2180:2187   */\n      not\n        /* \"#utility.yul\":2175:2177   */\n      0x1f\n        /* \"#utility.yul\":2168:2173   */\n      dup4\n        /* \"#utility.yul\":2164:2178   */\n      add\n        /* \"#utility.yul\":2160:2188   */\n      and\n        /* \"#utility.yul\":2150:2188   */\n      swap1\n      pop\n        /* \"#utility.yul\":2092:2194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:2577   */\n    tag_298:\n        /* \"#utility.yul\":2288:2291   */\n      0x00\n        /* \"#utility.yul\":2316:2355   */\n      tag_356\n        /* \"#utility.yul\":2349:2354   */\n      dup3\n        /* \"#utility.yul\":2316:2355   */\n      tag_294\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2371:2442   */\n      tag_357\n        /* \"#utility.yul\":2435:2441   */\n      dup2\n        /* \"#utility.yul\":2430:2433   */\n      dup6\n        /* \"#utility.yul\":2371:2442   */\n      tag_295\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2364:2442   */\n      swap4\n      pop\n        /* \"#utility.yul\":2451:2516   */\n      tag_358\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2504:2507   */\n      dup6\n        /* \"#utility.yul\":2497:2501   */\n      0x20\n        /* \"#utility.yul\":2490:2495   */\n      dup7\n        /* \"#utility.yul\":2486:2502   */\n      add\n        /* \"#utility.yul\":2451:2516   */\n      tag_296\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2541:2570   */\n      tag_359\n        /* \"#utility.yul\":2563:2569   */\n      dup2\n        /* \"#utility.yul\":2541:2570   */\n      tag_297\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2536:2539   */\n      dup5\n        /* \"#utility.yul\":2532:2571   */\n      add\n        /* \"#utility.yul\":2525:2571   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2577   */\n      pop\n        /* \"#utility.yul\":2200:2577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:2896   */\n    tag_29:\n        /* \"#utility.yul\":2696:2700   */\n      0x00\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup3\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2711:2737   */\n      swap1\n      pop\n        /* \"#utility.yul\":2783:2792   */\n      dup2\n        /* \"#utility.yul\":2777:2781   */\n      dup2\n        /* \"#utility.yul\":2773:2793   */\n      sub\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2758:2767   */\n      dup4\n        /* \"#utility.yul\":2754:2771   */\n      add\n        /* \"#utility.yul\":2747:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2889   */\n      tag_361\n        /* \"#utility.yul\":2884:2888   */\n      dup2\n        /* \"#utility.yul\":2875:2881   */\n      dup5\n        /* \"#utility.yul\":2811:2889   */\n      tag_298\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2803:2889   */\n      swap1\n      pop\n        /* \"#utility.yul\":2583:2896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3028   */\n    tag_299:\n        /* \"#utility.yul\":2939:2946   */\n      0x00\n        /* \"#utility.yul\":2979:3021   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2972:2977   */\n      dup3\n        /* \"#utility.yul\":2968:3022   */\n      and\n        /* \"#utility.yul\":2957:3022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3034:3130   */\n    tag_300:\n        /* \"#utility.yul\":3071:3078   */\n      0x00\n        /* \"#utility.yul\":3100:3124   */\n      tag_364\n        /* \"#utility.yul\":3118:3123   */\n      dup3\n        /* \"#utility.yul\":3100:3124   */\n      tag_299\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3089:3124   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3136:3258   */\n    tag_301:\n        /* \"#utility.yul\":3209:3233   */\n      tag_366\n        /* \"#utility.yul\":3227:3232   */\n      dup2\n        /* \"#utility.yul\":3209:3233   */\n      tag_300\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3202:3207   */\n      dup2\n        /* \"#utility.yul\":3199:3234   */\n      eq\n        /* \"#utility.yul\":3189:3252   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3245:3246   */\n      0x00\n        /* \"#utility.yul\":3238:3250   */\n      revert\n        /* \"#utility.yul\":3189:3252   */\n    tag_367:\n        /* \"#utility.yul\":3136:3258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3403   */\n    tag_302:\n        /* \"#utility.yul\":3310:3315   */\n      0x00\n        /* \"#utility.yul\":3348:3354   */\n      dup2\n        /* \"#utility.yul\":3335:3355   */\n      calldataload\n        /* \"#utility.yul\":3326:3355   */\n      swap1\n      pop\n        /* \"#utility.yul\":3364:3397   */\n      tag_369\n        /* \"#utility.yul\":3391:3396   */\n      dup2\n        /* \"#utility.yul\":3364:3397   */\n      tag_301\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3264:3403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3409:3883   */\n    tag_32:\n        /* \"#utility.yul\":3477:3483   */\n      0x00\n        /* \"#utility.yul\":3485:3491   */\n      0x00\n        /* \"#utility.yul\":3534:3536   */\n      0x40\n        /* \"#utility.yul\":3522:3531   */\n      dup4\n        /* \"#utility.yul\":3513:3520   */\n      dup6\n        /* \"#utility.yul\":3509:3532   */\n      sub\n        /* \"#utility.yul\":3505:3537   */\n      slt\n        /* \"#utility.yul\":3502:3621   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":3540:3619   */\n      tag_372\n      tag_288\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3502:3621   */\n    tag_371:\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3685:3738   */\n      tag_373\n        /* \"#utility.yul\":3730:3737   */\n      dup6\n        /* \"#utility.yul\":3721:3727   */\n      dup3\n        /* \"#utility.yul\":3710:3719   */\n      dup7\n        /* \"#utility.yul\":3706:3728   */\n      add\n        /* \"#utility.yul\":3685:3738   */\n      tag_302\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3675:3738   */\n      swap3\n      pop\n        /* \"#utility.yul\":3631:3748   */\n      pop\n        /* \"#utility.yul\":3787:3789   */\n      0x20\n        /* \"#utility.yul\":3813:3866   */\n      tag_374\n        /* \"#utility.yul\":3858:3865   */\n      dup6\n        /* \"#utility.yul\":3849:3855   */\n      dup3\n        /* \"#utility.yul\":3838:3847   */\n      dup7\n        /* \"#utility.yul\":3834:3856   */\n      add\n        /* \"#utility.yul\":3813:3866   */\n      tag_292\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3803:3866   */\n      swap2\n      pop\n        /* \"#utility.yul\":3758:3876   */\n      pop\n        /* \"#utility.yul\":3409:3883   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3889:3979   */\n    tag_303:\n        /* \"#utility.yul\":3923:3930   */\n      0x00\n        /* \"#utility.yul\":3966:3971   */\n      dup2\n        /* \"#utility.yul\":3959:3972   */\n      iszero\n        /* \"#utility.yul\":3952:3973   */\n      iszero\n        /* \"#utility.yul\":3941:3973   */\n      swap1\n      pop\n        /* \"#utility.yul\":3889:3979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3985:4094   */\n    tag_304:\n        /* \"#utility.yul\":4066:4087   */\n      tag_377\n        /* \"#utility.yul\":4081:4086   */\n      dup2\n        /* \"#utility.yul\":4066:4087   */\n      tag_303\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4061:4064   */\n      dup3\n        /* \"#utility.yul\":4054:4088   */\n      mstore\n        /* \"#utility.yul\":3985:4094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4100:4310   */\n    tag_35:\n        /* \"#utility.yul\":4187:4191   */\n      0x00\n        /* \"#utility.yul\":4225:4227   */\n      0x20\n        /* \"#utility.yul\":4214:4223   */\n      dup3\n        /* \"#utility.yul\":4210:4228   */\n      add\n        /* \"#utility.yul\":4202:4228   */\n      swap1\n      pop\n        /* \"#utility.yul\":4238:4303   */\n      tag_379\n        /* \"#utility.yul\":4300:4301   */\n      0x00\n        /* \"#utility.yul\":4289:4298   */\n      dup4\n        /* \"#utility.yul\":4285:4302   */\n      add\n        /* \"#utility.yul\":4276:4282   */\n      dup5\n        /* \"#utility.yul\":4238:4303   */\n      tag_304\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4100:4310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4935   */\n    tag_41:\n        /* \"#utility.yul\":4393:4399   */\n      0x00\n        /* \"#utility.yul\":4401:4407   */\n      0x00\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x60\n        /* \"#utility.yul\":4446:4455   */\n      dup5\n        /* \"#utility.yul\":4437:4444   */\n      dup7\n        /* \"#utility.yul\":4433:4456   */\n      sub\n        /* \"#utility.yul\":4429:4461   */\n      slt\n        /* \"#utility.yul\":4426:4545   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":4464:4543   */\n      tag_382\n      tag_288\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4426:4545   */\n    tag_381:\n        /* \"#utility.yul\":4584:4585   */\n      0x00\n        /* \"#utility.yul\":4609:4662   */\n      tag_383\n        /* \"#utility.yul\":4654:4661   */\n      dup7\n        /* \"#utility.yul\":4645:4651   */\n      dup3\n        /* \"#utility.yul\":4634:4643   */\n      dup8\n        /* \"#utility.yul\":4630:4652   */\n      add\n        /* \"#utility.yul\":4609:4662   */\n      tag_302\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4599:4662   */\n      swap4\n      pop\n        /* \"#utility.yul\":4555:4672   */\n      pop\n        /* \"#utility.yul\":4711:4713   */\n      0x20\n        /* \"#utility.yul\":4737:4790   */\n      tag_384\n        /* \"#utility.yul\":4782:4789   */\n      dup7\n        /* \"#utility.yul\":4773:4779   */\n      dup3\n        /* \"#utility.yul\":4762:4771   */\n      dup8\n        /* \"#utility.yul\":4758:4780   */\n      add\n        /* \"#utility.yul\":4737:4790   */\n      tag_302\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4727:4790   */\n      swap3\n      pop\n        /* \"#utility.yul\":4682:4800   */\n      pop\n        /* \"#utility.yul\":4839:4841   */\n      0x40\n        /* \"#utility.yul\":4865:4918   */\n      tag_385\n        /* \"#utility.yul\":4910:4917   */\n      dup7\n        /* \"#utility.yul\":4901:4907   */\n      dup3\n        /* \"#utility.yul\":4890:4899   */\n      dup8\n        /* \"#utility.yul\":4886:4908   */\n      add\n        /* \"#utility.yul\":4865:4918   */\n      tag_292\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4855:4918   */\n      swap2\n      pop\n        /* \"#utility.yul\":4810:4928   */\n      pop\n        /* \"#utility.yul\":4316:4935   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4941:5027   */\n    tag_305:\n        /* \"#utility.yul\":4976:4983   */\n      0x00\n        /* \"#utility.yul\":5016:5020   */\n      0xff\n        /* \"#utility.yul\":5009:5014   */\n      dup3\n        /* \"#utility.yul\":5005:5021   */\n      and\n        /* \"#utility.yul\":4994:5021   */\n      swap1\n      pop\n        /* \"#utility.yul\":4941:5027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5033:5145   */\n    tag_306:\n        /* \"#utility.yul\":5116:5138   */\n      tag_388\n        /* \"#utility.yul\":5132:5137   */\n      dup2\n        /* \"#utility.yul\":5116:5138   */\n      tag_305\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5111:5114   */\n      dup3\n        /* \"#utility.yul\":5104:5139   */\n      mstore\n        /* \"#utility.yul\":5033:5145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5365   */\n    tag_47:\n        /* \"#utility.yul\":5240:5244   */\n      0x00\n        /* \"#utility.yul\":5278:5280   */\n      0x20\n        /* \"#utility.yul\":5267:5276   */\n      dup3\n        /* \"#utility.yul\":5263:5281   */\n      add\n        /* \"#utility.yul\":5255:5281   */\n      swap1\n      pop\n        /* \"#utility.yul\":5291:5358   */\n      tag_390\n        /* \"#utility.yul\":5355:5356   */\n      0x00\n        /* \"#utility.yul\":5344:5353   */\n      dup4\n        /* \"#utility.yul\":5340:5357   */\n      add\n        /* \"#utility.yul\":5331:5337   */\n      dup5\n        /* \"#utility.yul\":5291:5358   */\n      tag_306\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5151:5365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5371:5488   */\n    tag_307:\n        /* \"#utility.yul\":5480:5481   */\n      0x00\n        /* \"#utility.yul\":5477:5478   */\n      0x00\n        /* \"#utility.yul\":5470:5482   */\n      revert\n        /* \"#utility.yul\":5494:5611   */\n    tag_308:\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      0x00\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5617:5734   */\n    tag_309:\n        /* \"#utility.yul\":5726:5727   */\n      0x00\n        /* \"#utility.yul\":5723:5724   */\n      0x00\n        /* \"#utility.yul\":5716:5728   */\n      revert\n        /* \"#utility.yul\":5757:6325   */\n    tag_310:\n        /* \"#utility.yul\":5830:5838   */\n      0x00\n        /* \"#utility.yul\":5840:5846   */\n      0x00\n        /* \"#utility.yul\":5890:5893   */\n      dup4\n        /* \"#utility.yul\":5883:5887   */\n      0x1f\n        /* \"#utility.yul\":5875:5881   */\n      dup5\n        /* \"#utility.yul\":5871:5888   */\n      add\n        /* \"#utility.yul\":5867:5894   */\n      slt\n        /* \"#utility.yul\":5857:5979   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5898:5977   */\n      tag_396\n      tag_307\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5857:5979   */\n    tag_395:\n        /* \"#utility.yul\":6011:6017   */\n      dup3\n        /* \"#utility.yul\":5998:6018   */\n      calldataload\n        /* \"#utility.yul\":5988:6018   */\n      swap1\n      pop\n        /* \"#utility.yul\":6041:6059   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6033:6039   */\n      dup2\n        /* \"#utility.yul\":6030:6060   */\n      gt\n        /* \"#utility.yul\":6027:6144   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6063:6142   */\n      tag_398\n      tag_308\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6027:6144   */\n    tag_397:\n        /* \"#utility.yul\":6177:6181   */\n      0x20\n        /* \"#utility.yul\":6169:6175   */\n      dup4\n        /* \"#utility.yul\":6165:6182   */\n      add\n        /* \"#utility.yul\":6153:6182   */\n      swap2\n      pop\n        /* \"#utility.yul\":6231:6234   */\n      dup4\n        /* \"#utility.yul\":6223:6227   */\n      0x20\n        /* \"#utility.yul\":6215:6221   */\n      dup3\n        /* \"#utility.yul\":6211:6228   */\n      mul\n        /* \"#utility.yul\":6201:6209   */\n      dup4\n        /* \"#utility.yul\":6197:6229   */\n      add\n        /* \"#utility.yul\":6194:6235   */\n      gt\n        /* \"#utility.yul\":6191:6319   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":6238:6317   */\n      tag_400\n      tag_309\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6191:6319   */\n    tag_399:\n        /* \"#utility.yul\":5757:6325   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6331:7472   */\n    tag_50:\n        /* \"#utility.yul\":6453:6459   */\n      0x00\n        /* \"#utility.yul\":6461:6467   */\n      0x00\n        /* \"#utility.yul\":6469:6475   */\n      0x00\n        /* \"#utility.yul\":6477:6483   */\n      0x00\n        /* \"#utility.yul\":6485:6491   */\n      0x00\n        /* \"#utility.yul\":6493:6499   */\n      0x00\n        /* \"#utility.yul\":6542:6545   */\n      0xa0\n        /* \"#utility.yul\":6530:6539   */\n      dup8\n        /* \"#utility.yul\":6521:6528   */\n      dup10\n        /* \"#utility.yul\":6517:6540   */\n      sub\n        /* \"#utility.yul\":6513:6546   */\n      slt\n        /* \"#utility.yul\":6510:6630   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":6549:6628   */\n      tag_403\n      tag_288\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6510:6630   */\n    tag_402:\n        /* \"#utility.yul\":6669:6670   */\n      0x00\n        /* \"#utility.yul\":6694:6747   */\n      tag_404\n        /* \"#utility.yul\":6739:6746   */\n      dup10\n        /* \"#utility.yul\":6730:6736   */\n      dup3\n        /* \"#utility.yul\":6719:6728   */\n      dup11\n        /* \"#utility.yul\":6715:6737   */\n      add\n        /* \"#utility.yul\":6694:6747   */\n      tag_292\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6684:6747   */\n      swap7\n      pop\n        /* \"#utility.yul\":6640:6757   */\n      pop\n        /* \"#utility.yul\":6796:6798   */\n      0x20\n        /* \"#utility.yul\":6822:6875   */\n      tag_405\n        /* \"#utility.yul\":6867:6874   */\n      dup10\n        /* \"#utility.yul\":6858:6864   */\n      dup3\n        /* \"#utility.yul\":6847:6856   */\n      dup11\n        /* \"#utility.yul\":6843:6865   */\n      add\n        /* \"#utility.yul\":6822:6875   */\n      tag_292\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6812:6875   */\n      swap6\n      pop\n        /* \"#utility.yul\":6767:6885   */\n      pop\n        /* \"#utility.yul\":6952:6954   */\n      0x40\n        /* \"#utility.yul\":6941:6950   */\n      dup8\n        /* \"#utility.yul\":6937:6955   */\n      add\n        /* \"#utility.yul\":6924:6956   */\n      calldataload\n        /* \"#utility.yul\":6983:7001   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6975:6981   */\n      dup2\n        /* \"#utility.yul\":6972:7002   */\n      gt\n        /* \"#utility.yul\":6969:7086   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_407\n      tag_289\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6969:7086   */\n    tag_406:\n        /* \"#utility.yul\":7118:7198   */\n      tag_408\n        /* \"#utility.yul\":7190:7197   */\n      dup10\n        /* \"#utility.yul\":7181:7187   */\n      dup3\n        /* \"#utility.yul\":7170:7179   */\n      dup11\n        /* \"#utility.yul\":7166:7188   */\n      add\n        /* \"#utility.yul\":7118:7198   */\n      tag_310\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7100:7198   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":6895:7208   */\n      pop\n        /* \"#utility.yul\":7247:7249   */\n      0x60\n        /* \"#utility.yul\":7273:7326   */\n      tag_409\n        /* \"#utility.yul\":7318:7325   */\n      dup10\n        /* \"#utility.yul\":7309:7315   */\n      dup3\n        /* \"#utility.yul\":7298:7307   */\n      dup11\n        /* \"#utility.yul\":7294:7316   */\n      add\n        /* \"#utility.yul\":7273:7326   */\n      tag_302\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7263:7326   */\n      swap3\n      pop\n        /* \"#utility.yul\":7218:7336   */\n      pop\n        /* \"#utility.yul\":7375:7378   */\n      0x80\n        /* \"#utility.yul\":7402:7455   */\n      tag_410\n        /* \"#utility.yul\":7447:7454   */\n      dup10\n        /* \"#utility.yul\":7438:7444   */\n      dup3\n        /* \"#utility.yul\":7427:7436   */\n      dup11\n        /* \"#utility.yul\":7423:7445   */\n      add\n        /* \"#utility.yul\":7402:7455   */\n      tag_292\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7392:7455   */\n      swap2\n      pop\n        /* \"#utility.yul\":7346:7465   */\n      pop\n        /* \"#utility.yul\":6331:7472   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":7478:7592   */\n    tag_311:\n        /* \"#utility.yul\":7545:7551   */\n      0x00\n        /* \"#utility.yul\":7579:7584   */\n      dup2\n        /* \"#utility.yul\":7573:7585   */\n      mload\n        /* \"#utility.yul\":7563:7585   */\n      swap1\n      pop\n        /* \"#utility.yul\":7478:7592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7598:7782   */\n    tag_312:\n        /* \"#utility.yul\":7697:7708   */\n      0x00\n        /* \"#utility.yul\":7731:7737   */\n      dup3\n        /* \"#utility.yul\":7726:7729   */\n      dup3\n        /* \"#utility.yul\":7719:7738   */\n      mstore\n        /* \"#utility.yul\":7771:7775   */\n      0x20\n        /* \"#utility.yul\":7766:7769   */\n      dup3\n        /* \"#utility.yul\":7762:7776   */\n      add\n        /* \"#utility.yul\":7747:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7598:7782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:7920   */\n    tag_313:\n        /* \"#utility.yul\":7855:7859   */\n      0x00\n        /* \"#utility.yul\":7878:7881   */\n      dup2\n        /* \"#utility.yul\":7870:7881   */\n      swap1\n      pop\n        /* \"#utility.yul\":7908:7912   */\n      0x20\n        /* \"#utility.yul\":7903:7906   */\n      dup3\n        /* \"#utility.yul\":7899:7913   */\n      add\n        /* \"#utility.yul\":7891:7913   */\n      swap1\n      pop\n        /* \"#utility.yul\":7788:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8034   */\n    tag_314:\n        /* \"#utility.yul\":8003:8027   */\n      tag_415\n        /* \"#utility.yul\":8021:8026   */\n      dup2\n        /* \"#utility.yul\":8003:8027   */\n      tag_290\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7998:8001   */\n      dup3\n        /* \"#utility.yul\":7991:8028   */\n      mstore\n        /* \"#utility.yul\":7926:8034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8040:8219   */\n    tag_315:\n        /* \"#utility.yul\":8109:8119   */\n      0x00\n        /* \"#utility.yul\":8130:8176   */\n      tag_417\n        /* \"#utility.yul\":8172:8175   */\n      dup4\n        /* \"#utility.yul\":8164:8170   */\n      dup4\n        /* \"#utility.yul\":8130:8176   */\n      tag_314\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8208:8212   */\n      0x20\n        /* \"#utility.yul\":8203:8206   */\n      dup4\n        /* \"#utility.yul\":8199:8213   */\n      add\n        /* \"#utility.yul\":8185:8213   */\n      swap1\n      pop\n        /* \"#utility.yul\":8040:8219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8225:8338   */\n    tag_316:\n        /* \"#utility.yul\":8295:8299   */\n      0x00\n        /* \"#utility.yul\":8327:8331   */\n      0x20\n        /* \"#utility.yul\":8322:8325   */\n      dup3\n        /* \"#utility.yul\":8318:8332   */\n      add\n        /* \"#utility.yul\":8310:8332   */\n      swap1\n      pop\n        /* \"#utility.yul\":8225:8338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8374:9106   */\n    tag_317:\n        /* \"#utility.yul\":8493:8496   */\n      0x00\n        /* \"#utility.yul\":8522:8576   */\n      tag_420\n        /* \"#utility.yul\":8570:8575   */\n      dup3\n        /* \"#utility.yul\":8522:8576   */\n      tag_311\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8592:8678   */\n      tag_421\n        /* \"#utility.yul\":8671:8677   */\n      dup2\n        /* \"#utility.yul\":8666:8669   */\n      dup6\n        /* \"#utility.yul\":8592:8678   */\n      tag_312\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8585:8678   */\n      swap4\n      pop\n        /* \"#utility.yul\":8702:8758   */\n      tag_422\n        /* \"#utility.yul\":8752:8757   */\n      dup4\n        /* \"#utility.yul\":8702:8758   */\n      tag_313\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8781:8788   */\n      dup1\n        /* \"#utility.yul\":8812:8813   */\n      0x00\n        /* \"#utility.yul\":8797:9081   */\n    tag_423:\n        /* \"#utility.yul\":8822:8828   */\n      dup4\n        /* \"#utility.yul\":8819:8820   */\n      dup2\n        /* \"#utility.yul\":8816:8829   */\n      lt\n        /* \"#utility.yul\":8797:9081   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":8898:8904   */\n      dup2\n        /* \"#utility.yul\":8892:8905   */\n      mload\n        /* \"#utility.yul\":8925:8988   */\n      tag_426\n        /* \"#utility.yul\":8984:8987   */\n      dup9\n        /* \"#utility.yul\":8969:8982   */\n      dup3\n        /* \"#utility.yul\":8925:8988   */\n      tag_315\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8918:8988   */\n      swap8\n      pop\n        /* \"#utility.yul\":9011:9071   */\n      tag_427\n        /* \"#utility.yul\":9064:9070   */\n      dup4\n        /* \"#utility.yul\":9011:9071   */\n      tag_316\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9001:9071   */\n      swap3\n      pop\n        /* \"#utility.yul\":8857:9081   */\n      pop\n        /* \"#utility.yul\":8844:8845   */\n      0x01\n        /* \"#utility.yul\":8841:8842   */\n      dup2\n        /* \"#utility.yul\":8837:8846   */\n      add\n        /* \"#utility.yul\":8832:8846   */\n      swap1\n      pop\n        /* \"#utility.yul\":8797:9081   */\n      jump(tag_423)\n    tag_425:\n        /* \"#utility.yul\":8801:8815   */\n      pop\n        /* \"#utility.yul\":9097:9100   */\n      dup6\n        /* \"#utility.yul\":9090:9100   */\n      swap4\n      pop\n        /* \"#utility.yul\":8498:9106   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8374:9106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9112:9485   */\n    tag_53:\n        /* \"#utility.yul\":9255:9259   */\n      0x00\n        /* \"#utility.yul\":9293:9295   */\n      0x20\n        /* \"#utility.yul\":9282:9291   */\n      dup3\n        /* \"#utility.yul\":9278:9296   */\n      add\n        /* \"#utility.yul\":9270:9296   */\n      swap1\n      pop\n        /* \"#utility.yul\":9342:9351   */\n      dup2\n        /* \"#utility.yul\":9336:9340   */\n      dup2\n        /* \"#utility.yul\":9332:9352   */\n      sub\n        /* \"#utility.yul\":9328:9329   */\n      0x00\n        /* \"#utility.yul\":9317:9326   */\n      dup4\n        /* \"#utility.yul\":9313:9330   */\n      add\n        /* \"#utility.yul\":9306:9353   */\n      mstore\n        /* \"#utility.yul\":9370:9478   */\n      tag_429\n        /* \"#utility.yul\":9473:9477   */\n      dup2\n        /* \"#utility.yul\":9464:9470   */\n      dup5\n        /* \"#utility.yul\":9370:9478   */\n      tag_317\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9362:9478   */\n      swap1\n      pop\n        /* \"#utility.yul\":9112:9485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9491:9820   */\n    tag_56:\n        /* \"#utility.yul\":9550:9556   */\n      0x00\n        /* \"#utility.yul\":9599:9601   */\n      0x20\n        /* \"#utility.yul\":9587:9596   */\n      dup3\n        /* \"#utility.yul\":9578:9585   */\n      dup5\n        /* \"#utility.yul\":9574:9597   */\n      sub\n        /* \"#utility.yul\":9570:9602   */\n      slt\n        /* \"#utility.yul\":9567:9686   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":9605:9684   */\n      tag_432\n      tag_288\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9567:9686   */\n    tag_431:\n        /* \"#utility.yul\":9725:9726   */\n      0x00\n        /* \"#utility.yul\":9750:9803   */\n      tag_433\n        /* \"#utility.yul\":9795:9802   */\n      dup5\n        /* \"#utility.yul\":9786:9792   */\n      dup3\n        /* \"#utility.yul\":9775:9784   */\n      dup6\n        /* \"#utility.yul\":9771:9793   */\n      add\n        /* \"#utility.yul\":9750:9803   */\n      tag_302\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9740:9803   */\n      swap2\n      pop\n        /* \"#utility.yul\":9696:9813   */\n      pop\n        /* \"#utility.yul\":9491:9820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9826:10300   */\n    tag_68:\n        /* \"#utility.yul\":9894:9900   */\n      0x00\n        /* \"#utility.yul\":9902:9908   */\n      0x00\n        /* \"#utility.yul\":9951:9953   */\n      0x40\n        /* \"#utility.yul\":9939:9948   */\n      dup4\n        /* \"#utility.yul\":9930:9937   */\n      dup6\n        /* \"#utility.yul\":9926:9949   */\n      sub\n        /* \"#utility.yul\":9922:9954   */\n      slt\n        /* \"#utility.yul\":9919:10038   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9957:10036   */\n      tag_436\n      tag_288\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9919:10038   */\n    tag_435:\n        /* \"#utility.yul\":10077:10078   */\n      0x00\n        /* \"#utility.yul\":10102:10155   */\n      tag_437\n        /* \"#utility.yul\":10147:10154   */\n      dup6\n        /* \"#utility.yul\":10138:10144   */\n      dup3\n        /* \"#utility.yul\":10127:10136   */\n      dup7\n        /* \"#utility.yul\":10123:10145   */\n      add\n        /* \"#utility.yul\":10102:10155   */\n      tag_302\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10092:10155   */\n      swap3\n      pop\n        /* \"#utility.yul\":10048:10165   */\n      pop\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"#utility.yul\":10230:10283   */\n      tag_438\n        /* \"#utility.yul\":10275:10282   */\n      dup6\n        /* \"#utility.yul\":10266:10272   */\n      dup3\n        /* \"#utility.yul\":10255:10264   */\n      dup7\n        /* \"#utility.yul\":10251:10273   */\n      add\n        /* \"#utility.yul\":10230:10283   */\n      tag_302\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10220:10283   */\n      swap2\n      pop\n        /* \"#utility.yul\":10175:10293   */\n      pop\n        /* \"#utility.yul\":9826:10300   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10306:11509   */\n    tag_73:\n        /* \"#utility.yul\":10419:10425   */\n      0x00\n        /* \"#utility.yul\":10427:10433   */\n      0x00\n        /* \"#utility.yul\":10435:10441   */\n      0x00\n        /* \"#utility.yul\":10443:10449   */\n      0x00\n        /* \"#utility.yul\":10451:10457   */\n      0x00\n        /* \"#utility.yul\":10459:10465   */\n      0x00\n        /* \"#utility.yul\":10467:10473   */\n      0x00\n        /* \"#utility.yul\":10516:10519   */\n      0xe0\n        /* \"#utility.yul\":10504:10513   */\n      dup9\n        /* \"#utility.yul\":10495:10502   */\n      dup11\n        /* \"#utility.yul\":10491:10514   */\n      sub\n        /* \"#utility.yul\":10487:10520   */\n      slt\n        /* \"#utility.yul\":10484:10604   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10523:10602   */\n      tag_441\n      tag_288\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10484:10604   */\n    tag_440:\n        /* \"#utility.yul\":10643:10644   */\n      0x00\n        /* \"#utility.yul\":10668:10721   */\n      tag_442\n        /* \"#utility.yul\":10713:10720   */\n      dup11\n        /* \"#utility.yul\":10704:10710   */\n      dup3\n        /* \"#utility.yul\":10693:10702   */\n      dup12\n        /* \"#utility.yul\":10689:10711   */\n      add\n        /* \"#utility.yul\":10668:10721   */\n      tag_302\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10658:10721   */\n      swap8\n      pop\n        /* \"#utility.yul\":10614:10731   */\n      pop\n        /* \"#utility.yul\":10770:10772   */\n      0x20\n        /* \"#utility.yul\":10796:10849   */\n      tag_443\n        /* \"#utility.yul\":10841:10848   */\n      dup11\n        /* \"#utility.yul\":10832:10838   */\n      dup3\n        /* \"#utility.yul\":10821:10830   */\n      dup12\n        /* \"#utility.yul\":10817:10839   */\n      add\n        /* \"#utility.yul\":10796:10849   */\n      tag_302\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10786:10849   */\n      swap7\n      pop\n        /* \"#utility.yul\":10741:10859   */\n      pop\n        /* \"#utility.yul\":10898:10900   */\n      0x40\n        /* \"#utility.yul\":10924:10977   */\n      tag_444\n        /* \"#utility.yul\":10969:10976   */\n      dup11\n        /* \"#utility.yul\":10960:10966   */\n      dup3\n        /* \"#utility.yul\":10949:10958   */\n      dup12\n        /* \"#utility.yul\":10945:10967   */\n      add\n        /* \"#utility.yul\":10924:10977   */\n      tag_292\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10914:10977   */\n      swap6\n      pop\n        /* \"#utility.yul\":10869:10987   */\n      pop\n        /* \"#utility.yul\":11026:11028   */\n      0x60\n        /* \"#utility.yul\":11052:11105   */\n      tag_445\n        /* \"#utility.yul\":11097:11104   */\n      dup11\n        /* \"#utility.yul\":11088:11094   */\n      dup3\n        /* \"#utility.yul\":11077:11086   */\n      dup12\n        /* \"#utility.yul\":11073:11095   */\n      add\n        /* \"#utility.yul\":11052:11105   */\n      tag_292\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11042:11105   */\n      swap5\n      pop\n        /* \"#utility.yul\":10997:11115   */\n      pop\n        /* \"#utility.yul\":11154:11157   */\n      0x80\n        /* \"#utility.yul\":11181:11234   */\n      tag_446\n        /* \"#utility.yul\":11226:11233   */\n      dup11\n        /* \"#utility.yul\":11217:11223   */\n      dup3\n        /* \"#utility.yul\":11206:11215   */\n      dup12\n        /* \"#utility.yul\":11202:11224   */\n      add\n        /* \"#utility.yul\":11181:11234   */\n      tag_292\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11171:11234   */\n      swap4\n      pop\n        /* \"#utility.yul\":11125:11244   */\n      pop\n        /* \"#utility.yul\":11283:11286   */\n      0xa0\n        /* \"#utility.yul\":11310:11363   */\n      tag_447\n        /* \"#utility.yul\":11355:11362   */\n      dup11\n        /* \"#utility.yul\":11346:11352   */\n      dup3\n        /* \"#utility.yul\":11335:11344   */\n      dup12\n        /* \"#utility.yul\":11331:11353   */\n      add\n        /* \"#utility.yul\":11310:11363   */\n      tag_302\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11300:11363   */\n      swap3\n      pop\n        /* \"#utility.yul\":11254:11373   */\n      pop\n        /* \"#utility.yul\":11412:11415   */\n      0xc0\n        /* \"#utility.yul\":11439:11492   */\n      tag_448\n        /* \"#utility.yul\":11484:11491   */\n      dup11\n        /* \"#utility.yul\":11475:11481   */\n      dup3\n        /* \"#utility.yul\":11464:11473   */\n      dup12\n        /* \"#utility.yul\":11460:11482   */\n      add\n        /* \"#utility.yul\":11439:11492   */\n      tag_292\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11429:11492   */\n      swap2\n      pop\n        /* \"#utility.yul\":11383:11502   */\n      pop\n        /* \"#utility.yul\":10306:11509   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11515:11847   */\n    tag_76:\n        /* \"#utility.yul\":11636:11640   */\n      0x00\n        /* \"#utility.yul\":11674:11676   */\n      0x40\n        /* \"#utility.yul\":11663:11672   */\n      dup3\n        /* \"#utility.yul\":11659:11677   */\n      add\n        /* \"#utility.yul\":11651:11677   */\n      swap1\n      pop\n        /* \"#utility.yul\":11687:11758   */\n      tag_450\n        /* \"#utility.yul\":11755:11756   */\n      0x00\n        /* \"#utility.yul\":11744:11753   */\n      dup4\n        /* \"#utility.yul\":11740:11757   */\n      add\n        /* \"#utility.yul\":11731:11737   */\n      dup6\n        /* \"#utility.yul\":11687:11758   */\n      tag_293\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11768:11840   */\n      tag_451\n        /* \"#utility.yul\":11836:11838   */\n      0x20\n        /* \"#utility.yul\":11825:11834   */\n      dup4\n        /* \"#utility.yul\":11821:11839   */\n      add\n        /* \"#utility.yul\":11812:11818   */\n      dup5\n        /* \"#utility.yul\":11768:11840   */\n      tag_293\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11515:11847   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11853:13202   */\n    tag_83:\n        /* \"#utility.yul\":11975:11981   */\n      0x00\n        /* \"#utility.yul\":11983:11989   */\n      0x00\n        /* \"#utility.yul\":11991:11997   */\n      0x00\n        /* \"#utility.yul\":11999:12005   */\n      0x00\n        /* \"#utility.yul\":12007:12013   */\n      0x00\n        /* \"#utility.yul\":12015:12021   */\n      0x00\n        /* \"#utility.yul\":12023:12029   */\n      0x00\n        /* \"#utility.yul\":12031:12037   */\n      0x00\n        /* \"#utility.yul\":12080:12083   */\n      0x0100\n        /* \"#utility.yul\":12068:12077   */\n      dup10\n        /* \"#utility.yul\":12059:12066   */\n      dup12\n        /* \"#utility.yul\":12055:12078   */\n      sub\n        /* \"#utility.yul\":12051:12084   */\n      slt\n        /* \"#utility.yul\":12048:12168   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":12087:12166   */\n      tag_454\n      tag_288\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12048:12168   */\n    tag_453:\n        /* \"#utility.yul\":12207:12208   */\n      0x00\n        /* \"#utility.yul\":12232:12285   */\n      tag_455\n        /* \"#utility.yul\":12277:12284   */\n      dup12\n        /* \"#utility.yul\":12268:12274   */\n      dup3\n        /* \"#utility.yul\":12257:12266   */\n      dup13\n        /* \"#utility.yul\":12253:12275   */\n      add\n        /* \"#utility.yul\":12232:12285   */\n      tag_302\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12222:12285   */\n      swap9\n      pop\n        /* \"#utility.yul\":12178:12295   */\n      pop\n        /* \"#utility.yul\":12334:12336   */\n      0x20\n        /* \"#utility.yul\":12360:12413   */\n      tag_456\n        /* \"#utility.yul\":12405:12412   */\n      dup12\n        /* \"#utility.yul\":12396:12402   */\n      dup3\n        /* \"#utility.yul\":12385:12394   */\n      dup13\n        /* \"#utility.yul\":12381:12403   */\n      add\n        /* \"#utility.yul\":12360:12413   */\n      tag_302\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12350:12413   */\n      swap8\n      pop\n        /* \"#utility.yul\":12305:12423   */\n      pop\n        /* \"#utility.yul\":12462:12464   */\n      0x40\n        /* \"#utility.yul\":12488:12541   */\n      tag_457\n        /* \"#utility.yul\":12533:12540   */\n      dup12\n        /* \"#utility.yul\":12524:12530   */\n      dup3\n        /* \"#utility.yul\":12513:12522   */\n      dup13\n        /* \"#utility.yul\":12509:12531   */\n      add\n        /* \"#utility.yul\":12488:12541   */\n      tag_292\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12478:12541   */\n      swap7\n      pop\n        /* \"#utility.yul\":12433:12551   */\n      pop\n        /* \"#utility.yul\":12590:12592   */\n      0x60\n        /* \"#utility.yul\":12616:12669   */\n      tag_458\n        /* \"#utility.yul\":12661:12668   */\n      dup12\n        /* \"#utility.yul\":12652:12658   */\n      dup3\n        /* \"#utility.yul\":12641:12650   */\n      dup13\n        /* \"#utility.yul\":12637:12659   */\n      add\n        /* \"#utility.yul\":12616:12669   */\n      tag_292\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12606:12669   */\n      swap6\n      pop\n        /* \"#utility.yul\":12561:12679   */\n      pop\n        /* \"#utility.yul\":12718:12721   */\n      0x80\n        /* \"#utility.yul\":12745:12798   */\n      tag_459\n        /* \"#utility.yul\":12790:12797   */\n      dup12\n        /* \"#utility.yul\":12781:12787   */\n      dup3\n        /* \"#utility.yul\":12770:12779   */\n      dup13\n        /* \"#utility.yul\":12766:12788   */\n      add\n        /* \"#utility.yul\":12745:12798   */\n      tag_292\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12735:12798   */\n      swap5\n      pop\n        /* \"#utility.yul\":12689:12808   */\n      pop\n        /* \"#utility.yul\":12847:12850   */\n      0xa0\n        /* \"#utility.yul\":12874:12927   */\n      tag_460\n        /* \"#utility.yul\":12919:12926   */\n      dup12\n        /* \"#utility.yul\":12910:12916   */\n      dup3\n        /* \"#utility.yul\":12899:12908   */\n      dup13\n        /* \"#utility.yul\":12895:12917   */\n      add\n        /* \"#utility.yul\":12874:12927   */\n      tag_292\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12864:12927   */\n      swap4\n      pop\n        /* \"#utility.yul\":12818:12937   */\n      pop\n        /* \"#utility.yul\":12976:12979   */\n      0xc0\n        /* \"#utility.yul\":13003:13056   */\n      tag_461\n        /* \"#utility.yul\":13048:13055   */\n      dup12\n        /* \"#utility.yul\":13039:13045   */\n      dup3\n        /* \"#utility.yul\":13028:13037   */\n      dup13\n        /* \"#utility.yul\":13024:13046   */\n      add\n        /* \"#utility.yul\":13003:13056   */\n      tag_302\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12993:13056   */\n      swap3\n      pop\n        /* \"#utility.yul\":12947:13066   */\n      pop\n        /* \"#utility.yul\":13105:13108   */\n      0xe0\n        /* \"#utility.yul\":13132:13185   */\n      tag_462\n        /* \"#utility.yul\":13177:13184   */\n      dup12\n        /* \"#utility.yul\":13168:13174   */\n      dup3\n        /* \"#utility.yul\":13157:13166   */\n      dup13\n        /* \"#utility.yul\":13153:13175   */\n      add\n        /* \"#utility.yul\":13132:13185   */\n      tag_292\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13122:13185   */\n      swap2\n      pop\n        /* \"#utility.yul\":13076:13195   */\n      pop\n        /* \"#utility.yul\":11853:13202   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13208:13650   */\n    tag_86:\n        /* \"#utility.yul\":13357:13361   */\n      0x00\n        /* \"#utility.yul\":13395:13397   */\n      0x60\n        /* \"#utility.yul\":13384:13393   */\n      dup3\n        /* \"#utility.yul\":13380:13398   */\n      add\n        /* \"#utility.yul\":13372:13398   */\n      swap1\n      pop\n        /* \"#utility.yul\":13408:13479   */\n      tag_464\n        /* \"#utility.yul\":13476:13477   */\n      0x00\n        /* \"#utility.yul\":13465:13474   */\n      dup4\n        /* \"#utility.yul\":13461:13478   */\n      add\n        /* \"#utility.yul\":13452:13458   */\n      dup7\n        /* \"#utility.yul\":13408:13479   */\n      tag_293\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13489:13561   */\n      tag_465\n        /* \"#utility.yul\":13557:13559   */\n      0x20\n        /* \"#utility.yul\":13546:13555   */\n      dup4\n        /* \"#utility.yul\":13542:13560   */\n      add\n        /* \"#utility.yul\":13533:13539   */\n      dup6\n        /* \"#utility.yul\":13489:13561   */\n      tag_293\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13571:13643   */\n      tag_466\n        /* \"#utility.yul\":13639:13641   */\n      0x40\n        /* \"#utility.yul\":13628:13637   */\n      dup4\n        /* \"#utility.yul\":13624:13642   */\n      add\n        /* \"#utility.yul\":13615:13621   */\n      dup5\n        /* \"#utility.yul\":13571:13643   */\n      tag_293\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13208:13650   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13656:13836   */\n    tag_318:\n        /* \"#utility.yul\":13704:13781   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13701:13702   */\n      0x00\n        /* \"#utility.yul\":13694:13782   */\n      mstore\n        /* \"#utility.yul\":13801:13805   */\n      0x11\n        /* \"#utility.yul\":13798:13799   */\n      0x04\n        /* \"#utility.yul\":13791:13806   */\n      mstore\n        /* \"#utility.yul\":13825:13829   */\n      0x24\n        /* \"#utility.yul\":13822:13823   */\n      0x00\n        /* \"#utility.yul\":13815:13830   */\n      revert\n        /* \"#utility.yul\":13842:14033   */\n    tag_89:\n        /* \"#utility.yul\":13882:13885   */\n      0x00\n        /* \"#utility.yul\":13901:13921   */\n      tag_469\n        /* \"#utility.yul\":13919:13920   */\n      dup3\n        /* \"#utility.yul\":13901:13921   */\n      tag_290\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13896:13921   */\n      swap2\n      pop\n        /* \"#utility.yul\":13935:13955   */\n      tag_470\n        /* \"#utility.yul\":13953:13954   */\n      dup4\n        /* \"#utility.yul\":13935:13955   */\n      tag_290\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13930:13955   */\n      swap3\n      pop\n        /* \"#utility.yul\":13978:13979   */\n      dup3\n        /* \"#utility.yul\":13975:13976   */\n      dup3\n        /* \"#utility.yul\":13971:13980   */\n      add\n        /* \"#utility.yul\":13964:13980   */\n      swap1\n      pop\n        /* \"#utility.yul\":13999:14002   */\n      dup1\n        /* \"#utility.yul\":13996:13997   */\n      dup3\n        /* \"#utility.yul\":13993:14003   */\n      gt\n        /* \"#utility.yul\":13990:14026   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":14006:14024   */\n      tag_472\n      tag_318\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13990:14026   */\n    tag_471:\n        /* \"#utility.yul\":13842:14033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14039:14449   */\n    tag_91:\n        /* \"#utility.yul\":14079:14086   */\n      0x00\n        /* \"#utility.yul\":14102:14122   */\n      tag_474\n        /* \"#utility.yul\":14120:14121   */\n      dup3\n        /* \"#utility.yul\":14102:14122   */\n      tag_290\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14097:14122   */\n      swap2\n      pop\n        /* \"#utility.yul\":14136:14156   */\n      tag_475\n        /* \"#utility.yul\":14154:14155   */\n      dup4\n        /* \"#utility.yul\":14136:14156   */\n      tag_290\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14131:14156   */\n      swap3\n      pop\n        /* \"#utility.yul\":14191:14192   */\n      dup3\n        /* \"#utility.yul\":14188:14189   */\n      dup3\n        /* \"#utility.yul\":14184:14193   */\n      mul\n        /* \"#utility.yul\":14213:14243   */\n      tag_476\n        /* \"#utility.yul\":14231:14242   */\n      dup2\n        /* \"#utility.yul\":14213:14243   */\n      tag_290\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":14202:14243   */\n      swap2\n      pop\n        /* \"#utility.yul\":14392:14393   */\n      dup3\n        /* \"#utility.yul\":14383:14390   */\n      dup3\n        /* \"#utility.yul\":14379:14394   */\n      div\n        /* \"#utility.yul\":14376:14377   */\n      dup5\n        /* \"#utility.yul\":14373:14395   */\n      eq\n        /* \"#utility.yul\":14353:14354   */\n      dup4\n        /* \"#utility.yul\":14346:14355   */\n      iszero\n        /* \"#utility.yul\":14326:14409   */\n      or\n        /* \"#utility.yul\":14303:14442   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":14422:14440   */\n      tag_478\n      tag_318\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14303:14442   */\n    tag_477:\n        /* \"#utility.yul\":14087:14449   */\n      pop\n        /* \"#utility.yul\":14039:14449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14455:14635   */\n    tag_319:\n        /* \"#utility.yul\":14503:14580   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14500:14501   */\n      0x00\n        /* \"#utility.yul\":14493:14581   */\n      mstore\n        /* \"#utility.yul\":14600:14604   */\n      0x12\n        /* \"#utility.yul\":14597:14598   */\n      0x04\n        /* \"#utility.yul\":14590:14605   */\n      mstore\n        /* \"#utility.yul\":14624:14628   */\n      0x24\n        /* \"#utility.yul\":14621:14622   */\n      0x00\n        /* \"#utility.yul\":14614:14629   */\n      revert\n        /* \"#utility.yul\":14641:14826   */\n    tag_93:\n        /* \"#utility.yul\":14681:14682   */\n      0x00\n        /* \"#utility.yul\":14698:14718   */\n      tag_481\n        /* \"#utility.yul\":14716:14717   */\n      dup3\n        /* \"#utility.yul\":14698:14718   */\n      tag_290\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14693:14718   */\n      swap2\n      pop\n        /* \"#utility.yul\":14732:14752   */\n      tag_482\n        /* \"#utility.yul\":14750:14751   */\n      dup4\n        /* \"#utility.yul\":14732:14752   */\n      tag_290\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14727:14752   */\n      swap3\n      pop\n        /* \"#utility.yul\":14771:14772   */\n      dup3\n        /* \"#utility.yul\":14761:14796   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":14776:14794   */\n      tag_484\n      tag_319\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14761:14796   */\n    tag_483:\n        /* \"#utility.yul\":14818:14819   */\n      dup3\n        /* \"#utility.yul\":14815:14816   */\n      dup3\n        /* \"#utility.yul\":14811:14820   */\n      div\n        /* \"#utility.yul\":14806:14820   */\n      swap1\n      pop\n        /* \"#utility.yul\":14641:14826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14832:15012   */\n    tag_320:\n        /* \"#utility.yul\":14880:14957   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14877:14878   */\n      0x00\n        /* \"#utility.yul\":14870:14958   */\n      mstore\n        /* \"#utility.yul\":14977:14981   */\n      0x22\n        /* \"#utility.yul\":14974:14975   */\n      0x04\n        /* \"#utility.yul\":14967:14982   */\n      mstore\n        /* \"#utility.yul\":15001:15005   */\n      0x24\n        /* \"#utility.yul\":14998:14999   */\n      0x00\n        /* \"#utility.yul\":14991:15006   */\n      revert\n        /* \"#utility.yul\":15018:15338   */\n    tag_96:\n        /* \"#utility.yul\":15062:15068   */\n      0x00\n        /* \"#utility.yul\":15099:15100   */\n      0x02\n        /* \"#utility.yul\":15093:15097   */\n      dup3\n        /* \"#utility.yul\":15089:15101   */\n      div\n        /* \"#utility.yul\":15079:15101   */\n      swap1\n      pop\n        /* \"#utility.yul\":15146:15147   */\n      0x01\n        /* \"#utility.yul\":15140:15144   */\n      dup3\n        /* \"#utility.yul\":15136:15148   */\n      and\n        /* \"#utility.yul\":15167:15185   */\n      dup1\n        /* \"#utility.yul\":15157:15238   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":15223:15227   */\n      0x7f\n        /* \"#utility.yul\":15215:15221   */\n      dup3\n        /* \"#utility.yul\":15211:15228   */\n      and\n        /* \"#utility.yul\":15201:15228   */\n      swap2\n      pop\n        /* \"#utility.yul\":15157:15238   */\n    tag_487:\n        /* \"#utility.yul\":15285:15287   */\n      0x20\n        /* \"#utility.yul\":15277:15283   */\n      dup3\n        /* \"#utility.yul\":15274:15288   */\n      lt\n        /* \"#utility.yul\":15254:15272   */\n      dup2\n        /* \"#utility.yul\":15251:15289   */\n      sub\n        /* \"#utility.yul\":15248:15332   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":15304:15322   */\n      tag_489\n      tag_320\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15248:15332   */\n    tag_488:\n        /* \"#utility.yul\":15069:15338   */\n      pop\n        /* \"#utility.yul\":15018:15338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15344:15509   */\n    tag_321:\n        /* \"#utility.yul\":15484:15501   */\n      0x646561646c696e65526561636865640000000000000000000000000000000000\n        /* \"#utility.yul\":15480:15481   */\n      0x00\n        /* \"#utility.yul\":15472:15478   */\n      dup3\n        /* \"#utility.yul\":15468:15482   */\n      add\n        /* \"#utility.yul\":15461:15502   */\n      mstore\n        /* \"#utility.yul\":15344:15509   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15515:15881   */\n    tag_322:\n        /* \"#utility.yul\":15657:15660   */\n      0x00\n        /* \"#utility.yul\":15678:15745   */\n      tag_492\n        /* \"#utility.yul\":15742:15744   */\n      0x0f\n        /* \"#utility.yul\":15737:15740   */\n      dup4\n        /* \"#utility.yul\":15678:15745   */\n      tag_295\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15671:15745   */\n      swap2\n      pop\n        /* \"#utility.yul\":15754:15847   */\n      tag_493\n        /* \"#utility.yul\":15843:15846   */\n      dup3\n        /* \"#utility.yul\":15754:15847   */\n      tag_321\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15872:15874   */\n      0x20\n        /* \"#utility.yul\":15867:15870   */\n      dup3\n        /* \"#utility.yul\":15863:15875   */\n      add\n        /* \"#utility.yul\":15856:15875   */\n      swap1\n      pop\n        /* \"#utility.yul\":15515:15881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15887:16306   */\n    tag_117:\n        /* \"#utility.yul\":16053:16057   */\n      0x00\n        /* \"#utility.yul\":16091:16093   */\n      0x20\n        /* \"#utility.yul\":16080:16089   */\n      dup3\n        /* \"#utility.yul\":16076:16094   */\n      add\n        /* \"#utility.yul\":16068:16094   */\n      swap1\n      pop\n        /* \"#utility.yul\":16140:16149   */\n      dup2\n        /* \"#utility.yul\":16134:16138   */\n      dup2\n        /* \"#utility.yul\":16130:16150   */\n      sub\n        /* \"#utility.yul\":16126:16127   */\n      0x00\n        /* \"#utility.yul\":16115:16124   */\n      dup4\n        /* \"#utility.yul\":16111:16128   */\n      add\n        /* \"#utility.yul\":16104:16151   */\n      mstore\n        /* \"#utility.yul\":16168:16299   */\n      tag_495\n        /* \"#utility.yul\":16294:16298   */\n      dup2\n        /* \"#utility.yul\":16168:16299   */\n      tag_322\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16160:16299   */\n      swap1\n      pop\n        /* \"#utility.yul\":15887:16306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16312:16492   */\n    tag_120:\n        /* \"#utility.yul\":16360:16437   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16357:16358   */\n      0x00\n        /* \"#utility.yul\":16350:16438   */\n      mstore\n        /* \"#utility.yul\":16457:16461   */\n      0x32\n        /* \"#utility.yul\":16454:16455   */\n      0x04\n        /* \"#utility.yul\":16447:16462   */\n      mstore\n        /* \"#utility.yul\":16481:16485   */\n      0x24\n        /* \"#utility.yul\":16478:16479   */\n      0x00\n        /* \"#utility.yul\":16471:16486   */\n      revert\n        /* \"#utility.yul\":16498:16616   */\n    tag_323:\n        /* \"#utility.yul\":16585:16609   */\n      tag_498\n        /* \"#utility.yul\":16603:16608   */\n      dup2\n        /* \"#utility.yul\":16585:16609   */\n      tag_300\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":16580:16583   */\n      dup3\n        /* \"#utility.yul\":16573:16610   */\n      mstore\n        /* \"#utility.yul\":16498:16616   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16622:16844   */\n    tag_126:\n        /* \"#utility.yul\":16715:16719   */\n      0x00\n        /* \"#utility.yul\":16753:16755   */\n      0x20\n        /* \"#utility.yul\":16742:16751   */\n      dup3\n        /* \"#utility.yul\":16738:16756   */\n      add\n        /* \"#utility.yul\":16730:16756   */\n      swap1\n      pop\n        /* \"#utility.yul\":16766:16837   */\n      tag_500\n        /* \"#utility.yul\":16834:16835   */\n      0x00\n        /* \"#utility.yul\":16823:16832   */\n      dup4\n        /* \"#utility.yul\":16819:16836   */\n      add\n        /* \"#utility.yul\":16810:16816   */\n      dup5\n        /* \"#utility.yul\":16766:16837   */\n      tag_323\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16622:16844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16850:16993   */\n    tag_324:\n        /* \"#utility.yul\":16907:16912   */\n      0x00\n        /* \"#utility.yul\":16938:16944   */\n      dup2\n        /* \"#utility.yul\":16932:16945   */\n      mload\n        /* \"#utility.yul\":16923:16945   */\n      swap1\n      pop\n        /* \"#utility.yul\":16954:16987   */\n      tag_502\n        /* \"#utility.yul\":16981:16986   */\n      dup2\n        /* \"#utility.yul\":16954:16987   */\n      tag_291\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":16850:16993   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16999:17350   */\n    tag_130:\n        /* \"#utility.yul\":17069:17075   */\n      0x00\n        /* \"#utility.yul\":17118:17120   */\n      0x20\n        /* \"#utility.yul\":17106:17115   */\n      dup3\n        /* \"#utility.yul\":17097:17104   */\n      dup5\n        /* \"#utility.yul\":17093:17116   */\n      sub\n        /* \"#utility.yul\":17089:17121   */\n      slt\n        /* \"#utility.yul\":17086:17205   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":17124:17203   */\n      tag_505\n      tag_288\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17086:17205   */\n    tag_504:\n        /* \"#utility.yul\":17244:17245   */\n      0x00\n        /* \"#utility.yul\":17269:17333   */\n      tag_506\n        /* \"#utility.yul\":17325:17332   */\n      dup5\n        /* \"#utility.yul\":17316:17322   */\n      dup3\n        /* \"#utility.yul\":17305:17314   */\n      dup6\n        /* \"#utility.yul\":17301:17323   */\n      add\n        /* \"#utility.yul\":17269:17333   */\n      tag_324\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17259:17333   */\n      swap2\n      pop\n        /* \"#utility.yul\":17215:17343   */\n      pop\n        /* \"#utility.yul\":16999:17350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17356:17441   */\n    tag_325:\n        /* \"#utility.yul\":17401:17408   */\n      0x00\n        /* \"#utility.yul\":17430:17435   */\n      dup2\n        /* \"#utility.yul\":17419:17435   */\n      swap1\n      pop\n        /* \"#utility.yul\":17356:17441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17447:17507   */\n    tag_326:\n        /* \"#utility.yul\":17475:17478   */\n      0x00\n        /* \"#utility.yul\":17496:17501   */\n      dup2\n        /* \"#utility.yul\":17489:17501   */\n      swap1\n      pop\n        /* \"#utility.yul\":17447:17507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17513:17671   */\n    tag_327:\n        /* \"#utility.yul\":17571:17580   */\n      0x00\n        /* \"#utility.yul\":17604:17665   */\n      tag_510\n        /* \"#utility.yul\":17622:17664   */\n      tag_511\n        /* \"#utility.yul\":17631:17663   */\n      tag_512\n        /* \"#utility.yul\":17657:17662   */\n      dup5\n        /* \"#utility.yul\":17631:17663   */\n      tag_325\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17622:17664   */\n      tag_326\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":17604:17665   */\n      tag_290\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17591:17665   */\n      swap1\n      pop\n        /* \"#utility.yul\":17513:17671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17677:17824   */\n    tag_328:\n        /* \"#utility.yul\":17772:17817   */\n      tag_514\n        /* \"#utility.yul\":17811:17816   */\n      dup2\n        /* \"#utility.yul\":17772:17817   */\n      tag_327\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17767:17770   */\n      dup3\n        /* \"#utility.yul\":17760:17818   */\n      mstore\n        /* \"#utility.yul\":17677:17824   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17830:18288   */\n    tag_140:\n        /* \"#utility.yul\":17987:17991   */\n      0x00\n        /* \"#utility.yul\":18025:18027   */\n      0x60\n        /* \"#utility.yul\":18014:18023   */\n      dup3\n        /* \"#utility.yul\":18010:18028   */\n      add\n        /* \"#utility.yul\":18002:18028   */\n      swap1\n      pop\n        /* \"#utility.yul\":18038:18109   */\n      tag_516\n        /* \"#utility.yul\":18106:18107   */\n      0x00\n        /* \"#utility.yul\":18095:18104   */\n      dup4\n        /* \"#utility.yul\":18091:18108   */\n      add\n        /* \"#utility.yul\":18082:18088   */\n      dup7\n        /* \"#utility.yul\":18038:18109   */\n      tag_323\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18119:18191   */\n      tag_517\n        /* \"#utility.yul\":18187:18189   */\n      0x20\n        /* \"#utility.yul\":18176:18185   */\n      dup4\n        /* \"#utility.yul\":18172:18190   */\n      add\n        /* \"#utility.yul\":18163:18169   */\n      dup6\n        /* \"#utility.yul\":18119:18191   */\n      tag_323\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18201:18281   */\n      tag_518\n        /* \"#utility.yul\":18277:18279   */\n      0x40\n        /* \"#utility.yul\":18266:18275   */\n      dup4\n        /* \"#utility.yul\":18262:18280   */\n      add\n        /* \"#utility.yul\":18253:18259   */\n      dup5\n        /* \"#utility.yul\":18201:18281   */\n      tag_328\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17830:18288   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18294:18410   */\n    tag_329:\n        /* \"#utility.yul\":18364:18385   */\n      tag_520\n        /* \"#utility.yul\":18379:18384   */\n      dup2\n        /* \"#utility.yul\":18364:18385   */\n      tag_303\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18357:18362   */\n      dup2\n        /* \"#utility.yul\":18354:18386   */\n      eq\n        /* \"#utility.yul\":18344:18404   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":18400:18401   */\n      0x00\n        /* \"#utility.yul\":18397:18398   */\n      0x00\n        /* \"#utility.yul\":18390:18402   */\n      revert\n        /* \"#utility.yul\":18344:18404   */\n    tag_521:\n        /* \"#utility.yul\":18294:18410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18416:18553   */\n    tag_330:\n        /* \"#utility.yul\":18470:18475   */\n      0x00\n        /* \"#utility.yul\":18501:18507   */\n      dup2\n        /* \"#utility.yul\":18495:18508   */\n      mload\n        /* \"#utility.yul\":18486:18508   */\n      swap1\n      pop\n        /* \"#utility.yul\":18517:18547   */\n      tag_523\n        /* \"#utility.yul\":18541:18546   */\n      dup2\n        /* \"#utility.yul\":18517:18547   */\n      tag_329\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18416:18553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18559:18904   */\n    tag_144:\n        /* \"#utility.yul\":18626:18632   */\n      0x00\n        /* \"#utility.yul\":18675:18677   */\n      0x20\n        /* \"#utility.yul\":18663:18672   */\n      dup3\n        /* \"#utility.yul\":18654:18661   */\n      dup5\n        /* \"#utility.yul\":18650:18673   */\n      sub\n        /* \"#utility.yul\":18646:18678   */\n      slt\n        /* \"#utility.yul\":18643:18762   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":18681:18760   */\n      tag_526\n      tag_288\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18643:18762   */\n    tag_525:\n        /* \"#utility.yul\":18801:18802   */\n      0x00\n        /* \"#utility.yul\":18826:18887   */\n      tag_527\n        /* \"#utility.yul\":18879:18886   */\n      dup5\n        /* \"#utility.yul\":18870:18876   */\n      dup3\n        /* \"#utility.yul\":18859:18868   */\n      dup6\n        /* \"#utility.yul\":18855:18877   */\n      add\n        /* \"#utility.yul\":18826:18887   */\n      tag_330\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18816:18887   */\n      swap2\n      pop\n        /* \"#utility.yul\":18772:18897   */\n      pop\n        /* \"#utility.yul\":18559:18904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18910:19242   */\n    tag_146:\n        /* \"#utility.yul\":19031:19035   */\n      0x00\n        /* \"#utility.yul\":19069:19071   */\n      0x40\n        /* \"#utility.yul\":19058:19067   */\n      dup3\n        /* \"#utility.yul\":19054:19072   */\n      add\n        /* \"#utility.yul\":19046:19072   */\n      swap1\n      pop\n        /* \"#utility.yul\":19082:19153   */\n      tag_529\n        /* \"#utility.yul\":19150:19151   */\n      0x00\n        /* \"#utility.yul\":19139:19148   */\n      dup4\n        /* \"#utility.yul\":19135:19152   */\n      add\n        /* \"#utility.yul\":19126:19132   */\n      dup6\n        /* \"#utility.yul\":19082:19153   */\n      tag_323\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":19163:19235   */\n      tag_530\n        /* \"#utility.yul\":19231:19233   */\n      0x20\n        /* \"#utility.yul\":19220:19229   */\n      dup4\n        /* \"#utility.yul\":19216:19234   */\n      add\n        /* \"#utility.yul\":19207:19213   */\n      dup5\n        /* \"#utility.yul\":19163:19235   */\n      tag_293\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18910:19242   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19248:19428   */\n    tag_152:\n        /* \"#utility.yul\":19296:19373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19293:19294   */\n      0x00\n        /* \"#utility.yul\":19286:19374   */\n      mstore\n        /* \"#utility.yul\":19393:19397   */\n      0x41\n        /* \"#utility.yul\":19390:19391   */\n      0x04\n        /* \"#utility.yul\":19383:19398   */\n      mstore\n        /* \"#utility.yul\":19417:19421   */\n      0x24\n        /* \"#utility.yul\":19414:19415   */\n      0x00\n        /* \"#utility.yul\":19407:19422   */\n      revert\n        /* \"#utility.yul\":19434:19876   */\n    tag_235:\n        /* \"#utility.yul\":19583:19587   */\n      0x00\n        /* \"#utility.yul\":19621:19623   */\n      0x60\n        /* \"#utility.yul\":19610:19619   */\n      dup3\n        /* \"#utility.yul\":19606:19624   */\n      add\n        /* \"#utility.yul\":19598:19624   */\n      swap1\n      pop\n        /* \"#utility.yul\":19634:19705   */\n      tag_533\n        /* \"#utility.yul\":19702:19703   */\n      0x00\n        /* \"#utility.yul\":19691:19700   */\n      dup4\n        /* \"#utility.yul\":19687:19704   */\n      add\n        /* \"#utility.yul\":19678:19684   */\n      dup7\n        /* \"#utility.yul\":19634:19705   */\n      tag_323\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19715:19787   */\n      tag_534\n        /* \"#utility.yul\":19783:19785   */\n      0x20\n        /* \"#utility.yul\":19772:19781   */\n      dup4\n        /* \"#utility.yul\":19768:19786   */\n      add\n        /* \"#utility.yul\":19759:19765   */\n      dup6\n        /* \"#utility.yul\":19715:19787   */\n      tag_323\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19797:19869   */\n      tag_535\n        /* \"#utility.yul\":19865:19867   */\n      0x40\n        /* \"#utility.yul\":19854:19863   */\n      dup4\n        /* \"#utility.yul\":19850:19868   */\n      add\n        /* \"#utility.yul\":19841:19847   */\n      dup5\n        /* \"#utility.yul\":19797:19869   */\n      tag_293\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":19434:19876   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19882:20324   */\n    tag_254:\n        /* \"#utility.yul\":20031:20035   */\n      0x00\n        /* \"#utility.yul\":20069:20071   */\n      0x60\n        /* \"#utility.yul\":20058:20067   */\n      dup3\n        /* \"#utility.yul\":20054:20072   */\n      add\n        /* \"#utility.yul\":20046:20072   */\n      swap1\n      pop\n        /* \"#utility.yul\":20082:20153   */\n      tag_537\n        /* \"#utility.yul\":20150:20151   */\n      0x00\n        /* \"#utility.yul\":20139:20148   */\n      dup4\n        /* \"#utility.yul\":20135:20152   */\n      add\n        /* \"#utility.yul\":20126:20132   */\n      dup7\n        /* \"#utility.yul\":20082:20153   */\n      tag_323\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20163:20235   */\n      tag_538\n        /* \"#utility.yul\":20231:20233   */\n      0x20\n        /* \"#utility.yul\":20220:20229   */\n      dup4\n        /* \"#utility.yul\":20216:20234   */\n      add\n        /* \"#utility.yul\":20207:20213   */\n      dup6\n        /* \"#utility.yul\":20163:20235   */\n      tag_293\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":20245:20317   */\n      tag_539\n        /* \"#utility.yul\":20313:20315   */\n      0x40\n        /* \"#utility.yul\":20302:20311   */\n      dup4\n        /* \"#utility.yul\":20298:20316   */\n      add\n        /* \"#utility.yul\":20289:20295   */\n      dup5\n        /* \"#utility.yul\":20245:20317   */\n      tag_293\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":19882:20324   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208ef35f15affddc6ac1cf19d55897dc830fa61f28c83cd7b7c9e53be6ae401af264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:6",
										"nodeType": "YulBlock",
										"src": "0:5231:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "140:152:6",
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:6",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nativeSrc": "150:88:6",
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nativeSrc": "150:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:6",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:6",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nativeSrc": "247:15:6",
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nativeSrc": "247:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:6",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nativeSrc": "271:15:6",
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nativeSrc": "271:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nativeSrc": "326:152:6",
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:6",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:6",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nativeSrc": "336:88:6",
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nativeSrc": "336:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:6",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:15:6",
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nativeSrc": "433:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:6",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nativeSrc": "457:15:6",
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nativeSrc": "457:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nativeSrc": "535:269:6",
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nativeSrc": "545:22:6",
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:6",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nativeSrc": "555:12:6",
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nativeSrc": "576:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nativeSrc": "602:12:6",
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:6",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:6",
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nativeSrc": "667:27:6",
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:6",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nativeSrc": "677:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nativeSrc": "626:26:6",
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nativeSrc": "623:81:6",
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nativeSrc": "756:42:6",
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nativeSrc": "770:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nativeSrc": "770:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:6",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nativeSrc": "740:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nativeSrc": "717:38:6",
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nativeSrc": "714:84:6",
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:6",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:6",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nativeSrc": "864:87:6",
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nativeSrc": "874:11:6",
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:6",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nativeSrc": "895:14:6",
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nativeSrc": "895:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:6",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:6",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:6",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nativeSrc": "1001:49:6",
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nativeSrc": "1011:33:6",
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nativeSrc": "1025:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nativeSrc": "1021:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:6",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:6",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nativeSrc": "1109:54:6",
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nativeSrc": "1119:37:6",
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nativeSrc": "1140:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:6",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:6",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:6",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nativeSrc": "1245:317:6",
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nativeSrc": "1255:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nativeSrc": "1272:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nativeSrc": "1311:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:6",
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nativeSrc": "1429:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nativeSrc": "1477:30:6",
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nativeSrc": "1497:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nativeSrc": "1486:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nativeSrc": "1516:40:6",
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nativeSrc": "1536:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nativeSrc": "1526:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:6",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:6",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:6",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:6",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nativeSrc": "1613:32:6",
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nativeSrc": "1623:16:6",
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:6",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:6",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nativeSrc": "1683:28:6",
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nativeSrc": "1693:12:6",
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:6",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:6",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:6",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nativeSrc": "1777:82:6",
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nativeSrc": "1787:66:6",
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nativeSrc": "1827:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nativeSrc": "1818:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nativeSrc": "1800:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:6",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:6",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nativeSrc": "1912:28:6",
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nativeSrc": "1922:12:6",
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:6",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:6",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:6",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nativeSrc": "2022:193:6",
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nativeSrc": "2032:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nativeSrc": "2056:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nativeSrc": "2145:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nativeSrc": "2166:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nativeSrc": "2117:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nativeSrc": "2104:105:6",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nativeSrc": "2104:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:6",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:6",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:6",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nativeSrc": "2270:24:6",
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nativeSrc": "2280:8:6",
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:6",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:6",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nativeSrc": "2353:136:6",
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nativeSrc": "2363:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nativeSrc": "2377:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nativeSrc": "2418:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nativeSrc": "2418:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:6",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:6",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nativeSrc": "2545:136:6",
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:6",
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nativeSrc": "2626:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nativeSrc": "2626:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nativeSrc": "2562:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nativeSrc": "2555:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:6",
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nativeSrc": "2579:22:6",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nativeSrc": "2588:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:6",
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:6",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:6",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nativeSrc": "2766:464:6",
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:6",
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nativeSrc": "2806:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nativeSrc": "2822:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:6",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nativeSrc": "2906:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nativeSrc": "2892:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:6",
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:6",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:6",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nativeSrc": "3074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nativeSrc": "3071:49:6",
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nativeSrc": "3189:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nativeSrc": "3175:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nativeSrc": "3133:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nativeSrc": "3133:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nativeSrc": "2780:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nativeSrc": "2777:446:6",
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:6",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:6",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:6",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nativeSrc": "3299:54:6",
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nativeSrc": "3309:37:6",
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nativeSrc": "3330:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:6",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:6",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:6",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nativeSrc": "3410:118:6",
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nativeSrc": "3420:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nativeSrc": "3465:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nativeSrc": "3480:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nativeSrc": "3436:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nativeSrc": "3432:56:6",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:6",
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nativeSrc": "3507:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:6",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:6",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:6",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nativeSrc": "3614:214:6",
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nativeSrc": "3747:37:6",
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nativeSrc": "3755:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nativeSrc": "3793:29:6",
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nativeSrc": "3810:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nativeSrc": "3801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:6",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:6",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:6",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:6",
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nativeSrc": "3936:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nativeSrc": "3950:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:6",
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nativeSrc": "4074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nativeSrc": "4074:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:6",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nativeSrc": "4041:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nativeSrc": "4038:56:6",
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nativeSrc": "4104:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nativeSrc": "4144:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nativeSrc": "4118:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nativeSrc": "4203:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nativeSrc": "4203:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nativeSrc": "4280:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:6",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:6",
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:6",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:6",
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:6",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nativeSrc": "4413:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nativeSrc": "4401:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:6",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nativeSrc": "4451:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:6",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:6",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:6",
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nativeSrc": "4608:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nativeSrc": "4602:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nativeSrc": "4587:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nativeSrc": "4587:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nativeSrc": "4646:24:6",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:6",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nativeSrc": "4656:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:6",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:6",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nativeSrc": "4700:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nativeSrc": "4532:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nativeSrc": "4524:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:6",
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:6",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:6",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nativeSrc": "4554:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:6",
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:6",
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nativeSrc": "4809:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nativeSrc": "4803:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:6",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:6",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nativeSrc": "4891:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nativeSrc": "4861:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nativeSrc": "4846:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nativeSrc": "4846:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nativeSrc": "4748:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nativeSrc": "4745:179:6",
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nativeSrc": "4954:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nativeSrc": "4950:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nativeSrc": "4937:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nativeSrc": "4937:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:6",
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:6",
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:6",
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:6",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nativeSrc": "5084:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nativeSrc": "5078:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nativeSrc": "5041:77:6",
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nativeSrc": "5144:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nativeSrc": "5131:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nativeSrc": "5131:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:6",
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nativeSrc": "4342:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nativeSrc": "4335:887:6",
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:6",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:6",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C69000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2E0 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x2E0 JUMP JUMPDEST POP POP POP PUSH2 0x3AF JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x131 JUMPI PUSH2 0x130 PUSH2 0xDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x193 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x19D DUP7 DUP4 PUSH2 0x158 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 PUSH2 0x1DC PUSH2 0x1D7 DUP5 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA DUP4 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x206 DUP3 PUSH2 0x1E8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x164 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x230 DUP2 DUP5 DUP5 PUSH2 0x1F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH2 0x248 PUSH0 DUP3 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x269 DUP2 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x272 DUP5 PUSH2 0x149 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x281 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x295 PUSH2 0x28D DUP6 PUSH2 0x149 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x235 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D0 DUP4 DUP4 PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E9 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x302 JUMPI PUSH2 0x301 PUSH2 0xAD JUMP JUMPDEST JUMPDEST PUSH2 0x30C DUP3 SLOAD PUSH2 0x107 JUMP JUMPDEST PUSH2 0x317 DUP3 DUP3 DUP6 PUSH2 0x257 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x348 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x336 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x340 DUP6 DUP3 PUSH2 0x2C5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x356 DUP7 PUSH2 0x137 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x358 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x396 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20E8 DUP1 PUSH2 0x3BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAC41865A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x315 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP3 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP3 DUP5 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST DUP3 DUP6 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x40D PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH2 0x41A DUP2 DUP6 DUP6 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x438 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH2 0x445 DUP6 DUP3 DUP6 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x450 DUP6 DUP6 DUP6 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 TIMESTAMP DUP3 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x4E9 JUMPI PUSH2 0x4E8 PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP11 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP12 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D8 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0x201B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x762 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP10 DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x779 JUMPI PUSH2 0x778 PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x807 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x833 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x87E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x855 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x87E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x861 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x892 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH2 0x89F DUP2 DUP6 DUP6 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x960 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 TIMESTAMP DUP4 LT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA18 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP10 PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 POP DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP10 PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP DUP3 DUP8 GT ISZERO PUSH2 0xB46 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0xB52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB5C CALLER DUP10 PUSH2 0x1178 JUMP JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC2F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 TIMESTAMP DUP5 LT ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD31 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xEA6 JUMPI PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP3 DUP12 PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE21 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP4 DUP12 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xE84 JUMPI DUP11 SWAP5 POP DUP5 PUSH2 0xE73 DUP15 DUP15 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST SWAP4 POP PUSH2 0xE9F JUMP JUMPDEST DUP10 SWAP4 POP DUP4 PUSH2 0xE92 DUP14 DUP16 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP PUSH2 0xEB0 JUMP JUMPDEST DUP9 SWAP1 POP DUP9 SWAP3 POP DUP8 SWAP2 POP JUMPDEST DUP3 DUP8 GT ISZERO PUSH2 0xEBC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0xEC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP PUSH2 0xFCE DUP6 DUP3 PUSH2 0x11F7 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1276 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1000 DUP5 DUP5 PUSH2 0xC61 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1082 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1073 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1081 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1168 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1173 DUP4 DUP4 DUP4 PUSH2 0x1445 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F3 DUP3 PUSH0 DUP4 PUSH2 0x1445 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1272 PUSH0 DUP4 DUP4 PUSH2 0x1445 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1356 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x143F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1436 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1495 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1563 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x151E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1515 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15F4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP2 EQ PUSH2 0x1682 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1693 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16AF PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BD DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16CE DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16DF DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x170B PUSH0 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1753 DUP3 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x175D DUP2 DUP6 PUSH2 0x171B JUMP JUMPDEST SWAP4 POP PUSH2 0x176D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1776 DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1799 DUP2 DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17CA DUP3 PUSH2 0x17A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DA DUP2 PUSH2 0x17C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F5 DUP2 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181E DUP6 DUP3 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184D DUP2 PUSH2 0x1839 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1866 PUSH0 DUP4 ADD DUP5 PUSH2 0x1844 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1890 DUP7 DUP3 DUP8 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18A1 DUP7 DUP3 DUP8 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18B2 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D1 DUP2 PUSH2 0x18BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18EA PUSH0 DUP4 ADD DUP5 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1911 JUMPI PUSH2 0x1910 PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x194A JUMPI PUSH2 0x1949 PUSH2 0x18F8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x196B JUMPI PUSH2 0x196A PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1978 DUP10 DUP3 DUP11 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1989 DUP10 DUP3 DUP11 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x1662 JUMP JUMPDEST JUMPDEST PUSH2 0x19B6 DUP10 DUP3 DUP11 ADD PUSH2 0x18FC JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x19C9 DUP10 DUP3 DUP11 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x19DA DUP10 DUP3 DUP11 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2A DUP4 DUP4 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C DUP3 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x1A56 DUP2 DUP6 PUSH2 0x19F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A61 DUP4 PUSH2 0x1A01 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A91 JUMPI DUP2 MLOAD PUSH2 0x1A78 DUP9 DUP3 PUSH2 0x1A1F JUMP JUMPDEST SWAP8 POP PUSH2 0x1A83 DUP4 PUSH2 0x1A36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A64 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 DUP5 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD2 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0C DUP6 DUP3 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1D DUP6 DUP3 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B42 JUMPI PUSH2 0x1B41 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4F DUP11 DUP3 DUP12 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B60 DUP11 DUP3 DUP12 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B71 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B82 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B93 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1BA4 DUP11 DUP3 DUP12 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BB5 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH0 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1BE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C15 DUP12 DUP3 DUP13 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1C26 DUP12 DUP3 DUP13 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C37 DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1C48 DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1C59 DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1C6A DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1C7B DUP12 DUP3 DUP13 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1C8C DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CAF PUSH0 DUP4 ADD DUP7 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1CBC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1CC9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D08 DUP3 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D13 DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D2B JUMPI PUSH2 0x1D2A PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3B DUP3 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D46 DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D54 DUP2 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DA9 DUP3 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB4 DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x1D72 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x1DCF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x646561646C696E65526561636865640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E60 PUSH1 0xF DUP4 PUSH2 0x171B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E6B DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E8D DUP2 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ECA DUP2 PUSH2 0x17C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EF7 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F1F DUP5 DUP3 DUP6 ADD PUSH2 0x1EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F54 PUSH2 0x1F4F PUSH2 0x1F4A DUP5 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F64 DUP2 PUSH2 0x1F3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F7D PUSH0 DUP4 ADD DUP7 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1F8A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1F97 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1FA8 DUP2 PUSH2 0x1839 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC3 DUP2 PUSH2 0x1F9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDE JUMPI PUSH2 0x1FDD PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FEB DUP5 DUP3 DUP6 ADD PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2007 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x2014 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x205B PUSH0 DUP4 ADD DUP7 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x2068 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x2075 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2090 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x209D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x20AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 RETURN PUSH0 ISZERO 0xAF REVERT 0xDC PUSH11 0xC1CF19D55897DC830FA61F 0x28 0xC8 EXTCODECOPY 0xD7 0xB7 0xC9 JUMPF 0x3BE6 0xAE BLOCKHASH BYTE CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "129:6865:5:-:0;;;165:31;;;;;;;;;;1582:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;129:6865:5;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;129:6865:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 4067,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4726,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 4472,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 4599,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 4060,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 4085,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 4232,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 5189,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_966": {
									"entryPoint": 3299,
									"id": 966,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@allowance_278": {
									"entryPoint": 3169,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1027,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1971,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1116,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAmountOut_1247": {
									"entryPoint": 839,
									"id": 1247,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPrice_1223": {
									"entryPoint": 2218,
									"id": 1223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 883,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1068": {
									"entryPoint": 2506,
									"id": 1068,
									"parameterSlots": 7,
									"returnSlots": 2
								},
								"@swapExactTokensForTokens_1181": {
									"entryPoint": 1124,
									"id": 1181,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 2040,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1061,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1070,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2184,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 6396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_0_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8264,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20327:6",
										"nodeType": "YulBlock",
										"src": "0:20327:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "790:519:6",
													"nodeType": "YulBlock",
													"src": "790:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:6",
																"nodeType": "YulBlock",
																"src": "836:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:6"
																			},
																			"nativeSrc": "838:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:6"
																		},
																		"nativeSrc": "838:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:6"
																		},
																		"nativeSrc": "807:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:6",
																		"nodeType": "YulLiteral",
																		"src": "832:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:6"
																},
																"nativeSrc": "803:32:6",
																"nodeType": "YulFunctionCall",
																"src": "803:32:6"
															},
															"nativeSrc": "800:119:6",
															"nodeType": "YulIf",
															"src": "800:119:6"
														},
														{
															"nativeSrc": "929:117:6",
															"nodeType": "YulBlock",
															"src": "929:117:6",
															"statements": [
																{
																	"nativeSrc": "944:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:6",
																			"nodeType": "YulTypedName",
																			"src": "948:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:6",
																	"nodeType": "YulAssignment",
																	"src": "973:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:6"
																				},
																				"nativeSrc": "1004:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:6"
																		},
																		"nativeSrc": "983:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:6",
															"nodeType": "YulBlock",
															"src": "1056:118:6",
															"statements": [
																{
																	"nativeSrc": "1071:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:6"
																				},
																				"nativeSrc": "1132:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:6"
																		},
																		"nativeSrc": "1111:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:6",
															"nodeType": "YulBlock",
															"src": "1184:118:6",
															"statements": [
																{
																	"nativeSrc": "1199:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:6"
																				},
																				"nativeSrc": "1260:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:6"
																		},
																		"nativeSrc": "1239:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:6",
														"nodeType": "YulTypedName",
														"src": "744:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:6",
														"nodeType": "YulTypedName",
														"src": "755:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:6",
														"nodeType": "YulTypedName",
														"src": "767:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:6",
														"nodeType": "YulTypedName",
														"src": "775:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:6",
														"nodeType": "YulTypedName",
														"src": "783:6:6",
														"type": ""
													}
												],
												"src": "690:619:6"
											},
											{
												"body": {
													"nativeSrc": "1380:53:6",
													"nodeType": "YulBlock",
													"src": "1380:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1397:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1420:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1402:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:6"
																		},
																		"nativeSrc": "1402:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:6"
																},
																"nativeSrc": "1390:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1390:37:6"
															},
															"nativeSrc": "1390:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1315:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1368:5:6",
														"nodeType": "YulTypedName",
														"src": "1368:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1375:3:6",
														"nodeType": "YulTypedName",
														"src": "1375:3:6",
														"type": ""
													}
												],
												"src": "1315:118:6"
											},
											{
												"body": {
													"nativeSrc": "1537:124:6",
													"nodeType": "YulBlock",
													"src": "1537:124:6",
													"statements": [
														{
															"nativeSrc": "1547:26:6",
															"nodeType": "YulAssignment",
															"src": "1547:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:6"
																},
																"nativeSrc": "1555:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:6"
																		},
																		"nativeSrc": "1636:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:6"
																},
																"nativeSrc": "1583:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:6"
															},
															"nativeSrc": "1583:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1439:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:6",
														"nodeType": "YulTypedName",
														"src": "1509:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:6",
														"nodeType": "YulTypedName",
														"src": "1521:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:6",
														"nodeType": "YulTypedName",
														"src": "1532:4:6",
														"type": ""
													}
												],
												"src": "1439:222:6"
											},
											{
												"body": {
													"nativeSrc": "1726:40:6",
													"nodeType": "YulBlock",
													"src": "1726:40:6",
													"statements": [
														{
															"nativeSrc": "1737:22:6",
															"nodeType": "YulAssignment",
															"src": "1737:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1753:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1753:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1747:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1747:5:6"
																},
																"nativeSrc": "1747:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1747:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1737:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1737:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1667:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1709:5:6",
														"nodeType": "YulTypedName",
														"src": "1709:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1719:6:6",
														"nodeType": "YulTypedName",
														"src": "1719:6:6",
														"type": ""
													}
												],
												"src": "1667:99:6"
											},
											{
												"body": {
													"nativeSrc": "1868:73:6",
													"nodeType": "YulBlock",
													"src": "1868:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1885:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1885:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1890:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:6"
																},
																"nativeSrc": "1878:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1878:19:6"
															},
															"nativeSrc": "1878:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1878:19:6"
														},
														{
															"nativeSrc": "1906:29:6",
															"nodeType": "YulAssignment",
															"src": "1906:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1925:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1925:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1930:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1930:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1921:3:6"
																},
																"nativeSrc": "1921:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1921:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1906:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1906:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1772:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1840:3:6",
														"nodeType": "YulTypedName",
														"src": "1840:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1845:6:6",
														"nodeType": "YulTypedName",
														"src": "1845:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1856:11:6",
														"nodeType": "YulTypedName",
														"src": "1856:11:6",
														"type": ""
													}
												],
												"src": "1772:169:6"
											},
											{
												"body": {
													"nativeSrc": "2009:77:6",
													"nodeType": "YulBlock",
													"src": "2009:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2026:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2026:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2031:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2036:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2020:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2020:5:6"
																},
																"nativeSrc": "2020:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2020:23:6"
															},
															"nativeSrc": "2020:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "2020:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2063:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2063:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2068:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2059:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:6"
																		},
																		"nativeSrc": "2059:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2059:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2077:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2052:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:6"
																},
																"nativeSrc": "2052:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2052:27:6"
															},
															"nativeSrc": "2052:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2052:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1947:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1991:3:6",
														"nodeType": "YulTypedName",
														"src": "1991:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1996:3:6",
														"nodeType": "YulTypedName",
														"src": "1996:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2001:6:6",
														"nodeType": "YulTypedName",
														"src": "2001:6:6",
														"type": ""
													}
												],
												"src": "1947:139:6"
											},
											{
												"body": {
													"nativeSrc": "2140:54:6",
													"nodeType": "YulBlock",
													"src": "2140:54:6",
													"statements": [
														{
															"nativeSrc": "2150:38:6",
															"nodeType": "YulAssignment",
															"src": "2150:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2168:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2175:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2175:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:6"
																		},
																		"nativeSrc": "2164:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2164:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2184:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2184:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:6"
																		},
																		"nativeSrc": "2180:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:6"
																},
																"nativeSrc": "2160:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2160:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2150:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2092:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:6",
														"nodeType": "YulTypedName",
														"src": "2123:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2133:6:6",
														"nodeType": "YulTypedName",
														"src": "2133:6:6",
														"type": ""
													}
												],
												"src": "2092:102:6"
											},
											{
												"body": {
													"nativeSrc": "2292:285:6",
													"nodeType": "YulBlock",
													"src": "2292:285:6",
													"statements": [
														{
															"nativeSrc": "2302:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2302:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2349:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2349:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2316:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "2316:32:6"
																},
																"nativeSrc": "2316:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2316:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2306:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2306:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2364:78:6",
															"nodeType": "YulAssignment",
															"src": "2364:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2430:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2430:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2435:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2371:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2371:58:6"
																},
																"nativeSrc": "2371:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2371:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2364:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2364:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2490:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2490:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2497:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:6"
																		},
																		"nativeSrc": "2486:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2504:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2509:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2451:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2451:34:6"
																},
																"nativeSrc": "2451:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2451:65:6"
															},
															"nativeSrc": "2451:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2451:65:6"
														},
														{
															"nativeSrc": "2525:46:6",
															"nodeType": "YulAssignment",
															"src": "2525:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2563:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2541:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2541:21:6"
																		},
																		"nativeSrc": "2541:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2532:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2532:3:6"
																},
																"nativeSrc": "2532:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2532:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2525:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2200:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2273:5:6",
														"nodeType": "YulTypedName",
														"src": "2273:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2280:3:6",
														"nodeType": "YulTypedName",
														"src": "2280:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2288:3:6",
														"nodeType": "YulTypedName",
														"src": "2288:3:6",
														"type": ""
													}
												],
												"src": "2200:377:6"
											},
											{
												"body": {
													"nativeSrc": "2701:195:6",
													"nodeType": "YulBlock",
													"src": "2701:195:6",
													"statements": [
														{
															"nativeSrc": "2711:26:6",
															"nodeType": "YulAssignment",
															"src": "2711:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2723:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2723:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2734:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2734:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:6"
																},
																"nativeSrc": "2719:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2719:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2711:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2758:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2758:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2769:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2769:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2754:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:6"
																		},
																		"nativeSrc": "2754:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2754:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2777:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2777:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2783:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2773:3:6"
																		},
																		"nativeSrc": "2773:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2773:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:6"
																},
																"nativeSrc": "2747:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2747:47:6"
															},
															"nativeSrc": "2747:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2747:47:6"
														},
														{
															"nativeSrc": "2803:86:6",
															"nodeType": "YulAssignment",
															"src": "2803:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2875:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2875:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2884:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2884:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2811:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "2811:63:6"
																},
																"nativeSrc": "2811:78:6",
																"nodeType": "YulFunctionCall",
																"src": "2811:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2803:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2583:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2673:9:6",
														"nodeType": "YulTypedName",
														"src": "2673:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2685:6:6",
														"nodeType": "YulTypedName",
														"src": "2685:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2696:4:6",
														"nodeType": "YulTypedName",
														"src": "2696:4:6",
														"type": ""
													}
												],
												"src": "2583:313:6"
											},
											{
												"body": {
													"nativeSrc": "2947:81:6",
													"nodeType": "YulBlock",
													"src": "2947:81:6",
													"statements": [
														{
															"nativeSrc": "2957:65:6",
															"nodeType": "YulAssignment",
															"src": "2957:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2972:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2972:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2979:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2979:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2968:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:6"
																},
																"nativeSrc": "2968:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2968:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2957:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2902:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:6",
														"nodeType": "YulTypedName",
														"src": "2929:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2939:7:6",
														"nodeType": "YulTypedName",
														"src": "2939:7:6",
														"type": ""
													}
												],
												"src": "2902:126:6"
											},
											{
												"body": {
													"nativeSrc": "3079:51:6",
													"nodeType": "YulBlock",
													"src": "3079:51:6",
													"statements": [
														{
															"nativeSrc": "3089:35:6",
															"nodeType": "YulAssignment",
															"src": "3089:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3118:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3118:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3100:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3100:17:6"
																},
																"nativeSrc": "3100:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3100:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3089:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3089:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3034:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3061:5:6",
														"nodeType": "YulTypedName",
														"src": "3061:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3071:7:6",
														"nodeType": "YulTypedName",
														"src": "3071:7:6",
														"type": ""
													}
												],
												"src": "3034:96:6"
											},
											{
												"body": {
													"nativeSrc": "3179:79:6",
													"nodeType": "YulBlock",
													"src": "3179:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3236:16:6",
																"nodeType": "YulBlock",
																"src": "3236:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3245:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3245:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3248:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3248:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3238:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:6"
																			},
																			"nativeSrc": "3238:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3238:12:6"
																		},
																		"nativeSrc": "3238:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3238:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3202:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3227:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3227:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3209:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3209:17:6"
																				},
																				"nativeSrc": "3209:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3199:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3199:2:6"
																		},
																		"nativeSrc": "3199:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:6"
																},
																"nativeSrc": "3192:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3192:43:6"
															},
															"nativeSrc": "3189:63:6",
															"nodeType": "YulIf",
															"src": "3189:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3136:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3172:5:6",
														"nodeType": "YulTypedName",
														"src": "3172:5:6",
														"type": ""
													}
												],
												"src": "3136:122:6"
											},
											{
												"body": {
													"nativeSrc": "3316:87:6",
													"nodeType": "YulBlock",
													"src": "3316:87:6",
													"statements": [
														{
															"nativeSrc": "3326:29:6",
															"nodeType": "YulAssignment",
															"src": "3326:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3348:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3335:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3335:12:6"
																},
																"nativeSrc": "3335:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3335:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3326:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3391:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3391:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3364:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:26:6"
																},
																"nativeSrc": "3364:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3364:33:6"
															},
															"nativeSrc": "3364:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3364:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3264:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3294:6:6",
														"nodeType": "YulTypedName",
														"src": "3294:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3302:3:6",
														"nodeType": "YulTypedName",
														"src": "3302:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3310:5:6",
														"nodeType": "YulTypedName",
														"src": "3310:5:6",
														"type": ""
													}
												],
												"src": "3264:139:6"
											},
											{
												"body": {
													"nativeSrc": "3492:391:6",
													"nodeType": "YulBlock",
													"src": "3492:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3538:83:6",
																"nodeType": "YulBlock",
																"src": "3538:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3540:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3540:77:6"
																			},
																			"nativeSrc": "3540:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3540:79:6"
																		},
																		"nativeSrc": "3540:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3540:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3513:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3513:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3522:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3522:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3509:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:6"
																		},
																		"nativeSrc": "3509:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3534:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3534:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:6"
																},
																"nativeSrc": "3505:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3505:32:6"
															},
															"nativeSrc": "3502:119:6",
															"nodeType": "YulIf",
															"src": "3502:119:6"
														},
														{
															"nativeSrc": "3631:117:6",
															"nodeType": "YulBlock",
															"src": "3631:117:6",
															"statements": [
																{
																	"nativeSrc": "3646:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3646:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3660:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3660:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3650:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3650:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3675:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3675:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3710:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3710:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3721:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3721:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3706:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3706:3:6"
																				},
																				"nativeSrc": "3706:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3706:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3730:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3730:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3685:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3685:20:6"
																		},
																		"nativeSrc": "3685:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3675:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3675:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3758:118:6",
															"nodeType": "YulBlock",
															"src": "3758:118:6",
															"statements": [
																{
																	"nativeSrc": "3773:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3773:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3787:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3787:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3777:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3777:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3803:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3803:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3838:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3838:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3849:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3849:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3834:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3834:3:6"
																				},
																				"nativeSrc": "3834:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3834:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3858:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3858:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3813:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3813:20:6"
																		},
																		"nativeSrc": "3813:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3813:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3803:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3803:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3409:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3454:9:6",
														"nodeType": "YulTypedName",
														"src": "3454:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3465:7:6",
														"nodeType": "YulTypedName",
														"src": "3465:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3477:6:6",
														"nodeType": "YulTypedName",
														"src": "3477:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3485:6:6",
														"nodeType": "YulTypedName",
														"src": "3485:6:6",
														"type": ""
													}
												],
												"src": "3409:474:6"
											},
											{
												"body": {
													"nativeSrc": "3931:48:6",
													"nodeType": "YulBlock",
													"src": "3931:48:6",
													"statements": [
														{
															"nativeSrc": "3941:32:6",
															"nodeType": "YulAssignment",
															"src": "3941:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3966:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3966:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3959:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3959:6:6"
																		},
																		"nativeSrc": "3959:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3952:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:6"
																},
																"nativeSrc": "3952:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3952:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3941:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3941:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3889:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3913:5:6",
														"nodeType": "YulTypedName",
														"src": "3913:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3923:7:6",
														"nodeType": "YulTypedName",
														"src": "3923:7:6",
														"type": ""
													}
												],
												"src": "3889:90:6"
											},
											{
												"body": {
													"nativeSrc": "4044:50:6",
													"nodeType": "YulBlock",
													"src": "4044:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4061:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4061:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4081:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4081:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4066:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "4066:14:6"
																		},
																		"nativeSrc": "4066:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:6"
																},
																"nativeSrc": "4054:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4054:34:6"
															},
															"nativeSrc": "4054:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4054:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3985:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4032:5:6",
														"nodeType": "YulTypedName",
														"src": "4032:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4039:3:6",
														"nodeType": "YulTypedName",
														"src": "4039:3:6",
														"type": ""
													}
												],
												"src": "3985:109:6"
											},
											{
												"body": {
													"nativeSrc": "4192:118:6",
													"nodeType": "YulBlock",
													"src": "4192:118:6",
													"statements": [
														{
															"nativeSrc": "4202:26:6",
															"nodeType": "YulAssignment",
															"src": "4202:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4214:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4225:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4225:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:6"
																},
																"nativeSrc": "4210:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4210:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4202:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4276:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4289:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4300:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4285:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:6"
																		},
																		"nativeSrc": "4285:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4238:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "4238:37:6"
																},
																"nativeSrc": "4238:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4238:65:6"
															},
															"nativeSrc": "4238:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4238:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4100:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4164:9:6",
														"nodeType": "YulTypedName",
														"src": "4164:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4176:6:6",
														"nodeType": "YulTypedName",
														"src": "4176:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4187:4:6",
														"nodeType": "YulTypedName",
														"src": "4187:4:6",
														"type": ""
													}
												],
												"src": "4100:210:6"
											},
											{
												"body": {
													"nativeSrc": "4416:519:6",
													"nodeType": "YulBlock",
													"src": "4416:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4462:83:6",
																"nodeType": "YulBlock",
																"src": "4462:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4464:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4464:77:6"
																			},
																			"nativeSrc": "4464:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4464:79:6"
																		},
																		"nativeSrc": "4464:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4464:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4437:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4437:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4433:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4433:3:6"
																		},
																		"nativeSrc": "4433:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4433:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4429:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4429:3:6"
																},
																"nativeSrc": "4429:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4429:32:6"
															},
															"nativeSrc": "4426:119:6",
															"nodeType": "YulIf",
															"src": "4426:119:6"
														},
														{
															"nativeSrc": "4555:117:6",
															"nodeType": "YulBlock",
															"src": "4555:117:6",
															"statements": [
																{
																	"nativeSrc": "4570:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4570:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4584:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4584:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4574:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4574:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4599:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4599:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4634:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4634:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4645:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4645:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4630:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4630:3:6"
																				},
																				"nativeSrc": "4630:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4630:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4654:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4654:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4609:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4609:20:6"
																		},
																		"nativeSrc": "4609:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4609:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4599:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4599:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4682:118:6",
															"nodeType": "YulBlock",
															"src": "4682:118:6",
															"statements": [
																{
																	"nativeSrc": "4697:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4697:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4711:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4711:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4701:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4701:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4727:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4727:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4762:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4762:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4773:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4773:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4758:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4758:3:6"
																				},
																				"nativeSrc": "4758:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4758:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4782:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4782:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4737:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4737:20:6"
																		},
																		"nativeSrc": "4737:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4737:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4727:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4727:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4810:118:6",
															"nodeType": "YulBlock",
															"src": "4810:118:6",
															"statements": [
																{
																	"nativeSrc": "4825:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4825:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4839:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4839:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4829:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4829:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4855:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4855:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4890:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4890:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4901:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4901:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4886:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4886:3:6"
																				},
																				"nativeSrc": "4886:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4886:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4910:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4910:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4865:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4865:20:6"
																		},
																		"nativeSrc": "4865:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4865:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4855:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4855:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4316:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4370:9:6",
														"nodeType": "YulTypedName",
														"src": "4370:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4381:7:6",
														"nodeType": "YulTypedName",
														"src": "4381:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4393:6:6",
														"nodeType": "YulTypedName",
														"src": "4393:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4401:6:6",
														"nodeType": "YulTypedName",
														"src": "4401:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4409:6:6",
														"nodeType": "YulTypedName",
														"src": "4409:6:6",
														"type": ""
													}
												],
												"src": "4316:619:6"
											},
											{
												"body": {
													"nativeSrc": "4984:43:6",
													"nodeType": "YulBlock",
													"src": "4984:43:6",
													"statements": [
														{
															"nativeSrc": "4994:27:6",
															"nodeType": "YulAssignment",
															"src": "4994:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5009:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5016:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5016:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5005:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:6"
																},
																"nativeSrc": "5005:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5005:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4994:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4994:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4941:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4966:5:6",
														"nodeType": "YulTypedName",
														"src": "4966:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4976:7:6",
														"nodeType": "YulTypedName",
														"src": "4976:7:6",
														"type": ""
													}
												],
												"src": "4941:86:6"
											},
											{
												"body": {
													"nativeSrc": "5094:51:6",
													"nodeType": "YulBlock",
													"src": "5094:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5111:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5111:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5132:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5132:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5116:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "5116:15:6"
																		},
																		"nativeSrc": "5116:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5104:6:6"
																},
																"nativeSrc": "5104:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5104:35:6"
															},
															"nativeSrc": "5104:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5104:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5033:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5082:5:6",
														"nodeType": "YulTypedName",
														"src": "5082:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5089:3:6",
														"nodeType": "YulTypedName",
														"src": "5089:3:6",
														"type": ""
													}
												],
												"src": "5033:112:6"
											},
											{
												"body": {
													"nativeSrc": "5245:120:6",
													"nodeType": "YulBlock",
													"src": "5245:120:6",
													"statements": [
														{
															"nativeSrc": "5255:26:6",
															"nodeType": "YulAssignment",
															"src": "5255:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5267:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5267:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5278:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5278:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5263:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5263:3:6"
																},
																"nativeSrc": "5263:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5263:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5255:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5255:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5331:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5331:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5344:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5344:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5355:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5355:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5340:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5340:3:6"
																		},
																		"nativeSrc": "5340:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5291:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5291:39:6"
																},
																"nativeSrc": "5291:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5291:67:6"
															},
															"nativeSrc": "5291:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5291:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5151:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:6",
														"nodeType": "YulTypedName",
														"src": "5217:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5229:6:6",
														"nodeType": "YulTypedName",
														"src": "5229:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5240:4:6",
														"nodeType": "YulTypedName",
														"src": "5240:4:6",
														"type": ""
													}
												],
												"src": "5151:214:6"
											},
											{
												"body": {
													"nativeSrc": "5460:28:6",
													"nodeType": "YulBlock",
													"src": "5460:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5477:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5477:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5480:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5480:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5470:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5470:6:6"
																},
																"nativeSrc": "5470:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5470:12:6"
															},
															"nativeSrc": "5470:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5470:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5371:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5371:117:6"
											},
											{
												"body": {
													"nativeSrc": "5583:28:6",
													"nodeType": "YulBlock",
													"src": "5583:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5600:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5600:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5603:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5603:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5593:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:6"
																},
																"nativeSrc": "5593:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5593:12:6"
															},
															"nativeSrc": "5593:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5593:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5494:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5494:117:6"
											},
											{
												"body": {
													"nativeSrc": "5706:28:6",
													"nodeType": "YulBlock",
													"src": "5706:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5723:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5723:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5726:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5726:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5716:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5716:6:6"
																},
																"nativeSrc": "5716:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5716:12:6"
															},
															"nativeSrc": "5716:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5716:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5617:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5617:117:6"
											},
											{
												"body": {
													"nativeSrc": "5847:478:6",
													"nodeType": "YulBlock",
													"src": "5847:478:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5896:83:6",
																"nodeType": "YulBlock",
																"src": "5896:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5898:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5898:77:6"
																			},
																			"nativeSrc": "5898:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5898:79:6"
																		},
																		"nativeSrc": "5898:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5898:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5875:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5883:4:6",
																						"nodeType": "YulLiteral",
																						"src": "5883:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5871:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5871:3:6"
																				},
																				"nativeSrc": "5871:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5871:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5890:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5890:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5867:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5867:3:6"
																		},
																		"nativeSrc": "5867:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5867:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5860:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5860:6:6"
																},
																"nativeSrc": "5860:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5860:35:6"
															},
															"nativeSrc": "5857:122:6",
															"nodeType": "YulIf",
															"src": "5857:122:6"
														},
														{
															"nativeSrc": "5988:30:6",
															"nodeType": "YulAssignment",
															"src": "5988:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6011:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6011:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5998:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5998:12:6"
																},
																"nativeSrc": "5998:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5998:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5988:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6061:83:6",
																"nodeType": "YulBlock",
																"src": "6061:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "6063:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6063:77:6"
																			},
																			"nativeSrc": "6063:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6063:79:6"
																		},
																		"nativeSrc": "6063:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6063:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6033:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6033:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:18:6",
																		"nodeType": "YulLiteral",
																		"src": "6041:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6030:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6030:2:6"
																},
																"nativeSrc": "6030:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6030:30:6"
															},
															"nativeSrc": "6027:117:6",
															"nodeType": "YulIf",
															"src": "6027:117:6"
														},
														{
															"nativeSrc": "6153:29:6",
															"nodeType": "YulAssignment",
															"src": "6153:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6169:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6177:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6177:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6165:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6165:3:6"
																},
																"nativeSrc": "6165:17:6",
																"nodeType": "YulFunctionCall",
																"src": "6165:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "6153:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6153:8:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6236:83:6",
																"nodeType": "YulBlock",
																"src": "6236:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6238:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6238:77:6"
																			},
																			"nativeSrc": "6238:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6238:79:6"
																		},
																		"nativeSrc": "6238:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6238:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "6201:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "6201:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6215:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6215:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6223:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6223:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6211:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6211:3:6"
																				},
																				"nativeSrc": "6211:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6211:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6197:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:6"
																		},
																		"nativeSrc": "6197:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6197:32:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6231:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6231:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6194:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6194:2:6"
																},
																"nativeSrc": "6194:41:6",
																"nodeType": "YulFunctionCall",
																"src": "6194:41:6"
															},
															"nativeSrc": "6191:128:6",
															"nodeType": "YulIf",
															"src": "6191:128:6"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "5757:568:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5814:6:6",
														"nodeType": "YulTypedName",
														"src": "5814:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5822:3:6",
														"nodeType": "YulTypedName",
														"src": "5822:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5830:8:6",
														"nodeType": "YulTypedName",
														"src": "5830:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5840:6:6",
														"nodeType": "YulTypedName",
														"src": "5840:6:6",
														"type": ""
													}
												],
												"src": "5757:568:6"
											},
											{
												"body": {
													"nativeSrc": "6500:972:6",
													"nodeType": "YulBlock",
													"src": "6500:972:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6547:83:6",
																"nodeType": "YulBlock",
																"src": "6547:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6549:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6549:77:6"
																			},
																			"nativeSrc": "6549:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6549:79:6"
																		},
																		"nativeSrc": "6549:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6549:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6521:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6521:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6530:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6517:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6517:3:6"
																		},
																		"nativeSrc": "6517:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6517:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6542:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6542:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6513:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6513:3:6"
																},
																"nativeSrc": "6513:33:6",
																"nodeType": "YulFunctionCall",
																"src": "6513:33:6"
															},
															"nativeSrc": "6510:120:6",
															"nodeType": "YulIf",
															"src": "6510:120:6"
														},
														{
															"nativeSrc": "6640:117:6",
															"nodeType": "YulBlock",
															"src": "6640:117:6",
															"statements": [
																{
																	"nativeSrc": "6655:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6655:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6669:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6659:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6659:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6684:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6684:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6719:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6719:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6730:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6730:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6715:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6715:3:6"
																				},
																				"nativeSrc": "6715:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6715:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6739:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6739:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6694:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6694:20:6"
																		},
																		"nativeSrc": "6694:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6684:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6684:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6767:118:6",
															"nodeType": "YulBlock",
															"src": "6767:118:6",
															"statements": [
																{
																	"nativeSrc": "6782:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6782:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6796:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6796:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6786:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6786:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6812:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6812:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6847:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6847:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6858:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6858:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6843:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6843:3:6"
																				},
																				"nativeSrc": "6843:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6843:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6867:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6867:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6822:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6822:20:6"
																		},
																		"nativeSrc": "6822:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6822:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6812:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6812:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6895:313:6",
															"nodeType": "YulBlock",
															"src": "6895:313:6",
															"statements": [
																{
																	"nativeSrc": "6910:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6910:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6941:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6941:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6952:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6952:2:6",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6937:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6937:3:6"
																				},
																				"nativeSrc": "6937:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6937:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6924:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "6924:12:6"
																		},
																		"nativeSrc": "6924:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6924:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7003:83:6",
																		"nodeType": "YulBlock",
																		"src": "7003:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7005:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "7005:77:6"
																					},
																					"nativeSrc": "7005:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7005:79:6"
																				},
																				"nativeSrc": "7005:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7005:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6975:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6975:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6983:18:6",
																				"nodeType": "YulLiteral",
																				"src": "6983:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6972:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6972:2:6"
																		},
																		"nativeSrc": "6972:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:30:6"
																	},
																	"nativeSrc": "6969:117:6",
																	"nodeType": "YulIf",
																	"src": "6969:117:6"
																},
																{
																	"nativeSrc": "7100:98:6",
																	"nodeType": "YulAssignment",
																	"src": "7100:98:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7170:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7170:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7181:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7181:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7166:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7166:3:6"
																				},
																				"nativeSrc": "7166:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7166:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7190:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7190:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "7118:47:6",
																			"nodeType": "YulIdentifier",
																			"src": "7118:47:6"
																		},
																		"nativeSrc": "7118:80:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:80:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7100:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7100:6:6"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "7108:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7108:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7218:118:6",
															"nodeType": "YulBlock",
															"src": "7218:118:6",
															"statements": [
																{
																	"nativeSrc": "7233:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7233:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7247:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7247:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7237:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7237:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7263:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7263:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7298:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7298:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7309:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7309:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7294:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7294:3:6"
																				},
																				"nativeSrc": "7294:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7294:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7318:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7318:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7273:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7273:20:6"
																		},
																		"nativeSrc": "7273:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7273:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7263:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7263:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7346:119:6",
															"nodeType": "YulBlock",
															"src": "7346:119:6",
															"statements": [
																{
																	"nativeSrc": "7361:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7361:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7375:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7375:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7365:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7365:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7392:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7392:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7427:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7427:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7438:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7438:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7423:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7423:3:6"
																				},
																				"nativeSrc": "7423:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7423:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7447:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7447:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7402:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7402:20:6"
																		},
																		"nativeSrc": "7402:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "7392:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7392:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256",
												"nativeSrc": "6331:1141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6430:9:6",
														"nodeType": "YulTypedName",
														"src": "6430:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6441:7:6",
														"nodeType": "YulTypedName",
														"src": "6441:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6453:6:6",
														"nodeType": "YulTypedName",
														"src": "6453:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6461:6:6",
														"nodeType": "YulTypedName",
														"src": "6461:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6469:6:6",
														"nodeType": "YulTypedName",
														"src": "6469:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6477:6:6",
														"nodeType": "YulTypedName",
														"src": "6477:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6485:6:6",
														"nodeType": "YulTypedName",
														"src": "6485:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6493:6:6",
														"nodeType": "YulTypedName",
														"src": "6493:6:6",
														"type": ""
													}
												],
												"src": "6331:1141:6"
											},
											{
												"body": {
													"nativeSrc": "7552:40:6",
													"nodeType": "YulBlock",
													"src": "7552:40:6",
													"statements": [
														{
															"nativeSrc": "7563:22:6",
															"nodeType": "YulAssignment",
															"src": "7563:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7579:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7579:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7573:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7573:5:6"
																},
																"nativeSrc": "7573:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7573:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7563:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7563:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7478:114:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7535:5:6",
														"nodeType": "YulTypedName",
														"src": "7535:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7545:6:6",
														"nodeType": "YulTypedName",
														"src": "7545:6:6",
														"type": ""
													}
												],
												"src": "7478:114:6"
											},
											{
												"body": {
													"nativeSrc": "7709:73:6",
													"nodeType": "YulBlock",
													"src": "7709:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7726:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7726:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7731:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7731:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7719:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:6"
																},
																"nativeSrc": "7719:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7719:19:6"
															},
															"nativeSrc": "7719:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "7719:19:6"
														},
														{
															"nativeSrc": "7747:29:6",
															"nodeType": "YulAssignment",
															"src": "7747:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7766:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7766:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7771:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7771:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7762:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7762:3:6"
																},
																"nativeSrc": "7762:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7762:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7747:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "7747:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7598:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7681:3:6",
														"nodeType": "YulTypedName",
														"src": "7681:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7686:6:6",
														"nodeType": "YulTypedName",
														"src": "7686:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7697:11:6",
														"nodeType": "YulTypedName",
														"src": "7697:11:6",
														"type": ""
													}
												],
												"src": "7598:184:6"
											},
											{
												"body": {
													"nativeSrc": "7860:60:6",
													"nodeType": "YulBlock",
													"src": "7860:60:6",
													"statements": [
														{
															"nativeSrc": "7870:11:6",
															"nodeType": "YulAssignment",
															"src": "7870:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "7878:3:6",
																"nodeType": "YulIdentifier",
																"src": "7878:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7870:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7870:4:6"
																}
															]
														},
														{
															"nativeSrc": "7891:22:6",
															"nodeType": "YulAssignment",
															"src": "7891:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7903:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7903:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7908:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7899:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7899:3:6"
																},
																"nativeSrc": "7899:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7899:14:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7891:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7891:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7788:132:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7847:3:6",
														"nodeType": "YulTypedName",
														"src": "7847:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7855:4:6",
														"nodeType": "YulTypedName",
														"src": "7855:4:6",
														"type": ""
													}
												],
												"src": "7788:132:6"
											},
											{
												"body": {
													"nativeSrc": "7981:53:6",
													"nodeType": "YulBlock",
													"src": "7981:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7998:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7998:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8021:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8021:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8003:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "8003:17:6"
																		},
																		"nativeSrc": "8003:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8003:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7991:6:6"
																},
																"nativeSrc": "7991:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7991:37:6"
															},
															"nativeSrc": "7991:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7991:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7926:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7969:5:6",
														"nodeType": "YulTypedName",
														"src": "7969:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7976:3:6",
														"nodeType": "YulTypedName",
														"src": "7976:3:6",
														"type": ""
													}
												],
												"src": "7926:108:6"
											},
											{
												"body": {
													"nativeSrc": "8120:99:6",
													"nodeType": "YulBlock",
													"src": "8120:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8164:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8164:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8172:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8172:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "8130:33:6",
																	"nodeType": "YulIdentifier",
																	"src": "8130:33:6"
																},
																"nativeSrc": "8130:46:6",
																"nodeType": "YulFunctionCall",
																"src": "8130:46:6"
															},
															"nativeSrc": "8130:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "8130:46:6"
														},
														{
															"nativeSrc": "8185:28:6",
															"nodeType": "YulAssignment",
															"src": "8185:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8203:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8203:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8208:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8208:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8199:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8199:3:6"
																},
																"nativeSrc": "8199:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8199:14:6"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8185:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8185:10:6"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "8040:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8093:6:6",
														"nodeType": "YulTypedName",
														"src": "8093:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8101:3:6",
														"nodeType": "YulTypedName",
														"src": "8101:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8109:10:6",
														"nodeType": "YulTypedName",
														"src": "8109:10:6",
														"type": ""
													}
												],
												"src": "8040:179:6"
											},
											{
												"body": {
													"nativeSrc": "8300:38:6",
													"nodeType": "YulBlock",
													"src": "8300:38:6",
													"statements": [
														{
															"nativeSrc": "8310:22:6",
															"nodeType": "YulAssignment",
															"src": "8310:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8322:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8322:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8327:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8327:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8318:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8318:3:6"
																},
																"nativeSrc": "8318:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8318:14:6"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8310:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8310:4:6"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8225:113:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8287:3:6",
														"nodeType": "YulTypedName",
														"src": "8287:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8295:4:6",
														"nodeType": "YulTypedName",
														"src": "8295:4:6",
														"type": ""
													}
												],
												"src": "8225:113:6"
											},
											{
												"body": {
													"nativeSrc": "8498:608:6",
													"nodeType": "YulBlock",
													"src": "8498:608:6",
													"statements": [
														{
															"nativeSrc": "8508:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8508:68:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8570:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8570:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8522:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "8522:47:6"
																},
																"nativeSrc": "8522:54:6",
																"nodeType": "YulFunctionCall",
																"src": "8522:54:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8512:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8512:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8585:93:6",
															"nodeType": "YulAssignment",
															"src": "8585:93:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8666:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8666:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8671:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8592:73:6",
																	"nodeType": "YulIdentifier",
																	"src": "8592:73:6"
																},
																"nativeSrc": "8592:86:6",
																"nodeType": "YulFunctionCall",
																"src": "8592:86:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8585:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8585:3:6"
																}
															]
														},
														{
															"nativeSrc": "8687:71:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8687:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8752:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8752:5:6"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8702:49:6",
																	"nodeType": "YulIdentifier",
																	"src": "8702:49:6"
																},
																"nativeSrc": "8702:56:6",
																"nodeType": "YulFunctionCall",
																"src": "8702:56:6"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8691:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8691:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8767:21:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8767:21:6",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8781:7:6",
																"nodeType": "YulIdentifier",
																"src": "8781:7:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8771:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8771:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8857:224:6",
																"nodeType": "YulBlock",
																"src": "8857:224:6",
																"statements": [
																	{
																		"nativeSrc": "8871:34:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8871:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8898:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8898:6:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8892:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8892:5:6"
																			},
																			"nativeSrc": "8892:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8892:13:6"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8875:13:6",
																				"nodeType": "YulTypedName",
																				"src": "8875:13:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8918:70:6",
																		"nodeType": "YulAssignment",
																		"src": "8918:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8969:13:6",
																					"nodeType": "YulIdentifier",
																					"src": "8969:13:6"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8984:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8984:3:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "8925:43:6",
																				"nodeType": "YulIdentifier",
																				"src": "8925:43:6"
																			},
																			"nativeSrc": "8925:63:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:63:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8918:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8918:3:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9001:70:6",
																		"nodeType": "YulAssignment",
																		"src": "9001:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9064:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9064:6:6"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "9011:52:6",
																				"nodeType": "YulIdentifier",
																				"src": "9011:52:6"
																			},
																			"nativeSrc": "9011:60:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9011:60:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9001:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9001:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8819:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8819:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8822:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8816:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8816:2:6"
																},
																"nativeSrc": "8816:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8816:13:6"
															},
															"nativeSrc": "8797:284:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8830:18:6",
																"nodeType": "YulBlock",
																"src": "8830:18:6",
																"statements": [
																	{
																		"nativeSrc": "8832:14:6",
																		"nodeType": "YulAssignment",
																		"src": "8832:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8841:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "8841:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8844:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8844:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8837:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8837:3:6"
																			},
																			"nativeSrc": "8837:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8837:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8832:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "8832:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8801:14:6",
																"nodeType": "YulBlock",
																"src": "8801:14:6",
																"statements": [
																	{
																		"nativeSrc": "8803:10:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8803:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8812:1:6",
																			"nodeType": "YulLiteral",
																			"src": "8812:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8807:1:6",
																				"nodeType": "YulTypedName",
																				"src": "8807:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8797:284:6"
														},
														{
															"nativeSrc": "9090:10:6",
															"nodeType": "YulAssignment",
															"src": "9090:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "9097:3:6",
																"nodeType": "YulIdentifier",
																"src": "9097:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9090:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9090:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8374:732:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8477:5:6",
														"nodeType": "YulTypedName",
														"src": "8477:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8484:3:6",
														"nodeType": "YulTypedName",
														"src": "8484:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8493:3:6",
														"nodeType": "YulTypedName",
														"src": "8493:3:6",
														"type": ""
													}
												],
												"src": "8374:732:6"
											},
											{
												"body": {
													"nativeSrc": "9260:225:6",
													"nodeType": "YulBlock",
													"src": "9260:225:6",
													"statements": [
														{
															"nativeSrc": "9270:26:6",
															"nodeType": "YulAssignment",
															"src": "9270:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9282:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9282:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9293:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9293:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9278:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9278:3:6"
																},
																"nativeSrc": "9278:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9278:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9270:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9270:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9317:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9317:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9328:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9328:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9313:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9313:3:6"
																		},
																		"nativeSrc": "9313:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9313:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9336:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9336:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9342:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9342:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9332:3:6"
																		},
																		"nativeSrc": "9332:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9332:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9306:6:6"
																},
																"nativeSrc": "9306:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9306:47:6"
															},
															"nativeSrc": "9306:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9306:47:6"
														},
														{
															"nativeSrc": "9362:116:6",
															"nodeType": "YulAssignment",
															"src": "9362:116:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9464:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9464:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9473:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9473:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9370:93:6",
																	"nodeType": "YulIdentifier",
																	"src": "9370:93:6"
																},
																"nativeSrc": "9370:108:6",
																"nodeType": "YulFunctionCall",
																"src": "9370:108:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9362:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9112:373:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9232:9:6",
														"nodeType": "YulTypedName",
														"src": "9232:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9244:6:6",
														"nodeType": "YulTypedName",
														"src": "9244:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9255:4:6",
														"nodeType": "YulTypedName",
														"src": "9255:4:6",
														"type": ""
													}
												],
												"src": "9112:373:6"
											},
											{
												"body": {
													"nativeSrc": "9557:263:6",
													"nodeType": "YulBlock",
													"src": "9557:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9603:83:6",
																"nodeType": "YulBlock",
																"src": "9603:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9605:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9605:77:6"
																			},
																			"nativeSrc": "9605:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9605:79:6"
																		},
																		"nativeSrc": "9605:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9605:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9578:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9587:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9587:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9574:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9574:3:6"
																		},
																		"nativeSrc": "9574:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9574:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9599:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9599:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9570:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9570:3:6"
																},
																"nativeSrc": "9570:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9570:32:6"
															},
															"nativeSrc": "9567:119:6",
															"nodeType": "YulIf",
															"src": "9567:119:6"
														},
														{
															"nativeSrc": "9696:117:6",
															"nodeType": "YulBlock",
															"src": "9696:117:6",
															"statements": [
																{
																	"nativeSrc": "9711:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9711:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9725:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9725:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9715:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9715:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9740:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9740:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9775:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9775:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9786:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9786:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9771:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9771:3:6"
																				},
																				"nativeSrc": "9771:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9771:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9795:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9795:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9750:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9750:20:6"
																		},
																		"nativeSrc": "9750:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9750:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9740:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9740:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9491:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9527:9:6",
														"nodeType": "YulTypedName",
														"src": "9527:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9538:7:6",
														"nodeType": "YulTypedName",
														"src": "9538:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9550:6:6",
														"nodeType": "YulTypedName",
														"src": "9550:6:6",
														"type": ""
													}
												],
												"src": "9491:329:6"
											},
											{
												"body": {
													"nativeSrc": "9909:391:6",
													"nodeType": "YulBlock",
													"src": "9909:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9955:83:6",
																"nodeType": "YulBlock",
																"src": "9955:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9957:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9957:77:6"
																			},
																			"nativeSrc": "9957:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9957:79:6"
																		},
																		"nativeSrc": "9957:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9957:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9930:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9930:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9939:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9939:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9926:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9926:3:6"
																		},
																		"nativeSrc": "9926:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9926:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9951:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9951:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9922:3:6"
																},
																"nativeSrc": "9922:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9922:32:6"
															},
															"nativeSrc": "9919:119:6",
															"nodeType": "YulIf",
															"src": "9919:119:6"
														},
														{
															"nativeSrc": "10048:117:6",
															"nodeType": "YulBlock",
															"src": "10048:117:6",
															"statements": [
																{
																	"nativeSrc": "10063:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10063:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10077:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10067:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10067:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10092:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10092:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10127:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10127:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10138:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10138:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10123:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10123:3:6"
																				},
																				"nativeSrc": "10123:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10123:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10147:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10147:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10102:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10102:20:6"
																		},
																		"nativeSrc": "10102:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10092:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10092:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10175:118:6",
															"nodeType": "YulBlock",
															"src": "10175:118:6",
															"statements": [
																{
																	"nativeSrc": "10190:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10190:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10204:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10204:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10194:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10194:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10220:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10220:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10255:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10255:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10266:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10266:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10251:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10251:3:6"
																				},
																				"nativeSrc": "10251:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10251:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10275:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10275:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10230:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10230:20:6"
																		},
																		"nativeSrc": "10230:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10230:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10220:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10220:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9826:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9871:9:6",
														"nodeType": "YulTypedName",
														"src": "9871:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9882:7:6",
														"nodeType": "YulTypedName",
														"src": "9882:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9894:6:6",
														"nodeType": "YulTypedName",
														"src": "9894:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9902:6:6",
														"nodeType": "YulTypedName",
														"src": "9902:6:6",
														"type": ""
													}
												],
												"src": "9826:474:6"
											},
											{
												"body": {
													"nativeSrc": "10474:1035:6",
													"nodeType": "YulBlock",
													"src": "10474:1035:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10521:83:6",
																"nodeType": "YulBlock",
																"src": "10521:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10523:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "10523:77:6"
																			},
																			"nativeSrc": "10523:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10523:79:6"
																		},
																		"nativeSrc": "10523:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10523:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10495:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10495:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10504:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10504:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10491:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10491:3:6"
																		},
																		"nativeSrc": "10491:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10491:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10516:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10516:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10487:3:6"
																},
																"nativeSrc": "10487:33:6",
																"nodeType": "YulFunctionCall",
																"src": "10487:33:6"
															},
															"nativeSrc": "10484:120:6",
															"nodeType": "YulIf",
															"src": "10484:120:6"
														},
														{
															"nativeSrc": "10614:117:6",
															"nodeType": "YulBlock",
															"src": "10614:117:6",
															"statements": [
																{
																	"nativeSrc": "10629:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10629:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10643:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10643:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10633:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10633:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10658:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10658:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10693:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10693:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10704:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10704:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10689:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10689:3:6"
																				},
																				"nativeSrc": "10689:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10689:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10713:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10713:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10668:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10668:20:6"
																		},
																		"nativeSrc": "10668:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10668:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10658:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10658:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10741:118:6",
															"nodeType": "YulBlock",
															"src": "10741:118:6",
															"statements": [
																{
																	"nativeSrc": "10756:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10756:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10770:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10770:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10760:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10760:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10786:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10786:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10821:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10821:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10832:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10832:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10817:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10817:3:6"
																				},
																				"nativeSrc": "10817:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10817:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10841:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10841:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10796:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10796:20:6"
																		},
																		"nativeSrc": "10796:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10796:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10786:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10786:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10869:118:6",
															"nodeType": "YulBlock",
															"src": "10869:118:6",
															"statements": [
																{
																	"nativeSrc": "10884:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10884:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10898:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10898:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10888:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10888:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10914:63:6",
																	"nodeType": "YulAssignment",
																	"src": "10914:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10949:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10949:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10960:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10960:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10945:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10945:3:6"
																				},
																				"nativeSrc": "10945:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10945:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10969:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10969:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10924:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "10924:20:6"
																		},
																		"nativeSrc": "10924:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10924:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10914:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10914:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10997:118:6",
															"nodeType": "YulBlock",
															"src": "10997:118:6",
															"statements": [
																{
																	"nativeSrc": "11012:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11012:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11026:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11026:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11016:6:6",
																			"nodeType": "YulTypedName",
																			"src": "11016:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11042:63:6",
																	"nodeType": "YulAssignment",
																	"src": "11042:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11077:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "11077:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11088:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "11088:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11073:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11073:3:6"
																				},
																				"nativeSrc": "11073:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11073:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11097:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11097:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11052:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "11052:20:6"
																		},
																		"nativeSrc": "11052:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11052:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11042:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "11042:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11125:119:6",
															"nodeType": "YulBlock",
															"src": "11125:119:6",
															"statements": [
																{
																	"nativeSrc": "11140:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11140:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11154:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11154:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11144:6:6",
																			"nodeType": "YulTypedName",
																			"src": "11144:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11171:63:6",
																	"nodeType": "YulAssignment",
																	"src": "11171:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11206:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "11206:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11217:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "11217:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11202:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11202:3:6"
																				},
																				"nativeSrc": "11202:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11202:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11226:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11226:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11181:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "11181:20:6"
																		},
																		"nativeSrc": "11181:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11181:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11171:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "11171:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11254:119:6",
															"nodeType": "YulBlock",
															"src": "11254:119:6",
															"statements": [
																{
																	"nativeSrc": "11269:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11269:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11283:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11283:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11273:6:6",
																			"nodeType": "YulTypedName",
																			"src": "11273:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11300:63:6",
																	"nodeType": "YulAssignment",
																	"src": "11300:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11335:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "11335:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11346:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "11346:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11331:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11331:3:6"
																				},
																				"nativeSrc": "11331:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11331:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11355:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11355:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11310:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "11310:20:6"
																		},
																		"nativeSrc": "11310:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11310:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "11300:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "11300:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11383:119:6",
															"nodeType": "YulBlock",
															"src": "11383:119:6",
															"statements": [
																{
																	"nativeSrc": "11398:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11398:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11412:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11412:3:6",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11402:6:6",
																			"nodeType": "YulTypedName",
																			"src": "11402:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11429:63:6",
																	"nodeType": "YulAssignment",
																	"src": "11429:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11464:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "11464:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11475:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "11475:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11460:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11460:3:6"
																				},
																				"nativeSrc": "11460:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11460:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11484:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11484:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11439:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "11439:20:6"
																		},
																		"nativeSrc": "11439:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11439:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "11429:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "11429:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "10306:1203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10396:9:6",
														"nodeType": "YulTypedName",
														"src": "10396:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10407:7:6",
														"nodeType": "YulTypedName",
														"src": "10407:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10419:6:6",
														"nodeType": "YulTypedName",
														"src": "10419:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10427:6:6",
														"nodeType": "YulTypedName",
														"src": "10427:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10435:6:6",
														"nodeType": "YulTypedName",
														"src": "10435:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10443:6:6",
														"nodeType": "YulTypedName",
														"src": "10443:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10451:6:6",
														"nodeType": "YulTypedName",
														"src": "10451:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10459:6:6",
														"nodeType": "YulTypedName",
														"src": "10459:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10467:6:6",
														"nodeType": "YulTypedName",
														"src": "10467:6:6",
														"type": ""
													}
												],
												"src": "10306:1203:6"
											},
											{
												"body": {
													"nativeSrc": "11641:206:6",
													"nodeType": "YulBlock",
													"src": "11641:206:6",
													"statements": [
														{
															"nativeSrc": "11651:26:6",
															"nodeType": "YulAssignment",
															"src": "11651:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11663:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11663:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11674:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11674:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11659:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11659:3:6"
																},
																"nativeSrc": "11659:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11659:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11651:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11651:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11731:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11731:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11744:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11744:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11755:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11755:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11740:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11740:3:6"
																		},
																		"nativeSrc": "11740:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11740:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11687:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11687:43:6"
																},
																"nativeSrc": "11687:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11687:71:6"
															},
															"nativeSrc": "11687:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11687:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11812:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11812:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11825:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11825:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11836:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11836:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11821:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11821:3:6"
																		},
																		"nativeSrc": "11821:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11821:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11768:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11768:43:6"
																},
																"nativeSrc": "11768:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11768:72:6"
															},
															"nativeSrc": "11768:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11768:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11515:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11605:9:6",
														"nodeType": "YulTypedName",
														"src": "11605:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11617:6:6",
														"nodeType": "YulTypedName",
														"src": "11617:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11625:6:6",
														"nodeType": "YulTypedName",
														"src": "11625:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11636:4:6",
														"nodeType": "YulTypedName",
														"src": "11636:4:6",
														"type": ""
													}
												],
												"src": "11515:332:6"
											},
											{
												"body": {
													"nativeSrc": "12038:1164:6",
													"nodeType": "YulBlock",
													"src": "12038:1164:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12085:83:6",
																"nodeType": "YulBlock",
																"src": "12085:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12087:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12087:77:6"
																			},
																			"nativeSrc": "12087:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12087:79:6"
																		},
																		"nativeSrc": "12087:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12087:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12059:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12059:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12068:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12068:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12055:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12055:3:6"
																		},
																		"nativeSrc": "12055:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12055:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12080:3:6",
																		"nodeType": "YulLiteral",
																		"src": "12080:3:6",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12051:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12051:3:6"
																},
																"nativeSrc": "12051:33:6",
																"nodeType": "YulFunctionCall",
																"src": "12051:33:6"
															},
															"nativeSrc": "12048:120:6",
															"nodeType": "YulIf",
															"src": "12048:120:6"
														},
														{
															"nativeSrc": "12178:117:6",
															"nodeType": "YulBlock",
															"src": "12178:117:6",
															"statements": [
																{
																	"nativeSrc": "12193:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12193:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12207:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12197:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12197:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12222:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12222:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12257:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12257:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12268:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12268:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12253:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12253:3:6"
																				},
																				"nativeSrc": "12253:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12253:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12277:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12277:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12232:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "12232:20:6"
																		},
																		"nativeSrc": "12232:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12232:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12222:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12222:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12305:118:6",
															"nodeType": "YulBlock",
															"src": "12305:118:6",
															"statements": [
																{
																	"nativeSrc": "12320:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12320:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12334:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12334:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12324:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12324:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12350:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12350:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12385:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12385:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12396:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12396:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12381:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12381:3:6"
																				},
																				"nativeSrc": "12381:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12381:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12405:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12405:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12360:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "12360:20:6"
																		},
																		"nativeSrc": "12360:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12360:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12350:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12350:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12433:118:6",
															"nodeType": "YulBlock",
															"src": "12433:118:6",
															"statements": [
																{
																	"nativeSrc": "12448:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12448:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12462:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12452:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12452:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12478:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12478:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12513:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12513:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12524:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12524:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12509:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12509:3:6"
																				},
																				"nativeSrc": "12509:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12509:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12533:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12533:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12488:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "12488:20:6"
																		},
																		"nativeSrc": "12488:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12488:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12478:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12478:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12561:118:6",
															"nodeType": "YulBlock",
															"src": "12561:118:6",
															"statements": [
																{
																	"nativeSrc": "12576:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12576:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12590:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12590:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12580:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12580:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12606:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12606:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12641:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12641:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12652:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12652:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12637:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12637:3:6"
																				},
																				"nativeSrc": "12637:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12637:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12661:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12661:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12616:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "12616:20:6"
																		},
																		"nativeSrc": "12616:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12616:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12606:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12606:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12689:119:6",
															"nodeType": "YulBlock",
															"src": "12689:119:6",
															"statements": [
																{
																	"nativeSrc": "12704:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12704:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12718:3:6",
																		"nodeType": "YulLiteral",
																		"src": "12718:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12708:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12708:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12735:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12735:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12770:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12770:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12781:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12781:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12766:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12766:3:6"
																				},
																				"nativeSrc": "12766:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12766:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12790:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12790:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12745:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "12745:20:6"
																		},
																		"nativeSrc": "12745:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12745:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12735:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12735:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12818:119:6",
															"nodeType": "YulBlock",
															"src": "12818:119:6",
															"statements": [
																{
																	"nativeSrc": "12833:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12833:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12847:3:6",
																		"nodeType": "YulLiteral",
																		"src": "12847:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12837:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12837:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12864:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12864:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12899:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12899:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12910:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12910:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12895:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12895:3:6"
																				},
																				"nativeSrc": "12895:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12895:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12919:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12919:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12874:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "12874:20:6"
																		},
																		"nativeSrc": "12874:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12874:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "12864:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12864:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12947:119:6",
															"nodeType": "YulBlock",
															"src": "12947:119:6",
															"statements": [
																{
																	"nativeSrc": "12962:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12962:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12976:3:6",
																		"nodeType": "YulLiteral",
																		"src": "12976:3:6",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12966:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12966:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12993:63:6",
																	"nodeType": "YulAssignment",
																	"src": "12993:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13028:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "13028:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13039:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13039:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13024:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "13024:3:6"
																				},
																				"nativeSrc": "13024:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "13024:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13048:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13048:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13003:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "13003:20:6"
																		},
																		"nativeSrc": "13003:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13003:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "12993:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12993:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13076:119:6",
															"nodeType": "YulBlock",
															"src": "13076:119:6",
															"statements": [
																{
																	"nativeSrc": "13091:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13091:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13105:3:6",
																		"nodeType": "YulLiteral",
																		"src": "13105:3:6",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13095:6:6",
																			"nodeType": "YulTypedName",
																			"src": "13095:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13122:63:6",
																	"nodeType": "YulAssignment",
																	"src": "13122:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13157:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "13157:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13168:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13168:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13153:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "13153:3:6"
																				},
																				"nativeSrc": "13153:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "13153:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13177:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13177:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13132:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "13132:20:6"
																		},
																		"nativeSrc": "13132:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13132:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "13122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "13122:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "11853:1349:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11952:9:6",
														"nodeType": "YulTypedName",
														"src": "11952:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11963:7:6",
														"nodeType": "YulTypedName",
														"src": "11963:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11975:6:6",
														"nodeType": "YulTypedName",
														"src": "11975:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11983:6:6",
														"nodeType": "YulTypedName",
														"src": "11983:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11991:6:6",
														"nodeType": "YulTypedName",
														"src": "11991:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11999:6:6",
														"nodeType": "YulTypedName",
														"src": "11999:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12007:6:6",
														"nodeType": "YulTypedName",
														"src": "12007:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12015:6:6",
														"nodeType": "YulTypedName",
														"src": "12015:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "12023:6:6",
														"nodeType": "YulTypedName",
														"src": "12023:6:6",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "12031:6:6",
														"nodeType": "YulTypedName",
														"src": "12031:6:6",
														"type": ""
													}
												],
												"src": "11853:1349:6"
											},
											{
												"body": {
													"nativeSrc": "13362:288:6",
													"nodeType": "YulBlock",
													"src": "13362:288:6",
													"statements": [
														{
															"nativeSrc": "13372:26:6",
															"nodeType": "YulAssignment",
															"src": "13372:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13384:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13384:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13395:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13395:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13380:3:6"
																},
																"nativeSrc": "13380:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13380:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13372:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13372:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13452:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13452:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13465:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13465:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13476:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13476:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13461:3:6"
																		},
																		"nativeSrc": "13461:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13461:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13408:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13408:43:6"
																},
																"nativeSrc": "13408:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13408:71:6"
															},
															"nativeSrc": "13408:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13408:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13533:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13533:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13546:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13557:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13557:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13542:3:6"
																		},
																		"nativeSrc": "13542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13542:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13489:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13489:43:6"
																},
																"nativeSrc": "13489:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13489:72:6"
															},
															"nativeSrc": "13489:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13489:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13615:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13615:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13628:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13628:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13639:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13639:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13624:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13624:3:6"
																		},
																		"nativeSrc": "13624:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13624:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13571:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13571:43:6"
																},
																"nativeSrc": "13571:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13571:72:6"
															},
															"nativeSrc": "13571:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13571:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13208:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13318:9:6",
														"nodeType": "YulTypedName",
														"src": "13318:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13330:6:6",
														"nodeType": "YulTypedName",
														"src": "13330:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13338:6:6",
														"nodeType": "YulTypedName",
														"src": "13338:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13346:6:6",
														"nodeType": "YulTypedName",
														"src": "13346:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13357:4:6",
														"nodeType": "YulTypedName",
														"src": "13357:4:6",
														"type": ""
													}
												],
												"src": "13208:442:6"
											},
											{
												"body": {
													"nativeSrc": "13684:152:6",
													"nodeType": "YulBlock",
													"src": "13684:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13701:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13701:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13704:77:6",
																		"nodeType": "YulLiteral",
																		"src": "13704:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13694:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13694:6:6"
																},
																"nativeSrc": "13694:88:6",
																"nodeType": "YulFunctionCall",
																"src": "13694:88:6"
															},
															"nativeSrc": "13694:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "13694:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13798:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13798:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13801:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13801:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13791:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13791:6:6"
																},
																"nativeSrc": "13791:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13791:15:6"
															},
															"nativeSrc": "13791:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13791:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13822:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13822:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13825:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13825:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13815:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13815:6:6"
																},
																"nativeSrc": "13815:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13815:15:6"
															},
															"nativeSrc": "13815:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13815:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13656:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "13656:180:6"
											},
											{
												"body": {
													"nativeSrc": "13886:147:6",
													"nodeType": "YulBlock",
													"src": "13886:147:6",
													"statements": [
														{
															"nativeSrc": "13896:25:6",
															"nodeType": "YulAssignment",
															"src": "13896:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13919:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13919:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13901:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13901:17:6"
																},
																"nativeSrc": "13901:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13901:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13896:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13896:1:6"
																}
															]
														},
														{
															"nativeSrc": "13930:25:6",
															"nodeType": "YulAssignment",
															"src": "13930:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13953:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13953:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13935:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13935:17:6"
																},
																"nativeSrc": "13935:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13935:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13930:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13930:1:6"
																}
															]
														},
														{
															"nativeSrc": "13964:16:6",
															"nodeType": "YulAssignment",
															"src": "13964:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13975:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13975:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13978:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13978:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13971:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13971:3:6"
																},
																"nativeSrc": "13971:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13971:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13964:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13964:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14004:22:6",
																"nodeType": "YulBlock",
																"src": "14004:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14006:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "14006:16:6"
																			},
																			"nativeSrc": "14006:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14006:18:6"
																		},
																		"nativeSrc": "14006:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14006:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13996:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13996:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13999:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13999:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13993:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13993:2:6"
																},
																"nativeSrc": "13993:10:6",
																"nodeType": "YulFunctionCall",
																"src": "13993:10:6"
															},
															"nativeSrc": "13990:36:6",
															"nodeType": "YulIf",
															"src": "13990:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13842:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13873:1:6",
														"nodeType": "YulTypedName",
														"src": "13873:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13876:1:6",
														"nodeType": "YulTypedName",
														"src": "13876:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13882:3:6",
														"nodeType": "YulTypedName",
														"src": "13882:3:6",
														"type": ""
													}
												],
												"src": "13842:191:6"
											},
											{
												"body": {
													"nativeSrc": "14087:362:6",
													"nodeType": "YulBlock",
													"src": "14087:362:6",
													"statements": [
														{
															"nativeSrc": "14097:25:6",
															"nodeType": "YulAssignment",
															"src": "14097:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14120:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14120:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14102:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14102:17:6"
																},
																"nativeSrc": "14102:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14102:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14097:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14097:1:6"
																}
															]
														},
														{
															"nativeSrc": "14131:25:6",
															"nodeType": "YulAssignment",
															"src": "14131:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14154:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14154:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14136:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14136:17:6"
																},
																"nativeSrc": "14136:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14136:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14131:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14131:1:6"
																}
															]
														},
														{
															"nativeSrc": "14165:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "14165:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14188:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14188:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14191:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14191:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14184:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14184:3:6"
																},
																"nativeSrc": "14184:9:6",
																"nodeType": "YulFunctionCall",
																"src": "14184:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14169:11:6",
																	"nodeType": "YulTypedName",
																	"src": "14169:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14202:41:6",
															"nodeType": "YulAssignment",
															"src": "14202:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14231:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "14231:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14213:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14213:17:6"
																},
																"nativeSrc": "14213:30:6",
																"nodeType": "YulFunctionCall",
																"src": "14213:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14202:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "14202:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14420:22:6",
																"nodeType": "YulBlock",
																"src": "14420:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14422:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "14422:16:6"
																			},
																			"nativeSrc": "14422:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14422:18:6"
																		},
																		"nativeSrc": "14422:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14422:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14353:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "14353:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14346:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "14346:6:6"
																				},
																				"nativeSrc": "14346:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14346:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14376:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "14376:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14383:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "14383:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14392:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "14392:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14379:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "14379:3:6"
																						},
																						"nativeSrc": "14379:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "14379:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14373:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "14373:2:6"
																				},
																				"nativeSrc": "14373:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14373:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14326:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "14326:2:6"
																		},
																		"nativeSrc": "14326:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14326:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14306:6:6"
																},
																"nativeSrc": "14306:113:6",
																"nodeType": "YulFunctionCall",
																"src": "14306:113:6"
															},
															"nativeSrc": "14303:139:6",
															"nodeType": "YulIf",
															"src": "14303:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14039:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14070:1:6",
														"nodeType": "YulTypedName",
														"src": "14070:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14073:1:6",
														"nodeType": "YulTypedName",
														"src": "14073:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14079:7:6",
														"nodeType": "YulTypedName",
														"src": "14079:7:6",
														"type": ""
													}
												],
												"src": "14039:410:6"
											},
											{
												"body": {
													"nativeSrc": "14483:152:6",
													"nodeType": "YulBlock",
													"src": "14483:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14500:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14500:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14503:77:6",
																		"nodeType": "YulLiteral",
																		"src": "14503:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14493:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14493:6:6"
																},
																"nativeSrc": "14493:88:6",
																"nodeType": "YulFunctionCall",
																"src": "14493:88:6"
															},
															"nativeSrc": "14493:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "14493:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14597:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14597:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14600:4:6",
																		"nodeType": "YulLiteral",
																		"src": "14600:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14590:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14590:6:6"
																},
																"nativeSrc": "14590:15:6",
																"nodeType": "YulFunctionCall",
																"src": "14590:15:6"
															},
															"nativeSrc": "14590:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "14590:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14621:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14621:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14624:4:6",
																		"nodeType": "YulLiteral",
																		"src": "14624:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14614:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14614:6:6"
																},
																"nativeSrc": "14614:15:6",
																"nodeType": "YulFunctionCall",
																"src": "14614:15:6"
															},
															"nativeSrc": "14614:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "14614:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14455:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14455:180:6"
											},
											{
												"body": {
													"nativeSrc": "14683:143:6",
													"nodeType": "YulBlock",
													"src": "14683:143:6",
													"statements": [
														{
															"nativeSrc": "14693:25:6",
															"nodeType": "YulAssignment",
															"src": "14693:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14716:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14716:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14698:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14698:17:6"
																},
																"nativeSrc": "14698:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14698:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14693:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14693:1:6"
																}
															]
														},
														{
															"nativeSrc": "14727:25:6",
															"nodeType": "YulAssignment",
															"src": "14727:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14750:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14750:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14732:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14732:17:6"
																},
																"nativeSrc": "14732:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14732:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14727:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14727:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14774:22:6",
																"nodeType": "YulBlock",
																"src": "14774:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14776:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "14776:16:6"
																			},
																			"nativeSrc": "14776:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14776:18:6"
																		},
																		"nativeSrc": "14776:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14776:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14771:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14771:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14764:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14764:6:6"
																},
																"nativeSrc": "14764:9:6",
																"nodeType": "YulFunctionCall",
																"src": "14764:9:6"
															},
															"nativeSrc": "14761:35:6",
															"nodeType": "YulIf",
															"src": "14761:35:6"
														},
														{
															"nativeSrc": "14806:14:6",
															"nodeType": "YulAssignment",
															"src": "14806:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14815:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14815:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14818:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14818:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14811:3:6"
																},
																"nativeSrc": "14811:9:6",
																"nodeType": "YulFunctionCall",
																"src": "14811:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14806:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14806:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14641:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14672:1:6",
														"nodeType": "YulTypedName",
														"src": "14672:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14675:1:6",
														"nodeType": "YulTypedName",
														"src": "14675:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14681:1:6",
														"nodeType": "YulTypedName",
														"src": "14681:1:6",
														"type": ""
													}
												],
												"src": "14641:185:6"
											},
											{
												"body": {
													"nativeSrc": "14860:152:6",
													"nodeType": "YulBlock",
													"src": "14860:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14877:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14877:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14880:77:6",
																		"nodeType": "YulLiteral",
																		"src": "14880:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14870:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14870:6:6"
																},
																"nativeSrc": "14870:88:6",
																"nodeType": "YulFunctionCall",
																"src": "14870:88:6"
															},
															"nativeSrc": "14870:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "14870:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14974:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14974:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14977:4:6",
																		"nodeType": "YulLiteral",
																		"src": "14977:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14967:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:6"
																},
																"nativeSrc": "14967:15:6",
																"nodeType": "YulFunctionCall",
																"src": "14967:15:6"
															},
															"nativeSrc": "14967:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "14967:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14998:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14998:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15001:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15001:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14991:6:6"
																},
																"nativeSrc": "14991:15:6",
																"nodeType": "YulFunctionCall",
																"src": "14991:15:6"
															},
															"nativeSrc": "14991:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "14991:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14832:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14832:180:6"
											},
											{
												"body": {
													"nativeSrc": "15069:269:6",
													"nodeType": "YulBlock",
													"src": "15069:269:6",
													"statements": [
														{
															"nativeSrc": "15079:22:6",
															"nodeType": "YulAssignment",
															"src": "15079:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15093:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15093:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15099:1:6",
																		"nodeType": "YulLiteral",
																		"src": "15099:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15089:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15089:3:6"
																},
																"nativeSrc": "15089:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15089:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15079:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15079:6:6"
																}
															]
														},
														{
															"nativeSrc": "15110:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "15110:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15140:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15140:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15146:1:6",
																		"nodeType": "YulLiteral",
																		"src": "15146:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15136:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15136:3:6"
																},
																"nativeSrc": "15136:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15136:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "15114:18:6",
																	"nodeType": "YulTypedName",
																	"src": "15114:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15187:51:6",
																"nodeType": "YulBlock",
																"src": "15187:51:6",
																"statements": [
																	{
																		"nativeSrc": "15201:27:6",
																		"nodeType": "YulAssignment",
																		"src": "15201:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "15215:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "15215:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15223:4:6",
																					"nodeType": "YulLiteral",
																					"src": "15223:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15211:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15211:3:6"
																			},
																			"nativeSrc": "15211:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15211:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "15201:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15201:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15167:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "15167:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15160:6:6"
																},
																"nativeSrc": "15160:26:6",
																"nodeType": "YulFunctionCall",
																"src": "15160:26:6"
															},
															"nativeSrc": "15157:81:6",
															"nodeType": "YulIf",
															"src": "15157:81:6"
														},
														{
															"body": {
																"nativeSrc": "15290:42:6",
																"nodeType": "YulBlock",
																"src": "15290:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15304:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "15304:16:6"
																			},
																			"nativeSrc": "15304:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15304:18:6"
																		},
																		"nativeSrc": "15304:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "15304:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15254:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "15254:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15277:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15277:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15285:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15285:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "15274:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "15274:2:6"
																		},
																		"nativeSrc": "15274:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15274:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15251:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "15251:2:6"
																},
																"nativeSrc": "15251:38:6",
																"nodeType": "YulFunctionCall",
																"src": "15251:38:6"
															},
															"nativeSrc": "15248:84:6",
															"nodeType": "YulIf",
															"src": "15248:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "15018:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15053:4:6",
														"nodeType": "YulTypedName",
														"src": "15053:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15062:6:6",
														"nodeType": "YulTypedName",
														"src": "15062:6:6",
														"type": ""
													}
												],
												"src": "15018:320:6"
											},
											{
												"body": {
													"nativeSrc": "15450:59:6",
													"nodeType": "YulBlock",
													"src": "15450:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15472:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15472:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15480:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15480:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15468:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15468:3:6"
																		},
																		"nativeSrc": "15468:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15468:14:6"
																	},
																	{
																		"hexValue": "646561646c696e6552656163686564",
																		"kind": "string",
																		"nativeSrc": "15484:17:6",
																		"nodeType": "YulLiteral",
																		"src": "15484:17:6",
																		"type": "",
																		"value": "deadlineReached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15461:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15461:6:6"
																},
																"nativeSrc": "15461:41:6",
																"nodeType": "YulFunctionCall",
																"src": "15461:41:6"
															},
															"nativeSrc": "15461:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "15461:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
												"nativeSrc": "15344:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15442:6:6",
														"nodeType": "YulTypedName",
														"src": "15442:6:6",
														"type": ""
													}
												],
												"src": "15344:165:6"
											},
											{
												"body": {
													"nativeSrc": "15661:220:6",
													"nodeType": "YulBlock",
													"src": "15661:220:6",
													"statements": [
														{
															"nativeSrc": "15671:74:6",
															"nodeType": "YulAssignment",
															"src": "15671:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15737:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15737:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15742:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15742:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15678:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15678:58:6"
																},
																"nativeSrc": "15678:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15678:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15671:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15671:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15843:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15843:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																	"nativeSrc": "15754:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15754:88:6"
																},
																"nativeSrc": "15754:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15754:93:6"
															},
															"nativeSrc": "15754:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15754:93:6"
														},
														{
															"nativeSrc": "15856:19:6",
															"nodeType": "YulAssignment",
															"src": "15856:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15867:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15867:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15872:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15872:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15863:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15863:3:6"
																},
																"nativeSrc": "15863:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15863:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15856:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15856:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15515:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15649:3:6",
														"nodeType": "YulTypedName",
														"src": "15649:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15657:3:6",
														"nodeType": "YulTypedName",
														"src": "15657:3:6",
														"type": ""
													}
												],
												"src": "15515:366:6"
											},
											{
												"body": {
													"nativeSrc": "16058:248:6",
													"nodeType": "YulBlock",
													"src": "16058:248:6",
													"statements": [
														{
															"nativeSrc": "16068:26:6",
															"nodeType": "YulAssignment",
															"src": "16068:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16080:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16080:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16091:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16091:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16076:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16076:3:6"
																},
																"nativeSrc": "16076:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16076:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16068:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16068:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16115:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16115:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16126:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16126:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16111:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16111:3:6"
																		},
																		"nativeSrc": "16111:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16111:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16134:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "16134:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16140:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16140:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16130:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16130:3:6"
																		},
																		"nativeSrc": "16130:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16130:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16104:6:6"
																},
																"nativeSrc": "16104:47:6",
																"nodeType": "YulFunctionCall",
																"src": "16104:47:6"
															},
															"nativeSrc": "16104:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "16104:47:6"
														},
														{
															"nativeSrc": "16160:139:6",
															"nodeType": "YulAssignment",
															"src": "16160:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16294:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16294:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16168:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "16168:124:6"
																},
																"nativeSrc": "16168:131:6",
																"nodeType": "YulFunctionCall",
																"src": "16168:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16160:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16160:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15887:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16038:9:6",
														"nodeType": "YulTypedName",
														"src": "16038:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16053:4:6",
														"nodeType": "YulTypedName",
														"src": "16053:4:6",
														"type": ""
													}
												],
												"src": "15887:419:6"
											},
											{
												"body": {
													"nativeSrc": "16340:152:6",
													"nodeType": "YulBlock",
													"src": "16340:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16357:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16357:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16360:77:6",
																		"nodeType": "YulLiteral",
																		"src": "16360:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16350:6:6"
																},
																"nativeSrc": "16350:88:6",
																"nodeType": "YulFunctionCall",
																"src": "16350:88:6"
															},
															"nativeSrc": "16350:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "16350:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16454:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16454:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16457:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16457:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16447:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16447:6:6"
																},
																"nativeSrc": "16447:15:6",
																"nodeType": "YulFunctionCall",
																"src": "16447:15:6"
															},
															"nativeSrc": "16447:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "16447:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16478:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16478:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16481:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16481:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16471:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16471:6:6"
																},
																"nativeSrc": "16471:15:6",
																"nodeType": "YulFunctionCall",
																"src": "16471:15:6"
															},
															"nativeSrc": "16471:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "16471:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16312:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "16312:180:6"
											},
											{
												"body": {
													"nativeSrc": "16563:53:6",
													"nodeType": "YulBlock",
													"src": "16563:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16580:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16580:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16603:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "16603:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "16585:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "16585:17:6"
																		},
																		"nativeSrc": "16585:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16585:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16573:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16573:6:6"
																},
																"nativeSrc": "16573:37:6",
																"nodeType": "YulFunctionCall",
																"src": "16573:37:6"
															},
															"nativeSrc": "16573:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "16573:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "16498:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16551:5:6",
														"nodeType": "YulTypedName",
														"src": "16551:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16558:3:6",
														"nodeType": "YulTypedName",
														"src": "16558:3:6",
														"type": ""
													}
												],
												"src": "16498:118:6"
											},
											{
												"body": {
													"nativeSrc": "16720:124:6",
													"nodeType": "YulBlock",
													"src": "16720:124:6",
													"statements": [
														{
															"nativeSrc": "16730:26:6",
															"nodeType": "YulAssignment",
															"src": "16730:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16742:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16742:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16753:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16753:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16738:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16738:3:6"
																},
																"nativeSrc": "16738:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16738:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16730:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16730:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16810:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16810:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16823:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16823:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16834:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16834:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16819:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16819:3:6"
																		},
																		"nativeSrc": "16819:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16819:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16766:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "16766:43:6"
																},
																"nativeSrc": "16766:71:6",
																"nodeType": "YulFunctionCall",
																"src": "16766:71:6"
															},
															"nativeSrc": "16766:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "16766:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "16622:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16692:9:6",
														"nodeType": "YulTypedName",
														"src": "16692:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16704:6:6",
														"nodeType": "YulTypedName",
														"src": "16704:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16715:4:6",
														"nodeType": "YulTypedName",
														"src": "16715:4:6",
														"type": ""
													}
												],
												"src": "16622:222:6"
											},
											{
												"body": {
													"nativeSrc": "16913:80:6",
													"nodeType": "YulBlock",
													"src": "16913:80:6",
													"statements": [
														{
															"nativeSrc": "16923:22:6",
															"nodeType": "YulAssignment",
															"src": "16923:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16938:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16938:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16932:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16932:5:6"
																},
																"nativeSrc": "16932:13:6",
																"nodeType": "YulFunctionCall",
																"src": "16932:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16923:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16923:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16981:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "16981:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "16954:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "16954:26:6"
																},
																"nativeSrc": "16954:33:6",
																"nodeType": "YulFunctionCall",
																"src": "16954:33:6"
															},
															"nativeSrc": "16954:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "16954:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "16850:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16891:6:6",
														"nodeType": "YulTypedName",
														"src": "16891:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16899:3:6",
														"nodeType": "YulTypedName",
														"src": "16899:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16907:5:6",
														"nodeType": "YulTypedName",
														"src": "16907:5:6",
														"type": ""
													}
												],
												"src": "16850:143:6"
											},
											{
												"body": {
													"nativeSrc": "17076:274:6",
													"nodeType": "YulBlock",
													"src": "17076:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "17122:83:6",
																"nodeType": "YulBlock",
																"src": "17122:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17124:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "17124:77:6"
																			},
																			"nativeSrc": "17124:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "17124:79:6"
																		},
																		"nativeSrc": "17124:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "17124:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17097:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "17097:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17106:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17106:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17093:3:6"
																		},
																		"nativeSrc": "17093:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17093:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17089:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17089:3:6"
																},
																"nativeSrc": "17089:32:6",
																"nodeType": "YulFunctionCall",
																"src": "17089:32:6"
															},
															"nativeSrc": "17086:119:6",
															"nodeType": "YulIf",
															"src": "17086:119:6"
														},
														{
															"nativeSrc": "17215:128:6",
															"nodeType": "YulBlock",
															"src": "17215:128:6",
															"statements": [
																{
																	"nativeSrc": "17230:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17230:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17244:1:6",
																		"nodeType": "YulLiteral",
																		"src": "17244:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17234:6:6",
																			"nodeType": "YulTypedName",
																			"src": "17234:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17259:74:6",
																	"nodeType": "YulAssignment",
																	"src": "17259:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17305:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "17305:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17316:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "17316:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17301:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "17301:3:6"
																				},
																				"nativeSrc": "17301:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "17301:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17325:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "17325:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17269:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "17269:31:6"
																		},
																		"nativeSrc": "17269:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17269:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17259:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "17259:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "16999:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17046:9:6",
														"nodeType": "YulTypedName",
														"src": "17046:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17057:7:6",
														"nodeType": "YulTypedName",
														"src": "17057:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17069:6:6",
														"nodeType": "YulTypedName",
														"src": "17069:6:6",
														"type": ""
													}
												],
												"src": "16999:351:6"
											},
											{
												"body": {
													"nativeSrc": "17409:32:6",
													"nodeType": "YulBlock",
													"src": "17409:32:6",
													"statements": [
														{
															"nativeSrc": "17419:16:6",
															"nodeType": "YulAssignment",
															"src": "17419:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "17430:5:6",
																"nodeType": "YulIdentifier",
																"src": "17430:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "17419:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "17419:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "17356:85:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17391:5:6",
														"nodeType": "YulTypedName",
														"src": "17391:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "17401:7:6",
														"nodeType": "YulTypedName",
														"src": "17401:7:6",
														"type": ""
													}
												],
												"src": "17356:85:6"
											},
											{
												"body": {
													"nativeSrc": "17479:28:6",
													"nodeType": "YulBlock",
													"src": "17479:28:6",
													"statements": [
														{
															"nativeSrc": "17489:12:6",
															"nodeType": "YulAssignment",
															"src": "17489:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "17496:5:6",
																"nodeType": "YulIdentifier",
																"src": "17496:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17489:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17489:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "17447:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17465:5:6",
														"nodeType": "YulTypedName",
														"src": "17465:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17475:3:6",
														"nodeType": "YulTypedName",
														"src": "17475:3:6",
														"type": ""
													}
												],
												"src": "17447:60:6"
											},
											{
												"body": {
													"nativeSrc": "17581:90:6",
													"nodeType": "YulBlock",
													"src": "17581:90:6",
													"statements": [
														{
															"nativeSrc": "17591:74:6",
															"nodeType": "YulAssignment",
															"src": "17591:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17657:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "17657:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "17631:25:6",
																					"nodeType": "YulIdentifier",
																					"src": "17631:25:6"
																				},
																				"nativeSrc": "17631:32:6",
																				"nodeType": "YulFunctionCall",
																				"src": "17631:32:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17622:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "17622:8:6"
																		},
																		"nativeSrc": "17622:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17622:42:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17604:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "17604:17:6"
																},
																"nativeSrc": "17604:61:6",
																"nodeType": "YulFunctionCall",
																"src": "17604:61:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17591:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "17591:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "17513:158:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17561:5:6",
														"nodeType": "YulTypedName",
														"src": "17561:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17571:9:6",
														"nodeType": "YulTypedName",
														"src": "17571:9:6",
														"type": ""
													}
												],
												"src": "17513:158:6"
											},
											{
												"body": {
													"nativeSrc": "17750:74:6",
													"nodeType": "YulBlock",
													"src": "17750:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17767:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17767:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17811:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "17811:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "17772:38:6",
																			"nodeType": "YulIdentifier",
																			"src": "17772:38:6"
																		},
																		"nativeSrc": "17772:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17772:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17760:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17760:6:6"
																},
																"nativeSrc": "17760:58:6",
																"nodeType": "YulFunctionCall",
																"src": "17760:58:6"
															},
															"nativeSrc": "17760:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "17760:58:6"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "17677:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17738:5:6",
														"nodeType": "YulTypedName",
														"src": "17738:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17745:3:6",
														"nodeType": "YulTypedName",
														"src": "17745:3:6",
														"type": ""
													}
												],
												"src": "17677:147:6"
											},
											{
												"body": {
													"nativeSrc": "17992:296:6",
													"nodeType": "YulBlock",
													"src": "17992:296:6",
													"statements": [
														{
															"nativeSrc": "18002:26:6",
															"nodeType": "YulAssignment",
															"src": "18002:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18014:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18014:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18025:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18025:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18010:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18010:3:6"
																},
																"nativeSrc": "18010:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18010:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18002:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18002:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18082:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18082:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18095:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18095:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18106:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18106:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18091:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18091:3:6"
																		},
																		"nativeSrc": "18091:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18091:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18038:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "18038:43:6"
																},
																"nativeSrc": "18038:71:6",
																"nodeType": "YulFunctionCall",
																"src": "18038:71:6"
															},
															"nativeSrc": "18038:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "18038:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18163:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18163:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18176:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18176:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18187:2:6",
																				"nodeType": "YulLiteral",
																				"src": "18187:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18172:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18172:3:6"
																		},
																		"nativeSrc": "18172:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18172:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18119:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "18119:43:6"
																},
																"nativeSrc": "18119:72:6",
																"nodeType": "YulFunctionCall",
																"src": "18119:72:6"
															},
															"nativeSrc": "18119:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "18119:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18253:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18253:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18266:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18266:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18277:2:6",
																				"nodeType": "YulLiteral",
																				"src": "18277:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18262:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18262:3:6"
																		},
																		"nativeSrc": "18262:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18262:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "18201:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "18201:51:6"
																},
																"nativeSrc": "18201:80:6",
																"nodeType": "YulFunctionCall",
																"src": "18201:80:6"
															},
															"nativeSrc": "18201:80:6",
															"nodeType": "YulExpressionStatement",
															"src": "18201:80:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_0_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17830:458:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17948:9:6",
														"nodeType": "YulTypedName",
														"src": "17948:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17960:6:6",
														"nodeType": "YulTypedName",
														"src": "17960:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17968:6:6",
														"nodeType": "YulTypedName",
														"src": "17968:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17976:6:6",
														"nodeType": "YulTypedName",
														"src": "17976:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17987:4:6",
														"nodeType": "YulTypedName",
														"src": "17987:4:6",
														"type": ""
													}
												],
												"src": "17830:458:6"
											},
											{
												"body": {
													"nativeSrc": "18334:76:6",
													"nodeType": "YulBlock",
													"src": "18334:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "18388:16:6",
																"nodeType": "YulBlock",
																"src": "18388:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18397:1:6",
																					"nodeType": "YulLiteral",
																					"src": "18397:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18400:1:6",
																					"nodeType": "YulLiteral",
																					"src": "18400:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18390:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "18390:6:6"
																			},
																			"nativeSrc": "18390:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "18390:12:6"
																		},
																		"nativeSrc": "18390:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "18390:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18357:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "18357:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18379:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "18379:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "18364:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "18364:14:6"
																				},
																				"nativeSrc": "18364:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "18364:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18354:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "18354:2:6"
																		},
																		"nativeSrc": "18354:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18354:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18347:6:6"
																},
																"nativeSrc": "18347:40:6",
																"nodeType": "YulFunctionCall",
																"src": "18347:40:6"
															},
															"nativeSrc": "18344:60:6",
															"nodeType": "YulIf",
															"src": "18344:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "18294:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18327:5:6",
														"nodeType": "YulTypedName",
														"src": "18327:5:6",
														"type": ""
													}
												],
												"src": "18294:116:6"
											},
											{
												"body": {
													"nativeSrc": "18476:77:6",
													"nodeType": "YulBlock",
													"src": "18476:77:6",
													"statements": [
														{
															"nativeSrc": "18486:22:6",
															"nodeType": "YulAssignment",
															"src": "18486:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18501:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18501:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18495:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "18495:5:6"
																},
																"nativeSrc": "18495:13:6",
																"nodeType": "YulFunctionCall",
																"src": "18495:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18486:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "18486:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18541:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "18541:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18517:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "18517:23:6"
																},
																"nativeSrc": "18517:30:6",
																"nodeType": "YulFunctionCall",
																"src": "18517:30:6"
															},
															"nativeSrc": "18517:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "18517:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "18416:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18454:6:6",
														"nodeType": "YulTypedName",
														"src": "18454:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18462:3:6",
														"nodeType": "YulTypedName",
														"src": "18462:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18470:5:6",
														"nodeType": "YulTypedName",
														"src": "18470:5:6",
														"type": ""
													}
												],
												"src": "18416:137:6"
											},
											{
												"body": {
													"nativeSrc": "18633:271:6",
													"nodeType": "YulBlock",
													"src": "18633:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "18679:83:6",
																"nodeType": "YulBlock",
																"src": "18679:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18681:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "18681:77:6"
																			},
																			"nativeSrc": "18681:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "18681:79:6"
																		},
																		"nativeSrc": "18681:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "18681:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18654:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "18654:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18663:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18663:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18650:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18650:3:6"
																		},
																		"nativeSrc": "18650:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18650:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18675:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18646:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18646:3:6"
																},
																"nativeSrc": "18646:32:6",
																"nodeType": "YulFunctionCall",
																"src": "18646:32:6"
															},
															"nativeSrc": "18643:119:6",
															"nodeType": "YulIf",
															"src": "18643:119:6"
														},
														{
															"nativeSrc": "18772:125:6",
															"nodeType": "YulBlock",
															"src": "18772:125:6",
															"statements": [
																{
																	"nativeSrc": "18787:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18787:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18801:1:6",
																		"nodeType": "YulLiteral",
																		"src": "18801:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18791:6:6",
																			"nodeType": "YulTypedName",
																			"src": "18791:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18816:71:6",
																	"nodeType": "YulAssignment",
																	"src": "18816:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18859:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "18859:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18870:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "18870:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18855:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "18855:3:6"
																				},
																				"nativeSrc": "18855:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "18855:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18879:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "18879:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "18826:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "18826:28:6"
																		},
																		"nativeSrc": "18826:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18826:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18816:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "18816:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "18559:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18603:9:6",
														"nodeType": "YulTypedName",
														"src": "18603:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18614:7:6",
														"nodeType": "YulTypedName",
														"src": "18614:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18626:6:6",
														"nodeType": "YulTypedName",
														"src": "18626:6:6",
														"type": ""
													}
												],
												"src": "18559:345:6"
											},
											{
												"body": {
													"nativeSrc": "19036:206:6",
													"nodeType": "YulBlock",
													"src": "19036:206:6",
													"statements": [
														{
															"nativeSrc": "19046:26:6",
															"nodeType": "YulAssignment",
															"src": "19046:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19058:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19058:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19069:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19069:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19054:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19054:3:6"
																},
																"nativeSrc": "19054:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19054:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19046:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19046:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19126:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19126:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19139:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19139:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19150:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19150:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19135:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19135:3:6"
																		},
																		"nativeSrc": "19135:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19135:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19082:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19082:43:6"
																},
																"nativeSrc": "19082:71:6",
																"nodeType": "YulFunctionCall",
																"src": "19082:71:6"
															},
															"nativeSrc": "19082:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "19082:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19207:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19207:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19220:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19220:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19231:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19231:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19216:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19216:3:6"
																		},
																		"nativeSrc": "19216:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19216:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19163:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19163:43:6"
																},
																"nativeSrc": "19163:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19163:72:6"
															},
															"nativeSrc": "19163:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19163:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18910:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19000:9:6",
														"nodeType": "YulTypedName",
														"src": "19000:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19012:6:6",
														"nodeType": "YulTypedName",
														"src": "19012:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19020:6:6",
														"nodeType": "YulTypedName",
														"src": "19020:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19031:4:6",
														"nodeType": "YulTypedName",
														"src": "19031:4:6",
														"type": ""
													}
												],
												"src": "18910:332:6"
											},
											{
												"body": {
													"nativeSrc": "19276:152:6",
													"nodeType": "YulBlock",
													"src": "19276:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19293:1:6",
																		"nodeType": "YulLiteral",
																		"src": "19293:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19296:77:6",
																		"nodeType": "YulLiteral",
																		"src": "19296:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19286:6:6"
																},
																"nativeSrc": "19286:88:6",
																"nodeType": "YulFunctionCall",
																"src": "19286:88:6"
															},
															"nativeSrc": "19286:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "19286:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19390:1:6",
																		"nodeType": "YulLiteral",
																		"src": "19390:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19393:4:6",
																		"nodeType": "YulLiteral",
																		"src": "19393:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19383:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19383:6:6"
																},
																"nativeSrc": "19383:15:6",
																"nodeType": "YulFunctionCall",
																"src": "19383:15:6"
															},
															"nativeSrc": "19383:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "19383:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19414:1:6",
																		"nodeType": "YulLiteral",
																		"src": "19414:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19417:4:6",
																		"nodeType": "YulLiteral",
																		"src": "19417:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19407:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19407:6:6"
																},
																"nativeSrc": "19407:15:6",
																"nodeType": "YulFunctionCall",
																"src": "19407:15:6"
															},
															"nativeSrc": "19407:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "19407:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "19248:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "19248:180:6"
											},
											{
												"body": {
													"nativeSrc": "19588:288:6",
													"nodeType": "YulBlock",
													"src": "19588:288:6",
													"statements": [
														{
															"nativeSrc": "19598:26:6",
															"nodeType": "YulAssignment",
															"src": "19598:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19610:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19610:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19621:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19621:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19606:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19606:3:6"
																},
																"nativeSrc": "19606:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19606:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19598:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19598:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19678:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19678:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19691:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19691:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19702:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19702:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19687:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19687:3:6"
																		},
																		"nativeSrc": "19687:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19687:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19634:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19634:43:6"
																},
																"nativeSrc": "19634:71:6",
																"nodeType": "YulFunctionCall",
																"src": "19634:71:6"
															},
															"nativeSrc": "19634:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "19634:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19759:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19759:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19772:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19772:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19783:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19783:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19768:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19768:3:6"
																		},
																		"nativeSrc": "19768:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19768:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19715:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19715:43:6"
																},
																"nativeSrc": "19715:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19715:72:6"
															},
															"nativeSrc": "19715:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19715:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19841:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19841:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19854:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19854:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19865:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19865:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19850:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19850:3:6"
																		},
																		"nativeSrc": "19850:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19850:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19797:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19797:43:6"
																},
																"nativeSrc": "19797:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19797:72:6"
															},
															"nativeSrc": "19797:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19797:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19434:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19544:9:6",
														"nodeType": "YulTypedName",
														"src": "19544:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19556:6:6",
														"nodeType": "YulTypedName",
														"src": "19556:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19564:6:6",
														"nodeType": "YulTypedName",
														"src": "19564:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19572:6:6",
														"nodeType": "YulTypedName",
														"src": "19572:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19583:4:6",
														"nodeType": "YulTypedName",
														"src": "19583:4:6",
														"type": ""
													}
												],
												"src": "19434:442:6"
											},
											{
												"body": {
													"nativeSrc": "20036:288:6",
													"nodeType": "YulBlock",
													"src": "20036:288:6",
													"statements": [
														{
															"nativeSrc": "20046:26:6",
															"nodeType": "YulAssignment",
															"src": "20046:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20058:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "20058:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20069:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20069:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20054:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20054:3:6"
																},
																"nativeSrc": "20054:18:6",
																"nodeType": "YulFunctionCall",
																"src": "20054:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20046:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "20046:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20126:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "20126:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20139:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20139:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20150:1:6",
																				"nodeType": "YulLiteral",
																				"src": "20150:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20135:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20135:3:6"
																		},
																		"nativeSrc": "20135:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20135:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20082:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "20082:43:6"
																},
																"nativeSrc": "20082:71:6",
																"nodeType": "YulFunctionCall",
																"src": "20082:71:6"
															},
															"nativeSrc": "20082:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "20082:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20207:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "20207:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20220:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20220:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20231:2:6",
																				"nodeType": "YulLiteral",
																				"src": "20231:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20216:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20216:3:6"
																		},
																		"nativeSrc": "20216:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20216:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20163:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "20163:43:6"
																},
																"nativeSrc": "20163:72:6",
																"nodeType": "YulFunctionCall",
																"src": "20163:72:6"
															},
															"nativeSrc": "20163:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "20163:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20289:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "20289:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20302:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20302:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20313:2:6",
																				"nodeType": "YulLiteral",
																				"src": "20313:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20298:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20298:3:6"
																		},
																		"nativeSrc": "20298:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20298:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20245:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "20245:43:6"
																},
																"nativeSrc": "20245:72:6",
																"nodeType": "YulFunctionCall",
																"src": "20245:72:6"
															},
															"nativeSrc": "20245:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "20245:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19882:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19992:9:6",
														"nodeType": "YulTypedName",
														"src": "19992:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20004:6:6",
														"nodeType": "YulTypedName",
														"src": "20004:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20012:6:6",
														"nodeType": "YulTypedName",
														"src": "20012:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20020:6:6",
														"nodeType": "YulTypedName",
														"src": "20020:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20031:4:6",
														"nodeType": "YulTypedName",
														"src": "20031:4:6",
														"type": ""
													}
												],
												"src": "19882:442:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121(memPtr) {\n\n        mstore(add(memPtr, 0), \"deadlineReached\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_0_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c806370a082311161008a578063ac41865a11610064578063ac41865a14610284578063baa2abde146102b4578063dd62ed3e146102e5578063e8e3370014610315576100e8565b806370a082311461020657806395d89b4114610236578063a9059cbb14610254576100e8565b806318160ddd116100c657806318160ddd1461016a57806323b872dd14610188578063313ce567146101b857806338ed1739146101d6576100e8565b8063054d50d4146100ec57806306fdde031461011c578063095ea7b31461013a575b5f5ffd5b61010660048036038101906101019190611699565b610347565b60405161011391906116f8565b60405180910390f35b610124610373565b6040516101319190611781565b60405180910390f35b610154600480360381019061014f91906117fb565b610403565b6040516101619190611853565b60405180910390f35b610172610425565b60405161017f91906116f8565b60405180910390f35b6101a2600480360381019061019d919061186c565b61042e565b6040516101af9190611853565b60405180910390f35b6101c061045c565b6040516101cd91906118d7565b60405180910390f35b6101f060048036038101906101eb9190611951565b610464565b6040516101fd9190611a9e565b60405180910390f35b610220600480360381019061021b9190611abe565b6107b3565b60405161022d91906116f8565b60405180910390f35b61023e6107f8565b60405161024b9190611781565b60405180910390f35b61026e600480360381019061026991906117fb565b610888565b60405161027b9190611853565b60405180910390f35b61029e60048036038101906102999190611ae9565b6108aa565b6040516102ab91906116f8565b60405180910390f35b6102ce60048036038101906102c99190611b27565b6109ca565b6040516102dc929190611bc4565b60405180910390f35b6102ff60048036038101906102fa9190611ae9565b610c61565b60405161030c91906116f8565b60405180910390f35b61032f600480360381019061032a9190611beb565b610ce3565b60405161033e93929190611c9c565b60405180910390f35b5f82846103549190611cfe565b82856103609190611d31565b61036a9190611d9f565b90509392505050565b60606003805461038290611dfc565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae90611dfc565b80156103f95780601f106103d0576101008083540402835291602001916103f9565b820191905f5260205f20905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b5f5f61040d610fdc565b905061041a818585610fe3565b600191505092915050565b5f600254905090565b5f5f610438610fdc565b9050610445858285610ff5565b610450858585611088565b60019150509392505050565b5f6012905090565b6060428210156104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a090611e76565b60405180910390fd5b5f85855f8181106104bd576104bc611e94565b5b90506020020160208101906104d29190611abe565b90505f868660018181106104e9576104e8611e94565b5b90506020020160208101906104fe9190611abe565b90505f8273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053a9190611ed0565b602060405180830381865afa158015610555573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105799190611efd565b8a6105849190611cfe565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105bd9190611ed0565b602060405180830381865afa1580156105d8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105fc9190611efd565b8b6106079190611d31565b6106119190611d9f565b90508881101561061f575f5ffd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd33305f6040518463ffffffff1660e01b815260040161065c93929190611f6a565b6020604051808303815f875af1158015610678573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069c9190611fc9565b508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b81526004016106d8929190611ff4565b6020604051808303815f875af11580156106f4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107189190611fc9565b50600267ffffffffffffffff8111156107345761073361201b565b5b6040519080825280602002602001820160405280156107625781602001602082028036833780820191505090505b50935089845f8151811061077957610778611e94565b5b602002602001018181525050808460018151811061079a57610799611e94565b5b6020026020010181815250505050509695505050505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461080790611dfc565b80601f016020809104026020016040519081016040528092919081815260200182805461083390611dfc565b801561087e5780601f106108555761010080835404028352916020019161087e565b820191905f5260205f20905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b5f5f610892610fdc565b905061089f818585611088565b600191505092915050565b5f5f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108e59190611ed0565b602060405180830381865afa158015610900573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109249190611efd565b90505f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109609190611ed0565b602060405180830381865afa15801561097b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099f9190611efd565b905081670de0b6b3a7640000826109b69190611d31565b6109c09190611d9f565b9250505092915050565b5f5f42831015610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0690611e76565b60405180910390fd5b5f610a18610425565b9050808a73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a549190611ed0565b602060405180830381865afa158015610a6f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a939190611efd565b89610a9e9190611d31565b610aa89190611d9f565b9250808973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ae49190611ed0565b602060405180830381865afa158015610aff573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b239190611efd565b89610b2e9190611d31565b610b389190611d9f565b915082871115610b46575f5ffd5b81861115610b52575f5ffd5b610b5c3389611178565b8973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86856040518363ffffffff1660e01b8152600401610b97929190611ff4565b6020604051808303815f875af1158015610bb3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bd79190611fc9565b508873ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86846040518363ffffffff1660e01b8152600401610c13929190611ff4565b6020604051808303815f875af1158015610c2f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c539190611fc9565b505097509795505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f5f42841015610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090611e76565b60405180910390fd5b610d31610425565b90505f811115610ea6575f8b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d759190611ed0565b602060405180830381865afa158015610d90573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db49190611efd565b828b610dc09190611d31565b610dca9190611d9f565b90505f8b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e069190611ed0565b602060405180830381865afa158015610e21573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e459190611efd565b838b610e519190611d31565b610e5b9190611d9f565b905080821015610e84578a945084610e738e8e6108aa565b610e7d9190611d31565b9350610e9f565b89935083610e928d8f6108aa565b610e9c9190611d31565b94505b5050610eb0565b8890508892508791505b82871115610ebc575f5ffd5b81861115610ec8575f5ffd5b8a73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610f0593929190612048565b6020604051808303815f875af1158015610f21573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f459190611fc9565b508973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f8393929190612048565b6020604051808303815f875af1158015610f9f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc39190611fc9565b50610fce85826111f7565b985098509895505050505050565b5f33905090565b610ff08383836001611276565b505050565b5f6110008484610c61565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110825781811015611073578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161106a9392919061207d565b60405180910390fd5b61108184848484035f611276565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110ef9190611ed0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611168575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161115f9190611ed0565b60405180910390fd5b611173838383611445565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111df9190611ed0565b60405180910390fd5b6111f3825f83611445565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611267575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161125e9190611ed0565b60405180910390fd5b6112725f8383611445565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112e6575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112dd9190611ed0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611356575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161134d9190611ed0565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561143f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161143691906116f8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611495578060025f8282546114899190611cfe565b92505081905550611563565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561151e578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016115159392919061207d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115aa578060025f82825403925050819055506115f4565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161165191906116f8565b60405180910390a3505050565b5f5ffd5b5f5ffd5b5f819050919050565b61167881611666565b8114611682575f5ffd5b50565b5f813590506116938161166f565b92915050565b5f5f5f606084860312156116b0576116af61165e565b5b5f6116bd86828701611685565b93505060206116ce86828701611685565b92505060406116df86828701611685565b9150509250925092565b6116f281611666565b82525050565b5f60208201905061170b5f8301846116e9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61175382611711565b61175d818561171b565b935061176d81856020860161172b565b61177681611739565b840191505092915050565b5f6020820190508181035f8301526117998184611749565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117ca826117a1565b9050919050565b6117da816117c0565b81146117e4575f5ffd5b50565b5f813590506117f5816117d1565b92915050565b5f5f604083850312156118115761181061165e565b5b5f61181e858286016117e7565b925050602061182f85828601611685565b9150509250929050565b5f8115159050919050565b61184d81611839565b82525050565b5f6020820190506118665f830184611844565b92915050565b5f5f5f606084860312156118835761188261165e565b5b5f611890868287016117e7565b93505060206118a1868287016117e7565b92505060406118b286828701611685565b9150509250925092565b5f60ff82169050919050565b6118d1816118bc565b82525050565b5f6020820190506118ea5f8301846118c8565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611911576119106118f0565b5b8235905067ffffffffffffffff81111561192e5761192d6118f4565b5b60208301915083602082028301111561194a576119496118f8565b5b9250929050565b5f5f5f5f5f5f60a0878903121561196b5761196a61165e565b5b5f61197889828a01611685565b965050602061198989828a01611685565b955050604087013567ffffffffffffffff8111156119aa576119a9611662565b5b6119b689828a016118fc565b945094505060606119c989828a016117e7565b92505060806119da89828a01611685565b9150509295509295509295565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611a1981611666565b82525050565b5f611a2a8383611a10565b60208301905092915050565b5f602082019050919050565b5f611a4c826119e7565b611a5681856119f1565b9350611a6183611a01565b805f5b83811015611a91578151611a788882611a1f565b9750611a8383611a36565b925050600181019050611a64565b5085935050505092915050565b5f6020820190508181035f830152611ab68184611a42565b905092915050565b5f60208284031215611ad357611ad261165e565b5b5f611ae0848285016117e7565b91505092915050565b5f5f60408385031215611aff57611afe61165e565b5b5f611b0c858286016117e7565b9250506020611b1d858286016117e7565b9150509250929050565b5f5f5f5f5f5f5f60e0888a031215611b4257611b4161165e565b5b5f611b4f8a828b016117e7565b9750506020611b608a828b016117e7565b9650506040611b718a828b01611685565b9550506060611b828a828b01611685565b9450506080611b938a828b01611685565b93505060a0611ba48a828b016117e7565b92505060c0611bb58a828b01611685565b91505092959891949750929550565b5f604082019050611bd75f8301856116e9565b611be460208301846116e9565b9392505050565b5f5f5f5f5f5f5f5f610100898b031215611c0857611c0761165e565b5b5f611c158b828c016117e7565b9850506020611c268b828c016117e7565b9750506040611c378b828c01611685565b9650506060611c488b828c01611685565b9550506080611c598b828c01611685565b94505060a0611c6a8b828c01611685565b93505060c0611c7b8b828c016117e7565b92505060e0611c8c8b828c01611685565b9150509295985092959890939650565b5f606082019050611caf5f8301866116e9565b611cbc60208301856116e9565b611cc960408301846116e9565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d0882611666565b9150611d1383611666565b9250828201905080821115611d2b57611d2a611cd1565b5b92915050565b5f611d3b82611666565b9150611d4683611666565b9250828202611d5481611666565b91508282048414831517611d6b57611d6a611cd1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611da982611666565b9150611db483611666565b925082611dc457611dc3611d72565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e1357607f821691505b602082108103611e2657611e25611dcf565b5b50919050565b7f646561646c696e655265616368656400000000000000000000000000000000005f82015250565b5f611e60600f8361171b565b9150611e6b82611e2c565b602082019050919050565b5f6020820190508181035f830152611e8d81611e54565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b611eca816117c0565b82525050565b5f602082019050611ee35f830184611ec1565b92915050565b5f81519050611ef78161166f565b92915050565b5f60208284031215611f1257611f1161165e565b5b5f611f1f84828501611ee9565b91505092915050565b5f819050919050565b5f819050919050565b5f611f54611f4f611f4a84611f28565b611f31565b611666565b9050919050565b611f6481611f3a565b82525050565b5f606082019050611f7d5f830186611ec1565b611f8a6020830185611ec1565b611f976040830184611f5b565b949350505050565b611fa881611839565b8114611fb2575f5ffd5b50565b5f81519050611fc381611f9f565b92915050565b5f60208284031215611fde57611fdd61165e565b5b5f611feb84828501611fb5565b91505092915050565b5f6040820190506120075f830185611ec1565b61201460208301846116e9565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60608201905061205b5f830186611ec1565b6120686020830185611ec1565b61207560408301846116e9565b949350505050565b5f6060820190506120905f830186611ec1565b61209d60208301856116e9565b6120aa60408301846116e9565b94935050505056fea26469706673582212208ef35f15affddc6ac1cf19d55897dc830fa61f28c83cd7b7c9e53be6ae401af264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAC41865A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x315 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP3 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP3 DUP5 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST DUP3 DUP6 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x40D PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH2 0x41A DUP2 DUP6 DUP6 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x438 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH2 0x445 DUP6 DUP3 DUP6 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x450 DUP6 DUP6 DUP6 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 TIMESTAMP DUP3 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x4E9 JUMPI PUSH2 0x4E8 PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP11 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP12 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D8 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0x201B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x762 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP10 DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x779 JUMPI PUSH2 0x778 PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x1E94 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x807 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x833 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x87E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x855 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x87E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x861 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x892 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH2 0x89F DUP2 DUP6 DUP6 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x960 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 TIMESTAMP DUP4 LT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA18 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP10 PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 POP DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP10 PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP DUP3 DUP8 GT ISZERO PUSH2 0xB46 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0xB52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB5C CALLER DUP10 PUSH2 0x1178 JUMP JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC2F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 TIMESTAMP DUP5 LT ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD31 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xEA6 JUMPI PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP3 DUP12 PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE21 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST DUP4 DUP12 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xE84 JUMPI DUP11 SWAP5 POP DUP5 PUSH2 0xE73 DUP15 DUP15 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST SWAP4 POP PUSH2 0xE9F JUMP JUMPDEST DUP10 SWAP4 POP DUP4 PUSH2 0xE92 DUP14 DUP16 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP PUSH2 0xEB0 JUMP JUMPDEST DUP9 SWAP1 POP DUP9 SWAP3 POP DUP8 SWAP2 POP JUMPDEST DUP3 DUP8 GT ISZERO PUSH2 0xEBC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0xEC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST POP PUSH2 0xFCE DUP6 DUP3 PUSH2 0x11F7 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1276 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1000 DUP5 DUP5 PUSH2 0xC61 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1082 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1073 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1081 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1168 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1173 DUP4 DUP4 DUP4 PUSH2 0x1445 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F3 DUP3 PUSH0 DUP4 PUSH2 0x1445 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1272 PUSH0 DUP4 DUP4 PUSH2 0x1445 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1356 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x143F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1436 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1495 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1563 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x151E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1515 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15F4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP2 EQ PUSH2 0x1682 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1693 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16AF PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BD DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16CE DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16DF DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x170B PUSH0 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1753 DUP3 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x175D DUP2 DUP6 PUSH2 0x171B JUMP JUMPDEST SWAP4 POP PUSH2 0x176D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1776 DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1799 DUP2 DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17CA DUP3 PUSH2 0x17A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DA DUP2 PUSH2 0x17C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F5 DUP2 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181E DUP6 DUP3 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184D DUP2 PUSH2 0x1839 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1866 PUSH0 DUP4 ADD DUP5 PUSH2 0x1844 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1890 DUP7 DUP3 DUP8 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18A1 DUP7 DUP3 DUP8 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18B2 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D1 DUP2 PUSH2 0x18BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18EA PUSH0 DUP4 ADD DUP5 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1911 JUMPI PUSH2 0x1910 PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x194A JUMPI PUSH2 0x1949 PUSH2 0x18F8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x196B JUMPI PUSH2 0x196A PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1978 DUP10 DUP3 DUP11 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1989 DUP10 DUP3 DUP11 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x1662 JUMP JUMPDEST JUMPDEST PUSH2 0x19B6 DUP10 DUP3 DUP11 ADD PUSH2 0x18FC JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x19C9 DUP10 DUP3 DUP11 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x19DA DUP10 DUP3 DUP11 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2A DUP4 DUP4 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C DUP3 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x1A56 DUP2 DUP6 PUSH2 0x19F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A61 DUP4 PUSH2 0x1A01 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A91 JUMPI DUP2 MLOAD PUSH2 0x1A78 DUP9 DUP3 PUSH2 0x1A1F JUMP JUMPDEST SWAP8 POP PUSH2 0x1A83 DUP4 PUSH2 0x1A36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A64 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 DUP5 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD2 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0C DUP6 DUP3 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1D DUP6 DUP3 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B42 JUMPI PUSH2 0x1B41 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4F DUP11 DUP3 DUP12 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B60 DUP11 DUP3 DUP12 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B71 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B82 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B93 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1BA4 DUP11 DUP3 DUP12 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BB5 DUP11 DUP3 DUP12 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH0 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1BE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C15 DUP12 DUP3 DUP13 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1C26 DUP12 DUP3 DUP13 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C37 DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1C48 DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1C59 DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1C6A DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1C7B DUP12 DUP3 DUP13 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1C8C DUP12 DUP3 DUP13 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CAF PUSH0 DUP4 ADD DUP7 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1CBC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1CC9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D08 DUP3 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D13 DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D2B JUMPI PUSH2 0x1D2A PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3B DUP3 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D46 DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D54 DUP2 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DA9 DUP3 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB4 DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x1D72 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x1DCF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x646561646C696E65526561636865640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E60 PUSH1 0xF DUP4 PUSH2 0x171B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E6B DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E8D DUP2 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ECA DUP2 PUSH2 0x17C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EF7 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F1F DUP5 DUP3 DUP6 ADD PUSH2 0x1EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F54 PUSH2 0x1F4F PUSH2 0x1F4A DUP5 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F64 DUP2 PUSH2 0x1F3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F7D PUSH0 DUP4 ADD DUP7 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1F8A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1F97 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1FA8 DUP2 PUSH2 0x1839 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC3 DUP2 PUSH2 0x1F9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDE JUMPI PUSH2 0x1FDD PUSH2 0x165E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FEB DUP5 DUP3 DUP6 ADD PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2007 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x2014 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x205B PUSH0 DUP4 ADD DUP7 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x2068 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x2075 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2090 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x209D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x20AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 RETURN PUSH0 ISZERO 0xAF REVERT 0xDC PUSH11 0xC1CF19D55897DC830FA61F 0x28 0xC8 EXTCODECOPY 0xD7 0xB7 0xC9 JUMPF 0x3BE6 0xAE BLOCKHASH BYTE CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "129:6865:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6718:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4657:980:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5966:360:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3105:926;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3532:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;944:1398:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6718:253;6811:14;6941:9;6932:8;:18;;;;:::i;:::-;6920:10;6909:8;:21;;;;:::i;:::-;:42;;;;:::i;:::-;6897:54;;6718:253;;;;;:::o;1760:89:1:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;4657:980:5:-;4903:21;4967:15;4956:8;:26;;4948:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5073:12;5094:4;;5099:1;5094:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5073:29;;5125:12;5146:4;;5151:1;5146:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5125:29;;5199:17;5272:6;:16;;;5297:4;5272:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5263:8;:40;;;;:::i;:::-;5230:6;:16;;;5255:4;5230:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5219:8;:42;;;;:::i;:::-;:85;;;;:::i;:::-;5199:105;;5346:12;5335:9;:23;;5327:32;;;;;;5382:6;:19;;;5402:10;5422:4;5428:1;5382:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5453:6;:15;;;5469:2;5473:9;5453:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5527:1;5516:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:23;;5565:8;5552:7;5560:1;5552:10;;;;;;;;:::i;:::-;;;;;;;:21;;;;;5608:9;5596:7;5604:1;5596:10;;;;;;;;:::i;:::-;;;;;;;:21;;;;;4925:712;;;4657:980;;;;;;;;:::o;2985:116:1:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;5966:360:5:-;6037:10;6119:15;6143:6;6137:23;;;6169:4;6137:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6119:56;;6198:15;6222:6;6216:23;;;6248:4;6216:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6198:56;;6299:7;6293:4;6285:7;:12;;;;:::i;:::-;6284:22;;;;:::i;:::-;6277:29;;;;5966:360;;;;:::o;3105:926::-;3369:12;3383;3478:15;3467:8;:26;;3459:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3532:22;3557:13;:11;:13::i;:::-;3532:38;;3652:14;3619:6;3613:23;;;3645:4;3613:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3601:9;:50;;;;:::i;:::-;:65;;;;:::i;:::-;3591:75;;3746:14;3713:6;3707:23;;;3739:4;3707:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3695:9;:50;;;;:::i;:::-;:65;;;;:::i;:::-;3685:75;;3801:7;3789:10;:19;;3781:28;;;;;;3849:7;3836:10;:20;;3828:29;;;;;;3878:28;3884:10;3896:9;3878:5;:28::i;:::-;3931:6;3925:22;;;3948:2;3952:7;3925:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3985:6;3979:22;;;4002:2;4005:7;3979:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3396:635;3105:926;;;;;;;;;;:::o;3532:140:1:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;944:1398:5:-;1208:12;1222;1236:14;1285:15;1274:8;:26;;1266:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1347:13;:11;:13::i;:::-;1335:25;;1390:1;1378:9;:13;1375:681;;;1411:10;1459:6;1453:23;;;1485:4;1453:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:9;1424:14;:26;;;;:::i;:::-;1423:68;;;;:::i;:::-;1411:80;;1510:10;1558:6;1552:23;;;1584:4;1552:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1540:9;1523:14;:26;;;;:::i;:::-;1522:68;;;;:::i;:::-;1510:80;;1617:2;1612;:7;1609:281;;;1654:14;1644:24;;1726:7;1701:24;1710:6;1718;1701:8;:24::i;:::-;:32;;;;:::i;:::-;1691:42;;1609:281;;;1791:14;1781:24;;1863:7;1838:24;1847:6;1855;1838:8;:24::i;:::-;:32;;;;:::i;:::-;1828:42;;1609:281;1392:513;;1375:681;;;1940:14;1928:26;;1983:14;1973:24;;2026:14;2016:24;;1375:681;2090:7;2078:10;:19;;2070:28;;;;;;2134:7;2121:10;:20;;2113:29;;;;;;2163:6;2157:26;;;2184:10;2204:4;2210:7;2157:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2239:6;2233:26;;;2260:10;2280:4;2287:7;2233:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2310:20;2316:2;2320:9;2310:5;:20::i;:::-;944:1398;;;;;;;;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:6:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:99::-;1719:6;1753:5;1747:12;1737:22;;1667:99;;;:::o;1772:169::-;1856:11;1890:6;1885:3;1878:19;1930:4;1925:3;1921:14;1906:29;;1772:169;;;;:::o;1947:139::-;2036:6;2031:3;2026;2020:23;2077:1;2068:6;2063:3;2059:16;2052:27;1947:139;;;:::o;2092:102::-;2133:6;2184:2;2180:7;2175:2;2168:5;2164:14;2160:28;2150:38;;2092:102;;;:::o;2200:377::-;2288:3;2316:39;2349:5;2316:39;:::i;:::-;2371:71;2435:6;2430:3;2371:71;:::i;:::-;2364:78;;2451:65;2509:6;2504:3;2497:4;2490:5;2486:16;2451:65;:::i;:::-;2541:29;2563:6;2541:29;:::i;:::-;2536:3;2532:39;2525:46;;2292:285;2200:377;;;;:::o;2583:313::-;2696:4;2734:2;2723:9;2719:18;2711:26;;2783:9;2777:4;2773:20;2769:1;2758:9;2754:17;2747:47;2811:78;2884:4;2875:6;2811:78;:::i;:::-;2803:86;;2583:313;;;;:::o;2902:126::-;2939:7;2979:42;2972:5;2968:54;2957:65;;2902:126;;;:::o;3034:96::-;3071:7;3100:24;3118:5;3100:24;:::i;:::-;3089:35;;3034:96;;;:::o;3136:122::-;3209:24;3227:5;3209:24;:::i;:::-;3202:5;3199:35;3189:63;;3248:1;3245;3238:12;3189:63;3136:122;:::o;3264:139::-;3310:5;3348:6;3335:20;3326:29;;3364:33;3391:5;3364:33;:::i;:::-;3264:139;;;;:::o;3409:474::-;3477:6;3485;3534:2;3522:9;3513:7;3509:23;3505:32;3502:119;;;3540:79;;:::i;:::-;3502:119;3660:1;3685:53;3730:7;3721:6;3710:9;3706:22;3685:53;:::i;:::-;3675:63;;3631:117;3787:2;3813:53;3858:7;3849:6;3838:9;3834:22;3813:53;:::i;:::-;3803:63;;3758:118;3409:474;;;;;:::o;3889:90::-;3923:7;3966:5;3959:13;3952:21;3941:32;;3889:90;;;:::o;3985:109::-;4066:21;4081:5;4066:21;:::i;:::-;4061:3;4054:34;3985:109;;:::o;4100:210::-;4187:4;4225:2;4214:9;4210:18;4202:26;;4238:65;4300:1;4289:9;4285:17;4276:6;4238:65;:::i;:::-;4100:210;;;;:::o;4316:619::-;4393:6;4401;4409;4458:2;4446:9;4437:7;4433:23;4429:32;4426:119;;;4464:79;;:::i;:::-;4426:119;4584:1;4609:53;4654:7;4645:6;4634:9;4630:22;4609:53;:::i;:::-;4599:63;;4555:117;4711:2;4737:53;4782:7;4773:6;4762:9;4758:22;4737:53;:::i;:::-;4727:63;;4682:118;4839:2;4865:53;4910:7;4901:6;4890:9;4886:22;4865:53;:::i;:::-;4855:63;;4810:118;4316:619;;;;;:::o;4941:86::-;4976:7;5016:4;5009:5;5005:16;4994:27;;4941:86;;;:::o;5033:112::-;5116:22;5132:5;5116:22;:::i;:::-;5111:3;5104:35;5033:112;;:::o;5151:214::-;5240:4;5278:2;5267:9;5263:18;5255:26;;5291:67;5355:1;5344:9;5340:17;5331:6;5291:67;:::i;:::-;5151:214;;;;:::o;5371:117::-;5480:1;5477;5470:12;5494:117;5603:1;5600;5593:12;5617:117;5726:1;5723;5716:12;5757:568;5830:8;5840:6;5890:3;5883:4;5875:6;5871:17;5867:27;5857:122;;5898:79;;:::i;:::-;5857:122;6011:6;5998:20;5988:30;;6041:18;6033:6;6030:30;6027:117;;;6063:79;;:::i;:::-;6027:117;6177:4;6169:6;6165:17;6153:29;;6231:3;6223:4;6215:6;6211:17;6201:8;6197:32;6194:41;6191:128;;;6238:79;;:::i;:::-;6191:128;5757:568;;;;;:::o;6331:1141::-;6453:6;6461;6469;6477;6485;6493;6542:3;6530:9;6521:7;6517:23;6513:33;6510:120;;;6549:79;;:::i;:::-;6510:120;6669:1;6694:53;6739:7;6730:6;6719:9;6715:22;6694:53;:::i;:::-;6684:63;;6640:117;6796:2;6822:53;6867:7;6858:6;6847:9;6843:22;6822:53;:::i;:::-;6812:63;;6767:118;6952:2;6941:9;6937:18;6924:32;6983:18;6975:6;6972:30;6969:117;;;7005:79;;:::i;:::-;6969:117;7118:80;7190:7;7181:6;7170:9;7166:22;7118:80;:::i;:::-;7100:98;;;;6895:313;7247:2;7273:53;7318:7;7309:6;7298:9;7294:22;7273:53;:::i;:::-;7263:63;;7218:118;7375:3;7402:53;7447:7;7438:6;7427:9;7423:22;7402:53;:::i;:::-;7392:63;;7346:119;6331:1141;;;;;;;;:::o;7478:114::-;7545:6;7579:5;7573:12;7563:22;;7478:114;;;:::o;7598:184::-;7697:11;7731:6;7726:3;7719:19;7771:4;7766:3;7762:14;7747:29;;7598:184;;;;:::o;7788:132::-;7855:4;7878:3;7870:11;;7908:4;7903:3;7899:14;7891:22;;7788:132;;;:::o;7926:108::-;8003:24;8021:5;8003:24;:::i;:::-;7998:3;7991:37;7926:108;;:::o;8040:179::-;8109:10;8130:46;8172:3;8164:6;8130:46;:::i;:::-;8208:4;8203:3;8199:14;8185:28;;8040:179;;;;:::o;8225:113::-;8295:4;8327;8322:3;8318:14;8310:22;;8225:113;;;:::o;8374:732::-;8493:3;8522:54;8570:5;8522:54;:::i;:::-;8592:86;8671:6;8666:3;8592:86;:::i;:::-;8585:93;;8702:56;8752:5;8702:56;:::i;:::-;8781:7;8812:1;8797:284;8822:6;8819:1;8816:13;8797:284;;;8898:6;8892:13;8925:63;8984:3;8969:13;8925:63;:::i;:::-;8918:70;;9011:60;9064:6;9011:60;:::i;:::-;9001:70;;8857:224;8844:1;8841;8837:9;8832:14;;8797:284;;;8801:14;9097:3;9090:10;;8498:608;;;8374:732;;;;:::o;9112:373::-;9255:4;9293:2;9282:9;9278:18;9270:26;;9342:9;9336:4;9332:20;9328:1;9317:9;9313:17;9306:47;9370:108;9473:4;9464:6;9370:108;:::i;:::-;9362:116;;9112:373;;;;:::o;9491:329::-;9550:6;9599:2;9587:9;9578:7;9574:23;9570:32;9567:119;;;9605:79;;:::i;:::-;9567:119;9725:1;9750:53;9795:7;9786:6;9775:9;9771:22;9750:53;:::i;:::-;9740:63;;9696:117;9491:329;;;;:::o;9826:474::-;9894:6;9902;9951:2;9939:9;9930:7;9926:23;9922:32;9919:119;;;9957:79;;:::i;:::-;9919:119;10077:1;10102:53;10147:7;10138:6;10127:9;10123:22;10102:53;:::i;:::-;10092:63;;10048:117;10204:2;10230:53;10275:7;10266:6;10255:9;10251:22;10230:53;:::i;:::-;10220:63;;10175:118;9826:474;;;;;:::o;10306:1203::-;10419:6;10427;10435;10443;10451;10459;10467;10516:3;10504:9;10495:7;10491:23;10487:33;10484:120;;;10523:79;;:::i;:::-;10484:120;10643:1;10668:53;10713:7;10704:6;10693:9;10689:22;10668:53;:::i;:::-;10658:63;;10614:117;10770:2;10796:53;10841:7;10832:6;10821:9;10817:22;10796:53;:::i;:::-;10786:63;;10741:118;10898:2;10924:53;10969:7;10960:6;10949:9;10945:22;10924:53;:::i;:::-;10914:63;;10869:118;11026:2;11052:53;11097:7;11088:6;11077:9;11073:22;11052:53;:::i;:::-;11042:63;;10997:118;11154:3;11181:53;11226:7;11217:6;11206:9;11202:22;11181:53;:::i;:::-;11171:63;;11125:119;11283:3;11310:53;11355:7;11346:6;11335:9;11331:22;11310:53;:::i;:::-;11300:63;;11254:119;11412:3;11439:53;11484:7;11475:6;11464:9;11460:22;11439:53;:::i;:::-;11429:63;;11383:119;10306:1203;;;;;;;;;;:::o;11515:332::-;11636:4;11674:2;11663:9;11659:18;11651:26;;11687:71;11755:1;11744:9;11740:17;11731:6;11687:71;:::i;:::-;11768:72;11836:2;11825:9;11821:18;11812:6;11768:72;:::i;:::-;11515:332;;;;;:::o;11853:1349::-;11975:6;11983;11991;11999;12007;12015;12023;12031;12080:3;12068:9;12059:7;12055:23;12051:33;12048:120;;;12087:79;;:::i;:::-;12048:120;12207:1;12232:53;12277:7;12268:6;12257:9;12253:22;12232:53;:::i;:::-;12222:63;;12178:117;12334:2;12360:53;12405:7;12396:6;12385:9;12381:22;12360:53;:::i;:::-;12350:63;;12305:118;12462:2;12488:53;12533:7;12524:6;12513:9;12509:22;12488:53;:::i;:::-;12478:63;;12433:118;12590:2;12616:53;12661:7;12652:6;12641:9;12637:22;12616:53;:::i;:::-;12606:63;;12561:118;12718:3;12745:53;12790:7;12781:6;12770:9;12766:22;12745:53;:::i;:::-;12735:63;;12689:119;12847:3;12874:53;12919:7;12910:6;12899:9;12895:22;12874:53;:::i;:::-;12864:63;;12818:119;12976:3;13003:53;13048:7;13039:6;13028:9;13024:22;13003:53;:::i;:::-;12993:63;;12947:119;13105:3;13132:53;13177:7;13168:6;13157:9;13153:22;13132:53;:::i;:::-;13122:63;;13076:119;11853:1349;;;;;;;;;;;:::o;13208:442::-;13357:4;13395:2;13384:9;13380:18;13372:26;;13408:71;13476:1;13465:9;13461:17;13452:6;13408:71;:::i;:::-;13489:72;13557:2;13546:9;13542:18;13533:6;13489:72;:::i;:::-;13571;13639:2;13628:9;13624:18;13615:6;13571:72;:::i;:::-;13208:442;;;;;;:::o;13656:180::-;13704:77;13701:1;13694:88;13801:4;13798:1;13791:15;13825:4;13822:1;13815:15;13842:191;13882:3;13901:20;13919:1;13901:20;:::i;:::-;13896:25;;13935:20;13953:1;13935:20;:::i;:::-;13930:25;;13978:1;13975;13971:9;13964:16;;13999:3;13996:1;13993:10;13990:36;;;14006:18;;:::i;:::-;13990:36;13842:191;;;;:::o;14039:410::-;14079:7;14102:20;14120:1;14102:20;:::i;:::-;14097:25;;14136:20;14154:1;14136:20;:::i;:::-;14131:25;;14191:1;14188;14184:9;14213:30;14231:11;14213:30;:::i;:::-;14202:41;;14392:1;14383:7;14379:15;14376:1;14373:22;14353:1;14346:9;14326:83;14303:139;;14422:18;;:::i;:::-;14303:139;14087:362;14039:410;;;;:::o;14455:180::-;14503:77;14500:1;14493:88;14600:4;14597:1;14590:15;14624:4;14621:1;14614:15;14641:185;14681:1;14698:20;14716:1;14698:20;:::i;:::-;14693:25;;14732:20;14750:1;14732:20;:::i;:::-;14727:25;;14771:1;14761:35;;14776:18;;:::i;:::-;14761:35;14818:1;14815;14811:9;14806:14;;14641:185;;;;:::o;14832:180::-;14880:77;14877:1;14870:88;14977:4;14974:1;14967:15;15001:4;14998:1;14991:15;15018:320;15062:6;15099:1;15093:4;15089:12;15079:22;;15146:1;15140:4;15136:12;15167:18;15157:81;;15223:4;15215:6;15211:17;15201:27;;15157:81;15285:2;15277:6;15274:14;15254:18;15251:38;15248:84;;15304:18;;:::i;:::-;15248:84;15069:269;15018:320;;;:::o;15344:165::-;15484:17;15480:1;15472:6;15468:14;15461:41;15344:165;:::o;15515:366::-;15657:3;15678:67;15742:2;15737:3;15678:67;:::i;:::-;15671:74;;15754:93;15843:3;15754:93;:::i;:::-;15872:2;15867:3;15863:12;15856:19;;15515:366;;;:::o;15887:419::-;16053:4;16091:2;16080:9;16076:18;16068:26;;16140:9;16134:4;16130:20;16126:1;16115:9;16111:17;16104:47;16168:131;16294:4;16168:131;:::i;:::-;16160:139;;15887:419;;;:::o;16312:180::-;16360:77;16357:1;16350:88;16457:4;16454:1;16447:15;16481:4;16478:1;16471:15;16498:118;16585:24;16603:5;16585:24;:::i;:::-;16580:3;16573:37;16498:118;;:::o;16622:222::-;16715:4;16753:2;16742:9;16738:18;16730:26;;16766:71;16834:1;16823:9;16819:17;16810:6;16766:71;:::i;:::-;16622:222;;;;:::o;16850:143::-;16907:5;16938:6;16932:13;16923:22;;16954:33;16981:5;16954:33;:::i;:::-;16850:143;;;;:::o;16999:351::-;17069:6;17118:2;17106:9;17097:7;17093:23;17089:32;17086:119;;;17124:79;;:::i;:::-;17086:119;17244:1;17269:64;17325:7;17316:6;17305:9;17301:22;17269:64;:::i;:::-;17259:74;;17215:128;16999:351;;;;:::o;17356:85::-;17401:7;17430:5;17419:16;;17356:85;;;:::o;17447:60::-;17475:3;17496:5;17489:12;;17447:60;;;:::o;17513:158::-;17571:9;17604:61;17622:42;17631:32;17657:5;17631:32;:::i;:::-;17622:42;:::i;:::-;17604:61;:::i;:::-;17591:74;;17513:158;;;:::o;17677:147::-;17772:45;17811:5;17772:45;:::i;:::-;17767:3;17760:58;17677:147;;:::o;17830:458::-;17987:4;18025:2;18014:9;18010:18;18002:26;;18038:71;18106:1;18095:9;18091:17;18082:6;18038:71;:::i;:::-;18119:72;18187:2;18176:9;18172:18;18163:6;18119:72;:::i;:::-;18201:80;18277:2;18266:9;18262:18;18253:6;18201:80;:::i;:::-;17830:458;;;;;;:::o;18294:116::-;18364:21;18379:5;18364:21;:::i;:::-;18357:5;18354:32;18344:60;;18400:1;18397;18390:12;18344:60;18294:116;:::o;18416:137::-;18470:5;18501:6;18495:13;18486:22;;18517:30;18541:5;18517:30;:::i;:::-;18416:137;;;;:::o;18559:345::-;18626:6;18675:2;18663:9;18654:7;18650:23;18646:32;18643:119;;;18681:79;;:::i;:::-;18643:119;18801:1;18826:61;18879:7;18870:6;18859:9;18855:22;18826:61;:::i;:::-;18816:71;;18772:125;18559:345;;;;:::o;18910:332::-;19031:4;19069:2;19058:9;19054:18;19046:26;;19082:71;19150:1;19139:9;19135:17;19126:6;19082:71;:::i;:::-;19163:72;19231:2;19220:9;19216:18;19207:6;19163:72;:::i;:::-;18910:332;;;;;:::o;19248:180::-;19296:77;19293:1;19286:88;19393:4;19390:1;19383:15;19417:4;19414:1;19407:15;19434:442;19583:4;19621:2;19610:9;19606:18;19598:26;;19634:71;19702:1;19691:9;19687:17;19678:6;19634:71;:::i;:::-;19715:72;19783:2;19772:9;19768:18;19759:6;19715:72;:::i;:::-;19797;19865:2;19854:9;19850:18;19841:6;19797:72;:::i;:::-;19434:442;;;;;;:::o;19882:::-;20031:4;20069:2;20058:9;20054:18;20046:26;;20082:71;20150:1;20139:9;20135:17;20126:6;20082:71;:::i;:::-;20163:72;20231:2;20220:9;20216:18;20207:6;20163:72;:::i;:::-;20245;20313:2;20302:9;20298:18;20289:6;20245:72;:::i;:::-;19882:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1684800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "405",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getPrice(address,address)": "infinite",
								"name()": "infinite",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 196,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 196,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 196,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 165,
									"end": 196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "6C69000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "6C00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 6994,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ef35f15affddc6ac1cf19d55897dc830fa61f28c83cd7b7c9e53be6ae401af264736f6c634300081e0033",
									".code": [
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "AC41865A"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "AC41865A"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "BAA2ABDE"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "E8E33700"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "38ED1739"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "54D50D4"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 6994,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6718,
											"end": 6971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6718,
											"end": 6971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6718,
											"end": 6971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4657,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4657,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4657,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5966,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5966,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5966,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3105,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3105,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3105,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 944,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 944,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 944,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6811,
											"end": 6825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6940,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6932,
											"end": 6950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6917,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6909,
											"end": 6930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6909,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6930,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6909,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6909,
											"end": 6951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6909,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6951,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6909,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 6951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 6951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4967,
											"end": 4982,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4982,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4982,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4948,
											"end": 5002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4948,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5085,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5094,
											"end": 5101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5094,
											"end": 5101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5152,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5146,
											"end": 5153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5146,
											"end": 5153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5297,
											"end": 5301,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5272,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5272,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5272,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5271,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5263,
											"end": 5303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5263,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5263,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5230,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5230,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5227,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5219,
											"end": 5261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5219,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5261,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5219,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5219,
											"end": 5304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5219,
											"end": 5304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5304,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5219,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5358,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5335,
											"end": 5358,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5335,
											"end": 5358,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5327,
											"end": 5359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 5402,
											"end": 5412,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5426,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5382,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5382,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5469,
											"end": 5471,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5482,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5453,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5453,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5516,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5529,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5560,
											"end": 5561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5552,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5596,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5617,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 5637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6160,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6160,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6137,
											"end": 6175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6137,
											"end": 6175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6248,
											"end": 6252,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6216,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6216,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6285,
											"end": 6297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6284,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3493,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3475,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3493,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3459,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3459,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3557,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3557,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3636,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3636,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3645,
											"end": 3649,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3613,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3613,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3613,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3610,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3601,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3601,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3601,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3601,
											"end": 3666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3601,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3666,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3601,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3746,
											"end": 3760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3739,
											"end": 3743,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3707,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3707,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3695,
											"end": 3745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3695,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3745,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3695,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3695,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3849,
											"end": 3856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3846,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3856,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3856,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3828,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3884,
											"end": 3894,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3878,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3925,
											"end": 3947,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3948,
											"end": 3950,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3959,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3925,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3925,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 3991,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 4001,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4012,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3979,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3979,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 4031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1282,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1300,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1300,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1266,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1266,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1347,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1347,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1360,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1347,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1391,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1453,
											"end": 1476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1485,
											"end": 1489,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1453,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1453,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1453,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1438,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1424,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1423,
											"end": 1491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1423,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1423,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1552,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1552,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1537,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1523,
											"end": 1549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1523,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1549,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1523,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1522,
											"end": 1590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1522,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1590,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1522,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1668,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1701,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1701,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1733,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP16",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1838,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1838,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1870,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1609,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1954,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 1997,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 1997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1375,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2088,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2141,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2113,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2208,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2157,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2157,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2239,
											"end": 2245,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2260,
											"end": 2270,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2284,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2233,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2233,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2310,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 2342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2177,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2188,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2316,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2371,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2442,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2451,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2541,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 2811,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3100,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3209,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3234,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3250,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3364,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3520,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3532,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3537,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3540,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3685,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3738,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3813,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3972,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 4081,
											"end": 4086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 4066,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4238,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4444,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4456,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4429,
											"end": 4461,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4545,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 4426,
											"end": 4545,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 4464,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4464,
											"end": 4543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4543,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 4464,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4545,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 4426,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4645,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4634,
											"end": 4643,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4609,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4662,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4711,
											"end": 4713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 4782,
											"end": 4789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4771,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4737,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4790,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 4737,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4682,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 4910,
											"end": 4917,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4865,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4918,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 4865,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5027,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4941,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5021,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5145,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5033,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 5132,
											"end": 5137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5116,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5151,
											"end": 5365,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5151,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5280,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5267,
											"end": 5276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 5355,
											"end": 5356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5353,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5337,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5291,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5358,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 5291,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5151,
											"end": 5365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5151,
											"end": 5365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5151,
											"end": 5365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5151,
											"end": 5365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5151,
											"end": 5365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5488,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5371,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5482,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5494,
											"end": 5611,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5494,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5734,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5617,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5728,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5893,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5894,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 5898,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5898,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5977,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 5898,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6018,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6060,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6144,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 6027,
											"end": 6144,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6063,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6144,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 6027,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6181,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6228,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6235,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 6191,
											"end": 6319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6238,
											"end": 6317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6319,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 6191,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6545,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6530,
											"end": 6539,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6528,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6546,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6630,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 6510,
											"end": 6630,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6549,
											"end": 6628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6630,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 6510,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 6739,
											"end": 6746,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6715,
											"end": 6737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6694,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6747,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6867,
											"end": 6874,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6822,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6875,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6767,
											"end": 6885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 6954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6956,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 7001,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7086,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 6969,
											"end": 7086,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7086,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 6969,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 7190,
											"end": 7197,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7118,
											"end": 7198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7198,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 7118,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7198,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7198,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 7208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7249,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 7318,
											"end": 7325,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7307,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 7294,
											"end": 7316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7273,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7326,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7378,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 7447,
											"end": 7454,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7436,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 7402,
											"end": 7455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 7402,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 7472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7592,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 7478,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7545,
											"end": 7551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7585,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7782,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7598,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7697,
											"end": 7708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 7729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7719,
											"end": 7738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7766,
											"end": 7769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 7776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7782,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7920,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 7788,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 7881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 7881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 7913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 7913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8034,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 7926,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 8021,
											"end": 8026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8003,
											"end": 8027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8027,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 8003,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7991,
											"end": 8028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8219,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8040,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 8172,
											"end": 8175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8130,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8176,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 8130,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8212,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8219,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8219,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8338,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8225,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8374,
											"end": 9106,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8374,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 8570,
											"end": 8575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8522,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8522,
											"end": 8576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8522,
											"end": 8576,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 8522,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8666,
											"end": 8669,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8592,
											"end": 8678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8678,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 8592,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8678,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8702,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 8752,
											"end": 8757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8702,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8702,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8702,
											"end": 8758,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 8702,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8781,
											"end": 8788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8816,
											"end": 8829,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8892,
											"end": 8905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8925,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8969,
											"end": 8982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8925,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8925,
											"end": 8988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8925,
											"end": 8988,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8925,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8988,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 9064,
											"end": 9070,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9011,
											"end": 9071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9071,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 9011,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9071,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8857,
											"end": 9081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8844,
											"end": 8845,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8841,
											"end": 8842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 8846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 8846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 8797,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8801,
											"end": 8815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9097,
											"end": 9100,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9090,
											"end": 9100,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9090,
											"end": 9100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 9106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 9106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 9106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8374,
											"end": 9106,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8374,
											"end": 9106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8374,
											"end": 9106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8374,
											"end": 9106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8374,
											"end": 9106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9485,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 9112,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9293,
											"end": 9295,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9352,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9306,
											"end": 9353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 9473,
											"end": 9477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9470,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9370,
											"end": 9478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9478,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 9370,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9485,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9820,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 9491,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9587,
											"end": 9596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9597,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9602,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9686,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 9567,
											"end": 9686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 9605,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9605,
											"end": 9684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9684,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 9605,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9686,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 9567,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 9795,
											"end": 9802,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9786,
											"end": 9792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9784,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9771,
											"end": 9793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9750,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9803,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 9750,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9740,
											"end": 9803,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9740,
											"end": 9803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9820,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9820,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9939,
											"end": 9948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 9937,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9926,
											"end": 9949,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9922,
											"end": 9954,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10038,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 9919,
											"end": 10038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9957,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 9957,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9957,
											"end": 10036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9957,
											"end": 10036,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 9957,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10038,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 9919,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10102,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 10147,
											"end": 10154,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10127,
											"end": 10136,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10123,
											"end": 10145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10102,
											"end": 10155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10155,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 10102,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10155,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10048,
											"end": 10165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 10275,
											"end": 10282,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10266,
											"end": 10272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10230,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10175,
											"end": 10293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 10300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10459,
											"end": 10465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10516,
											"end": 10519,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10504,
											"end": 10513,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10495,
											"end": 10502,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 10491,
											"end": 10514,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10520,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 10484,
											"end": 10604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 10523,
											"end": 10602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 10523,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10604,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 10484,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10689,
											"end": 10711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10668,
											"end": 10721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 10668,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10721,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 10658,
											"end": 10721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10772,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 10841,
											"end": 10848,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 10832,
											"end": 10838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10817,
											"end": 10839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10796,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 10796,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10849,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10898,
											"end": 10900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 10969,
											"end": 10976,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 10960,
											"end": 10966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10949,
											"end": 10958,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 10967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10924,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10924,
											"end": 10977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10924,
											"end": 10977,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 10924,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10977,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 10987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11028,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 11097,
											"end": 11104,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11088,
											"end": 11094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 11073,
											"end": 11095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 11052,
											"end": 11105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11105,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 11115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11157,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 11226,
											"end": 11233,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11215,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 11181,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11171,
											"end": 11234,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11171,
											"end": 11234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11283,
											"end": 11286,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 11310,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11346,
											"end": 11352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11335,
											"end": 11344,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 11331,
											"end": 11353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11310,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 11310,
											"end": 11363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11310,
											"end": 11363,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 11310,
											"end": 11363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11363,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11412,
											"end": 11415,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 11484,
											"end": 11491,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11464,
											"end": 11473,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 11460,
											"end": 11482,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 11439,
											"end": 11492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 11509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11651,
											"end": 11677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11651,
											"end": 11677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11687,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 11755,
											"end": 11756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11753,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11731,
											"end": 11737,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11687,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11687,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11687,
											"end": 11758,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 11687,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11768,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 11836,
											"end": 11838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11825,
											"end": 11834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11812,
											"end": 11818,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11768,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11768,
											"end": 11840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11768,
											"end": 11840,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 11768,
											"end": 11840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 11981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11991,
											"end": 11997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11999,
											"end": 12005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12023,
											"end": 12029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12083,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12068,
											"end": 12077,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 12059,
											"end": 12066,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12055,
											"end": 12078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12051,
											"end": 12084,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12048,
											"end": 12168,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12048,
											"end": 12168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 12048,
											"end": 12168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12087,
											"end": 12166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 12087,
											"end": 12166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 12087,
											"end": 12166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12087,
											"end": 12166,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 12087,
											"end": 12166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12048,
											"end": 12168,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 12048,
											"end": 12168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12207,
											"end": 12208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 12277,
											"end": 12284,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12268,
											"end": 12274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12257,
											"end": 12266,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 12253,
											"end": 12275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12232,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 12232,
											"end": 12285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12232,
											"end": 12285,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 12232,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12222,
											"end": 12285,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 12222,
											"end": 12285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12178,
											"end": 12295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 12405,
											"end": 12412,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12396,
											"end": 12402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12385,
											"end": 12394,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 12381,
											"end": 12403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12360,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 12360,
											"end": 12413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12360,
											"end": 12413,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 12360,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12488,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12524,
											"end": 12530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12513,
											"end": 12522,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 12509,
											"end": 12531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12488,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 12488,
											"end": 12541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12488,
											"end": 12541,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 12488,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12541,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12433,
											"end": 12551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12590,
											"end": 12592,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12616,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 12661,
											"end": 12668,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12652,
											"end": 12658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12641,
											"end": 12650,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 12637,
											"end": 12659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12616,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 12616,
											"end": 12669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12616,
											"end": 12669,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 12616,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12606,
											"end": 12669,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 12606,
											"end": 12669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12561,
											"end": 12679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12718,
											"end": 12721,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12745,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 12790,
											"end": 12797,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12781,
											"end": 12787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12770,
											"end": 12779,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 12745,
											"end": 12798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12798,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 12745,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12735,
											"end": 12798,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12735,
											"end": 12798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12689,
											"end": 12808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12847,
											"end": 12850,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 12919,
											"end": 12926,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 12910,
											"end": 12916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12899,
											"end": 12908,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 12895,
											"end": 12917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 12874,
											"end": 12927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12864,
											"end": 12927,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12864,
											"end": 12927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12818,
											"end": 12937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12976,
											"end": 12979,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 13003,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 13048,
											"end": 13055,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 13039,
											"end": 13045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 13024,
											"end": 13046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13003,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 13003,
											"end": 13056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13003,
											"end": 13056,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 13003,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12993,
											"end": 13056,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12993,
											"end": 13056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 13066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13105,
											"end": 13108,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 13132,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 13177,
											"end": 13184,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 13168,
											"end": 13174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13157,
											"end": 13166,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 13153,
											"end": 13175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13132,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 13132,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13132,
											"end": 13185,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 13132,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13122,
											"end": 13185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13122,
											"end": 13185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13076,
											"end": 13195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 13202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13395,
											"end": 13397,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13384,
											"end": 13393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13380,
											"end": 13398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13372,
											"end": 13398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13372,
											"end": 13398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 13476,
											"end": 13477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13465,
											"end": 13474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13461,
											"end": 13478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13452,
											"end": 13458,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 13408,
											"end": 13479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13546,
											"end": 13555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13542,
											"end": 13560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13539,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 13489,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13571,
											"end": 13643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 13639,
											"end": 13641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13628,
											"end": 13637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13624,
											"end": 13642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13615,
											"end": 13621,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13571,
											"end": 13643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 13571,
											"end": 13643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13571,
											"end": 13643,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 13571,
											"end": 13643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13656,
											"end": 13836,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 13656,
											"end": 13836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13704,
											"end": 13781,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13701,
											"end": 13702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13694,
											"end": 13782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13801,
											"end": 13805,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13798,
											"end": 13799,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13791,
											"end": 13806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13829,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13822,
											"end": 13823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13815,
											"end": 13830,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 14033,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 13842,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13882,
											"end": 13885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 13919,
											"end": 13920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13901,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 13901,
											"end": 13921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13901,
											"end": 13921,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 13901,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13896,
											"end": 13921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13896,
											"end": 13921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 13953,
											"end": 13954,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 13935,
											"end": 13955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13930,
											"end": 13955,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13930,
											"end": 13955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13978,
											"end": 13979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13975,
											"end": 13976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13971,
											"end": 13980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13964,
											"end": 13980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13964,
											"end": 13980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13999,
											"end": 14002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13996,
											"end": 13997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13993,
											"end": 14003,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13990,
											"end": 14026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13990,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 13990,
											"end": 14026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14006,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13990,
											"end": 14026,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 13990,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 14033,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 14033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 14033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 14033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 14033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14449,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 14039,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14079,
											"end": 14086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14102,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 14120,
											"end": 14121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14102,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 14102,
											"end": 14122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14102,
											"end": 14122,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 14102,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14097,
											"end": 14122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14097,
											"end": 14122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14136,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 14154,
											"end": 14155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14136,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 14136,
											"end": 14156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14136,
											"end": 14156,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 14136,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14131,
											"end": 14156,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14131,
											"end": 14156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14188,
											"end": 14189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14193,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14213,
											"end": 14243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 14231,
											"end": 14242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14213,
											"end": 14243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 14213,
											"end": 14243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14213,
											"end": 14243,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 14213,
											"end": 14243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14202,
											"end": 14243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14202,
											"end": 14243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14392,
											"end": 14393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14383,
											"end": 14390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14379,
											"end": 14394,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 14376,
											"end": 14377,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14373,
											"end": 14395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14353,
											"end": 14354,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14346,
											"end": 14355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14326,
											"end": 14409,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14422,
											"end": 14440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14087,
											"end": 14449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14449,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14635,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 14455,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14503,
											"end": 14580,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14500,
											"end": 14501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14604,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 14597,
											"end": 14598,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14590,
											"end": 14605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14624,
											"end": 14628,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14621,
											"end": 14622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14614,
											"end": 14629,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14826,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 14641,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14681,
											"end": 14682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 14716,
											"end": 14717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 14698,
											"end": 14718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14693,
											"end": 14718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14693,
											"end": 14718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 14750,
											"end": 14751,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 14732,
											"end": 14752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14727,
											"end": 14752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14727,
											"end": 14752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14771,
											"end": 14772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 14761,
											"end": 14796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 14776,
											"end": 14794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 14796,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 14761,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14818,
											"end": 14819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14815,
											"end": 14816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14811,
											"end": 14820,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 14806,
											"end": 14820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14806,
											"end": 14820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14826,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14832,
											"end": 15012,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 14832,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14957,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14877,
											"end": 14878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14870,
											"end": 14958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 14981,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 14974,
											"end": 14975,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14967,
											"end": 14982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14998,
											"end": 14999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14991,
											"end": 15006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15018,
											"end": 15338,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 15018,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15062,
											"end": 15068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15100,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15101,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 15079,
											"end": 15101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15079,
											"end": 15101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15146,
											"end": 15147,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15140,
											"end": 15144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15136,
											"end": 15148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15157,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 15157,
											"end": 15238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15223,
											"end": 15227,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 15215,
											"end": 15221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15211,
											"end": 15228,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15201,
											"end": 15228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15201,
											"end": 15228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15157,
											"end": 15238,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 15157,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15285,
											"end": 15287,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15277,
											"end": 15283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15274,
											"end": 15288,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15254,
											"end": 15272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15251,
											"end": 15289,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15248,
											"end": 15332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 15248,
											"end": 15332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 15304,
											"end": 15322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15248,
											"end": 15332,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 15248,
											"end": 15332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15069,
											"end": 15338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15018,
											"end": 15338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15018,
											"end": 15338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15018,
											"end": 15338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15018,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15344,
											"end": 15509,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 15344,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "PUSH",
											"source": 6,
											"value": "646561646C696E65526561636865640000000000000000000000000000000000"
										},
										{
											"begin": 15480,
											"end": 15481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15472,
											"end": 15478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15461,
											"end": 15502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15344,
											"end": 15509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15344,
											"end": 15509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15515,
											"end": 15881,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 15515,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15657,
											"end": 15660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 15742,
											"end": 15744,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 15737,
											"end": 15740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 15678,
											"end": 15745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15671,
											"end": 15745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15671,
											"end": 15745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15754,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 15843,
											"end": 15846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15754,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 15754,
											"end": 15847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15754,
											"end": 15847,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 15754,
											"end": 15847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15872,
											"end": 15874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15867,
											"end": 15870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15863,
											"end": 15875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15856,
											"end": 15875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15856,
											"end": 15875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15515,
											"end": 15881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15515,
											"end": 15881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15515,
											"end": 15881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15515,
											"end": 15881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15887,
											"end": 16306,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 15887,
											"end": 16306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16053,
											"end": 16057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 16093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16080,
											"end": 16089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16076,
											"end": 16094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16068,
											"end": 16094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16068,
											"end": 16094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16140,
											"end": 16149,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16134,
											"end": 16138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16130,
											"end": 16150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16126,
											"end": 16127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16124,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16111,
											"end": 16128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16104,
											"end": 16151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16168,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 16294,
											"end": 16298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16168,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 16168,
											"end": 16299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16168,
											"end": 16299,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 16168,
											"end": 16299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16160,
											"end": 16299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16160,
											"end": 16299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15887,
											"end": 16306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15887,
											"end": 16306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15887,
											"end": 16306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15887,
											"end": 16306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16312,
											"end": 16492,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 16312,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16360,
											"end": 16437,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16357,
											"end": 16358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16350,
											"end": 16438,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16457,
											"end": 16461,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 16454,
											"end": 16455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 16447,
											"end": 16462,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16481,
											"end": 16485,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 16478,
											"end": 16479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16486,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16498,
											"end": 16616,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 16498,
											"end": 16616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16585,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 16603,
											"end": 16608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16585,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 16585,
											"end": 16609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16585,
											"end": 16609,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 16585,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16580,
											"end": 16583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16573,
											"end": 16610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16498,
											"end": 16616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16498,
											"end": 16616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16498,
											"end": 16616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16622,
											"end": 16844,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 16622,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16715,
											"end": 16719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16753,
											"end": 16755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16742,
											"end": 16751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16738,
											"end": 16756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16730,
											"end": 16756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16730,
											"end": 16756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16766,
											"end": 16837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 16834,
											"end": 16835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16823,
											"end": 16832,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16819,
											"end": 16836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16810,
											"end": 16816,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16766,
											"end": 16837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 16766,
											"end": 16837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16766,
											"end": 16837,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 16766,
											"end": 16837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16622,
											"end": 16844,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16622,
											"end": 16844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16622,
											"end": 16844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16622,
											"end": 16844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16622,
											"end": 16844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16993,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 16850,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16907,
											"end": 16912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16938,
											"end": 16944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16932,
											"end": 16945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16923,
											"end": 16945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16923,
											"end": 16945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16954,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 16981,
											"end": 16986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16954,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 16954,
											"end": 16987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16954,
											"end": 16987,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 16954,
											"end": 16987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16993,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16993,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16993,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17350,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 16999,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17069,
											"end": 17075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17118,
											"end": 17120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17106,
											"end": 17115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17093,
											"end": 17116,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17089,
											"end": 17121,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 17086,
											"end": 17205,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17086,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 17086,
											"end": 17205,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17124,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 17124,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 17124,
											"end": 17203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17124,
											"end": 17203,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 17124,
											"end": 17203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17086,
											"end": 17205,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 17086,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17244,
											"end": 17245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17269,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 17325,
											"end": 17332,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17316,
											"end": 17322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17305,
											"end": 17314,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17301,
											"end": 17323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17269,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 17269,
											"end": 17333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17269,
											"end": 17333,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 17269,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17259,
											"end": 17333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17259,
											"end": 17333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17215,
											"end": 17343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17350,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17441,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 17356,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17401,
											"end": 17408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17430,
											"end": 17435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17419,
											"end": 17435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17419,
											"end": 17435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17447,
											"end": 17507,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 17447,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17475,
											"end": 17478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17489,
											"end": 17501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17489,
											"end": 17501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17447,
											"end": 17507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17447,
											"end": 17507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17447,
											"end": 17507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17447,
											"end": 17507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17513,
											"end": 17671,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 17513,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17571,
											"end": 17580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17604,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 17622,
											"end": 17664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 17631,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 17657,
											"end": 17662,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17631,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 17631,
											"end": 17663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17631,
											"end": 17663,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 17631,
											"end": 17663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17622,
											"end": 17664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 17622,
											"end": 17664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17622,
											"end": 17664,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 17622,
											"end": 17664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17604,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 17604,
											"end": 17665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17604,
											"end": 17665,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 17604,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17591,
											"end": 17665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17591,
											"end": 17665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17513,
											"end": 17671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17513,
											"end": 17671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17513,
											"end": 17671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17513,
											"end": 17671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17677,
											"end": 17824,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 17677,
											"end": 17824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 17811,
											"end": 17816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 17772,
											"end": 17817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17817,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 17772,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17767,
											"end": 17770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17760,
											"end": 17818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17677,
											"end": 17824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17677,
											"end": 17824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17677,
											"end": 17824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17987,
											"end": 17991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18025,
											"end": 18027,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 18014,
											"end": 18023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18010,
											"end": 18028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18038,
											"end": 18109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 18106,
											"end": 18107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18095,
											"end": 18104,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18091,
											"end": 18108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18082,
											"end": 18088,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 18038,
											"end": 18109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 18038,
											"end": 18109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18038,
											"end": 18109,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 18038,
											"end": 18109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18119,
											"end": 18191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 18187,
											"end": 18189,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18185,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18172,
											"end": 18190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18163,
											"end": 18169,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 18119,
											"end": 18191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 18119,
											"end": 18191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18119,
											"end": 18191,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 18119,
											"end": 18191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 18277,
											"end": 18279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18266,
											"end": 18275,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18262,
											"end": 18280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18253,
											"end": 18259,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 18201,
											"end": 18281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18281,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 18201,
											"end": 18281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17830,
											"end": 18288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18294,
											"end": 18410,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 18294,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18364,
											"end": 18385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 18379,
											"end": 18384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18364,
											"end": 18385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 18364,
											"end": 18385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18364,
											"end": 18385,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 18364,
											"end": 18385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18357,
											"end": 18362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18354,
											"end": 18386,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 18344,
											"end": 18404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 18344,
											"end": 18404,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18400,
											"end": 18401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18397,
											"end": 18398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18390,
											"end": 18402,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 18344,
											"end": 18404,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 18344,
											"end": 18404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18294,
											"end": 18410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18294,
											"end": 18410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18553,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 18416,
											"end": 18553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18470,
											"end": 18475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18495,
											"end": 18508,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18486,
											"end": 18508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18486,
											"end": 18508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18517,
											"end": 18547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 18541,
											"end": 18546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18517,
											"end": 18547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 18517,
											"end": 18547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18517,
											"end": 18547,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 18517,
											"end": 18547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18553,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18904,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 18559,
											"end": 18904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18626,
											"end": 18632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18675,
											"end": 18677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18663,
											"end": 18672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18654,
											"end": 18661,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18650,
											"end": 18673,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18646,
											"end": 18678,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18762,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 18643,
											"end": 18762,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18681,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 18681,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 18681,
											"end": 18760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18681,
											"end": 18760,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 18681,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18762,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 18643,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18801,
											"end": 18802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18826,
											"end": 18887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 18879,
											"end": 18886,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18870,
											"end": 18876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18859,
											"end": 18868,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 18855,
											"end": 18877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18826,
											"end": 18887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 18826,
											"end": 18887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18826,
											"end": 18887,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 18826,
											"end": 18887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18816,
											"end": 18887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18816,
											"end": 18887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18772,
											"end": 18897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18904,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19031,
											"end": 19035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19069,
											"end": 19071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19058,
											"end": 19067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19054,
											"end": 19072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19046,
											"end": 19072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19046,
											"end": 19072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19082,
											"end": 19153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 19150,
											"end": 19151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19139,
											"end": 19148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19135,
											"end": 19152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19126,
											"end": 19132,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19082,
											"end": 19153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 19082,
											"end": 19153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19082,
											"end": 19153,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 19082,
											"end": 19153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19163,
											"end": 19235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 19231,
											"end": 19233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19220,
											"end": 19229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19216,
											"end": 19234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19207,
											"end": 19213,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19163,
											"end": 19235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 19163,
											"end": 19235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19163,
											"end": 19235,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 19163,
											"end": 19235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 19242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19248,
											"end": 19428,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 19248,
											"end": 19428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19296,
											"end": 19373,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19293,
											"end": 19294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19286,
											"end": 19374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19393,
											"end": 19397,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 19390,
											"end": 19391,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19383,
											"end": 19398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19417,
											"end": 19421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 19414,
											"end": 19415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19407,
											"end": 19422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19583,
											"end": 19587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19621,
											"end": 19623,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 19610,
											"end": 19619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19606,
											"end": 19624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19598,
											"end": 19624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19598,
											"end": 19624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19634,
											"end": 19705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 19702,
											"end": 19703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19700,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19687,
											"end": 19704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19678,
											"end": 19684,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 19634,
											"end": 19705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 19634,
											"end": 19705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19634,
											"end": 19705,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 19634,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19715,
											"end": 19787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 19783,
											"end": 19785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19772,
											"end": 19781,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19768,
											"end": 19786,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19759,
											"end": 19765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19715,
											"end": 19787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 19715,
											"end": 19787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19715,
											"end": 19787,
											"name": "tag",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 19715,
											"end": 19787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19797,
											"end": 19869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 19865,
											"end": 19867,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19854,
											"end": 19863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19850,
											"end": 19868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19841,
											"end": 19847,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19797,
											"end": 19869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 19797,
											"end": 19869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19797,
											"end": 19869,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 19797,
											"end": 19869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19434,
											"end": 19876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20031,
											"end": 20035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20069,
											"end": 20071,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 20058,
											"end": 20067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20054,
											"end": 20072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20046,
											"end": 20072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20046,
											"end": 20072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20082,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 20150,
											"end": 20151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20139,
											"end": 20148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20135,
											"end": 20152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20126,
											"end": 20132,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 20082,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 20082,
											"end": 20153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20082,
											"end": 20153,
											"name": "tag",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 20082,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20163,
											"end": 20235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 20231,
											"end": 20233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20220,
											"end": 20229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20216,
											"end": 20234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20207,
											"end": 20213,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 20163,
											"end": 20235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 20163,
											"end": 20235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20163,
											"end": 20235,
											"name": "tag",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 20163,
											"end": 20235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20245,
											"end": 20317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 20313,
											"end": 20315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20302,
											"end": 20311,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20298,
											"end": 20316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20289,
											"end": 20295,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20245,
											"end": 20317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 20245,
											"end": 20317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20245,
											"end": 20317,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 20245,
											"end": 20317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 20324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"name()": "06fdde03",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Mints LP tokens proportionally based on token reserves\",\"params\":{\"amountADesired\":\"Desired amount of token A to add\",\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBDesired\":\"Desired amount of token B to add\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"to\":\"Address to receive LP tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Final amount of token A added\",\"amountB\":\"Final amount of token B added\",\"liquidity\":\"Amount of LP tokens minted\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"Calculates how many tokens will be received in a swap.\",\"params\":{\"amountIn\":\"Input token amount.\",\"reserveIn\":\"Reserve of input token.\",\"reserveOut\":\"Reserve of output token.\"},\"returns\":{\"amountOut\":\"Expected output amount.*\"}},\"getPrice(address,address)\":{\"params\":{\"tokenA\":\"Address of tokenA.\",\"tokenB\":\"Address of tokenB.\"},\"returns\":{\"price\":\"The ratio tokenB/tokenA with 18 decimals.*\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Burns LP tokens in exchange for tokenA and tokenB from the pool\",\"params\":{\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"liquidity\":\"Amount of LP tokens to burn\",\"to\":\"Address to receive tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Amount of token A returned\",\"amountB\":\"Amount of token B returned*\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Uses a simplified pricing formula, not constant product\",\"params\":{\"amountIn\":\"Exact amount of input token to send\",\"amountOutMin\":\"Minimum acceptable amount of output token to receive\",\"deadline\":\"Timestamp after which the transaction is invalid\",\"path\":\"Array with [tokenIn, tokenOut]\",\"to\":\"Recipient address for output token\"},\"returns\":{\"amounts\":\"Array of [amountIn, amountOut]*\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to the pool\"},\"getPrice(address,address)\":{\"notice\":\"Returns the current price of tokenA in terms of tokenB.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity and returns tokens to the user\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps exact amount of input token for as much as possible of output token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleSwap.sol\":\"Simpleswap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"SimpleSwap.sol\":{\"keccak256\":\"0x4b3d95d5581c99e7a32759b43197ae72180c84748505c4e0b43df1e99ecb60ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2d5602e8236a1de6aba7252cfff5b74c09673a3cc8c936129b58232750abd49\",\"dweb:/ipfs/QmPyvSTLaVbP6CnS6opEvPAowJqyELDss2eeZEL7NpHJoo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "SimpleSwap.sol:Simpleswap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "SimpleSwap.sol:Simpleswap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "SimpleSwap.sol:Simpleswap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "SimpleSwap.sol:Simpleswap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "SimpleSwap.sol:Simpleswap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to the pool"
							},
							"getPrice(address,address)": {
								"notice": "Returns the current price of tokenA in terms of tokenB."
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity and returns tokens to the user"
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"notice": "Swaps exact amount of input token for as much as possible of output token"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"SimpleSwap.sol": {
				"ast": {
					"absolutePath": "SimpleSwap.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"Simpleswap": [
							1248
						]
					},
					"id": 1249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 652,
							"src": "59:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "67:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"152:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "152:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "152:5:5"
								}
							],
							"canonicalName": "Simpleswap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1248,
							"linearizedBaseContracts": [
								1248,
								651,
								41,
								755,
								729,
								785
							],
							"name": "Simpleswap",
							"nameLocation": "138:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "194:2:5",
										"statements": []
									},
									"id": 799,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6c69",
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "185:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f994fa65d1b15f58080247b4bc028b7de48b71abe349544252c4692afdb5366e",
														"typeString": "literal_string \"li\""
													},
													"value": "li"
												},
												{
													"hexValue": "6c",
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "190:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6a0d259bd4fb907339fd7c65a133083c1e9554f2ca6325b806612c8df6d7df22",
														"typeString": "literal_string \"l\""
													},
													"value": "l"
												}
											],
											"id": 796,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 793,
												"name": "ERC20",
												"nameLocations": [
													"179:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "179:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "179:15:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:5"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:0:5"
									},
									"scope": 1248,
									"src": "165:31:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "1251:1091:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "1274:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 827,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1285:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1291:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1285:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646561646c696e6552656163686564",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1301:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																"typeString": "literal_string \"deadlineReached\""
															},
															"value": "deadlineReached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																"typeString": "literal_string \"deadlineReached\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1266:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1266:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "1266:54:5"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 833,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1335:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 834,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1347:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1347:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1335:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "1335:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 838,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1378:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1390:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1378:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "1909:147:5",
													"statements": [
														{
															"expression": {
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 908,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1928:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 909,
																	"name": "amountADesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1940:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1928:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 911,
															"nodeType": "ExpressionStatement",
															"src": "1928:26:5"
														},
														{
															"expression": {
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 912,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "1973:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 913,
																	"name": "amountADesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1983:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1973:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 915,
															"nodeType": "ExpressionStatement",
															"src": "1973:24:5"
														},
														{
															"expression": {
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 916,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "2016:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 917,
																	"name": "amountBDesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2026:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "2016:24:5"
														}
													]
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "1375:681:5",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "1392:513:5",
													"statements": [
														{
															"assignments": [
																842
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 842,
																	"mutability": "mutable",
																	"name": "l1",
																	"nameLocation": "1419:2:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 907,
																	"src": "1411:10:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1411:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 857,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 843,
																				"name": "amountADesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "1424:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 844,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "1441:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1424:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 846,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1423:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 853,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1485:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Simpleswap_$1248",
																						"typeString": "contract Simpleswap"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Simpleswap_$1248",
																						"typeString": "contract Simpleswap"
																					}
																				],
																				"id": 852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1477:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 851,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1477:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1477:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 848,
																					"name": "tokenA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "1459:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 847,
																				"name": "ERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "1453:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																					"typeString": "type(contract ERC20)"
																				}
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1453:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1467:9:5",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "1453:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1453:38:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1423:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1411:80:5"
														},
														{
															"assignments": [
																859
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 859,
																	"mutability": "mutable",
																	"name": "l2",
																	"nameLocation": "1518:2:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 907,
																	"src": "1510:10:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1510:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 874,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 860,
																				"name": "amountBDesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "1523:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 861,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "1540:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1523:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 863,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1522:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 870,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1584:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Simpleswap_$1248",
																						"typeString": "contract Simpleswap"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Simpleswap_$1248",
																						"typeString": "contract Simpleswap"
																					}
																				],
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1576:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 868,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1576:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1576:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 865,
																					"name": "tokenB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 804,
																					"src": "1558:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 864,
																				"name": "ERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "1552:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																					"typeString": "type(contract ERC20)"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1552:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1566:9:5",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "1552:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1552:38:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1522:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1510:80:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 875,
																	"name": "l1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "1612:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 876,
																	"name": "l2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "1617:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1612:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 905,
																"nodeType": "Block",
																"src": "1758:132:5",
																"statements": [
																	{
																		"expression": {
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 892,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "1781:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 893,
																				"name": "amountBDesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "1791:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1781:24:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 895,
																		"nodeType": "ExpressionStatement",
																		"src": "1781:24:5"
																	},
																	{
																		"expression": {
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 896,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "1828:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 898,
																							"name": "tokenB",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 804,
																							"src": "1847:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 899,
																							"name": "tokenA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 802,
																							"src": "1855:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 897,
																						"name": "getPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1223,
																						"src": "1838:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address,address) view returns (uint256)"
																						}
																					},
																					"id": 900,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1838:24:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 901,
																					"name": "amountB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 821,
																					"src": "1863:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1838:32:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1828:42:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 904,
																		"nodeType": "ExpressionStatement",
																		"src": "1828:42:5"
																	}
																]
															},
															"id": 906,
															"nodeType": "IfStatement",
															"src": "1609:281:5",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "1621:132:5",
																"statements": [
																	{
																		"expression": {
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 878,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "1644:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 879,
																				"name": "amountADesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "1654:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1644:24:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 881,
																		"nodeType": "ExpressionStatement",
																		"src": "1644:24:5"
																	},
																	{
																		"expression": {
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 882,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "1691:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 884,
																							"name": "tokenA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 802,
																							"src": "1710:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 885,
																							"name": "tokenB",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 804,
																							"src": "1718:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 883,
																						"name": "getPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1223,
																						"src": "1701:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address,address) view returns (uint256)"
																						}
																					},
																					"id": 886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1701:24:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 887,
																					"name": "amountA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 819,
																					"src": "1726:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1701:32:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1691:42:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 890,
																		"nodeType": "ExpressionStatement",
																		"src": "1691:42:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 923,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "2078:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 924,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "2090:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2078:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2070:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2070:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 929,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "2121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 930,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "2134:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2121:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2113:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "2113:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 938,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2184:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2188:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2184:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 942,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2204:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2196:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2196:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2196:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "2210:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 935,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "2163:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 934,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2157:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2157:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2171:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "2157:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "2157:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2260:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2264:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2260:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 955,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2280:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																],
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2272:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2272:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2272:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2287:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 948,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "2239:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 947,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2233:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2233:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2247:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "2233:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "2233:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2316:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2320:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2310:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2310:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2310:20:5"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "203:735:5",
										"text": "@notice Adds liquidity to the pool\n @dev Mints LP tokens proportionally based on token reserves\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param amountADesired Desired amount of token A to add\n @param amountBDesired Desired amount of token B to add\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Address to receive LP tokens\n @param deadline Timestamp after which the transaction is invalid\n @return amountA Final amount of token A added\n @return amountB Final amount of token B added\n @return liquidity Amount of LP tokens minted"
									},
									"functionSelector": "e8e33700",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "953:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "984:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "976:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1010:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1002:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "1033:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1028:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "1063:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1058:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1058:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1094:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1089:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1121:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1116:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1116:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1143:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1170:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1165:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:224:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1213:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1208:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1227:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1241:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1236:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:44:5"
									},
									"scope": 1248,
									"src": "944:1398:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "3396:635:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "3467:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 990,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3478:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3484:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3478:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3467:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646561646c696e6552656163686564",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3495:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																"typeString": "literal_string \"deadlineReached\""
															},
															"value": "deadlineReached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																"typeString": "literal_string \"deadlineReached\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3459:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3459:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "3459:54:5"
											},
											{
												"assignments": [
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "totalLiquidity",
														"nameLocation": "3540:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "3532:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 996,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3532:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 998,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3557:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3532:38:5"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "3591:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1002,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "3601:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1009,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3645:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Simpleswap_$1248",
																					"typeString": "contract Simpleswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Simpleswap_$1248",
																					"typeString": "contract Simpleswap"
																				}
																			],
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3637:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1007,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3637:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1004,
																				"name": "tokenA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "3619:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1003,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "3613:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3613:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$651",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3627:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 237,
																	"src": "3613:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3613:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3601:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1013,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3652:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3601:65:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3591:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "3591:75:5"
											},
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "3685:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "3695:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1025,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3739:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Simpleswap_$1248",
																					"typeString": "contract Simpleswap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Simpleswap_$1248",
																					"typeString": "contract Simpleswap"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3731:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3731:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3731:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1020,
																				"name": "tokenB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "3713:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1019,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "3707:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3707:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$651",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3721:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 237,
																	"src": "3707:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3707:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3695:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1029,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3746:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3695:65:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3685:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "3685:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "3789:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1035,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "3801:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3789:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3781:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3781:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "3781:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1040,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "3836:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1041,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "3849:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3836:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3828:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "3828:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3884:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3888:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3884:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "3896:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3878:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3878:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "3878:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3948:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "3952:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1052,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "3931:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1051,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "3925:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3925:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3939:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "3925:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3925:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "3925:35:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1063,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4002:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "4005:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1060,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "3985:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1059,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "3979:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3979:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3993:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "3979:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3979:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "3979:34:5"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "2356:722:5",
										"text": "@notice Removes liquidity and returns tokens to the user\n @dev Burns LP tokens in exchange for tokenA and tokenB from the pool\n @param tokenA Address of token A\n @param tokenB Address of token B\n  @param liquidity Amount of LP tokens to burn\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Address to receive tokens\n @param deadline Timestamp after which the transaction is invalid\n@return amountA Amount of token A returned\n@return amountB Amount of token B returned*"
									},
									"functionSelector": "baa2abde",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3114:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3152:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3144:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3182:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3174:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3209:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3204:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3204:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "3239:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3234:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3234:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "3270:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3265:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3304:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3296:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3327:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3322:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3322:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:221:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3374:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3369:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3369:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3388:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3383:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3383:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:28:5"
									},
									"scope": 1248,
									"src": "3105:926:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "4925:712:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "4956:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1088,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4967:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4973:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4967:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4956:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646561646c696e6552656163686564",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																"typeString": "literal_string \"deadlineReached\""
															},
															"value": "deadlineReached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba088f2f43a548ac8d5a2dd3312b6595c0074772634e5c4b1f1efe24fe03d121",
																"typeString": "literal_string \"deadlineReached\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4948:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4948:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "4948:54:5"
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "tokenA",
														"nameLocation": "5079:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "5073:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1095,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1094,
																"name": "ERC20",
																"nameLocations": [
																	"5073:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 651,
																"src": "5073:5:5"
															},
															"referencedDeclaration": 651,
															"src": "5073:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1098,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "5094:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 1100,
															"indexExpression": {
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5099:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5094:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1097,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "5088:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5088:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5073:29:5"
											},
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"mutability": "mutable",
														"name": "tokenB",
														"nameLocation": "5131:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "5125:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1104,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1103,
																"name": "ERC20",
																"nameLocations": [
																	"5125:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 651,
																"src": "5125:5:5"
															},
															"referencedDeclaration": 651,
															"src": "5125:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1107,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "5146:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 1109,
															"indexExpression": {
																"hexValue": "31",
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5151:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5146:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1106,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "5140:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5125:29:5"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "5207:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "5199:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5199:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1114,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "5219:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1119,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5255:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Simpleswap_$1248",
																				"typeString": "contract Simpleswap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Simpleswap_$1248",
																				"typeString": "contract Simpleswap"
																			}
																		],
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5247:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1117,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5247:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5247:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1115,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "5230:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5237:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "5230:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5230:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5219:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1123,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "5263:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1128,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5297:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Simpleswap_$1248",
																						"typeString": "contract Simpleswap"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Simpleswap_$1248",
																						"typeString": "contract Simpleswap"
																					}
																				],
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5289:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1126,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5289:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5289:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1124,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "5272:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5279:9:5",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "5272:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5272:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5263:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1132,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5262:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5219:85:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5199:105:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1136,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "5335:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1137,
																"name": "amountOutMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "5346:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5335:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5327:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5327:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "5327:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5402:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5406:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5402:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1148,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5422:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																],
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5414:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5414:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5414:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5428:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1141,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "5382:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5389:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "5382:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5382:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "5382:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "5469:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "5473:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1153,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "5453:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5460:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "5453:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5453:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "5453:30:5"
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1160,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "5506:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5527:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "5516:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1161,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "5520:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1162,
																"nodeType": "ArrayTypeName",
																"src": "5520:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5516:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "5506:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "5506:23:5"
											},
											{
												"expression": {
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1168,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "5552:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1170,
														"indexExpression": {
															"hexValue": "30",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5560:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5552:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1171,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "5565:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5552:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "5552:21:5"
											},
											{
												"expression": {
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1174,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "5596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1176,
														"indexExpression": {
															"hexValue": "31",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5604:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5596:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1177,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "5608:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5596:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "5596:21:5"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "4043:598:5",
										"text": "@notice Swaps exact amount of input token for as much as possible of output token\n@dev Uses a simplified pricing formula, not constant product\n@param amountIn Exact amount of input token to send\n@param amountOutMin Minimum acceptable amount of output token to receive\n@param path Array with [tokenIn, tokenOut]\n@param to Recipient address for output token\n@param deadline Timestamp after which the transaction is invalid\n@return amounts Array of [amountIn, amountOut]*"
									},
									"functionSelector": "38ed1739",
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "4666:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4714:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4709:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4709:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "4747:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4742:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4798:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4779:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1074,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4779:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1075,
													"nodeType": "ArrayTypeName",
													"src": "4779:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4830:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4822:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4857:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4852:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:194:5"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4917:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4903:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1082,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "4903:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1083,
													"nodeType": "ArrayTypeName",
													"src": "4903:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4902:23:5"
									},
									"scope": 1248,
									"src": "4657:980:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "6048:278:5",
										"statements": [
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "amount1",
														"nameLocation": "6127:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "6119:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6119:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1199,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6169:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6161:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1197,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6161:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6161:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1194,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "6143:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1193,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "6137:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6137:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6151:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "6137:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6137:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6119:56:5"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "amount2",
														"nameLocation": "6206:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "6198:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1203,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6198:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1211,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6248:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Simpleswap_$1248",
																		"typeString": "contract Simpleswap"
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6240:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1209,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6240:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6240:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1206,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "6222:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1205,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "6216:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6230:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "6216:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6216:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6198:56:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "amount2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "6285:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6293:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "6285:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6284:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1219,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "6299:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6284:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1190,
												"id": 1221,
												"nodeType": "Return",
												"src": "6277:29:5"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "5655:291:5",
										"text": " @notice Returns the current price of tokenA in terms of tokenB.\n @param tokenA Address of tokenA.\n @param tokenB Address of tokenB.\n @return price The ratio tokenB/tokenA with 18 decimals.*"
									},
									"functionSelector": "ac41865a",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "5975:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5992:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5984:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6008:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "6000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6000:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:32:5"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6042:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "6037:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6037:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:12:5"
									},
									"scope": 1248,
									"src": "5966:360:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "6826:145:5",
										"statements": [
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "6897:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "6909:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1237,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "6920:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6909:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1239,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "6932:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1240,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "6941:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6932:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6931:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6909:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6897:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "6897:54:5"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "6346:352:5",
										"text": " @dev Calculates how many tokens will be received in a swap.\n @param amountIn Input token amount.\n @param reserveIn Reserve of input token.\n @param reserveOut Reserve of output token.\n @return amountOut Expected output amount.*"
									},
									"functionSelector": "054d50d4",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "6727:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6745:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "6740:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "6760:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "6755:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6755:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "6776:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "6771:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6739:48:5"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "6816:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "6811:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6811:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:16:5"
									},
									"scope": 1248,
									"src": "6718:253:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1249,
							"src": "129:6865:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:6961:5"
				},
				"id": 5
			}
		}
	}
}